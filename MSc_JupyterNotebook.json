{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center> <img src=\"figs/logounesp\" alt=\"Logo UNESP\" width=\"110\" align=\"left\"/> <font size=\"20\"> <br><center>Mestrado Acadêmico<br/></p> <br><font size=\"4\"> <br><center>Programa de Pós-Graduação em Engenharia Elétrica<br/></p><br><center>Faculdade de Engenharia de Bauru (FEB)<br/></p><br><center>Faculdade de Ciências (FC)<br/></p>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center>Método Híbrido Para Solução do Problema de Fluxo de Potência Ótimo Reativo Com Variáveis Discretas<br/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### <center><font size=\"4\">Aluno:</center></font></p> <br><center>Rafael Pavan</center></br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### <center><font size=\"4\">Orientador:</center></font></p> <br><center>Profª Drª Edilaine Martins Soler</center></br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center>Implementação Computacional</center>\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1. Visualização de Dados do Sistema Elétrico de Potência\n",
    "\n",
    "    1.1 IEEE 14 Barras;\n",
    "    1.2 IEEE 30 Barras;\n",
    "    1.3 IEEE 118 Barras;\n",
    "    1.4 IEEE 300 Barras;\n",
    "    \n",
    "#### 2. Funções Para Manipulação e Extração de Dados do Sistema Elétrico de Potência\n",
    "\n",
    "    2.1 Função Para Inicalizar o Sistema Elétrico;\n",
    "    2.2 Função Para Calcular As Condutâncias de Linha do Sistema;\n",
    "    2.3 Função Para Coletar Tensões Das Barras e Seus Respectivos Limites Inferiores e Superiores;\n",
    "    2.4 Função Para Coletar Tensões e Potências Das Barras de Geração/Controle de Reativo e Seus Respectivos               Limites Inferiores e Superiores;\n",
    "    2.5 Função Objetivo Para Calcular as Perdas de Potência Ativa nas Linhas de Transmissão;\n",
    "    2.6 Função Para Calcular a Penalização por Ultrapassagem de Tensão;\n",
    "    2.7 Função Para Calcular a Penalização por Ultrapassagem de Geração de Reativo dos Geradores;\n",
    "    2.8 Função Para Coletar Dados de Carregamento e TAP dos Trafos\n",
    "    2.9 Função Para Coletar Dados dos Reativos Shunt;\n",
    "    2.10 Função Para Converter TAPs;\n",
    "    2.11 Função Para Criar Alcateia;\n",
    "    2.12 Função Para Criar Enxame;\n",
    "    2.13 Função para Calcular o Fluxo de Potência;\n",
    "    2.14 Função para Calcular o Fitness;\n",
    "    2.15 Função para Validação (Salva Dados no SEP);\n",
    "    \n",
    "#### 3. Implementação de Métodos de Otimização Meta-Heurísticos\n",
    "    \n",
    "    3.1 Método Alcateia de Lobos Cinzentos (Gray Wolf Optimizer);\n",
    "    3.2 Método Enxame de Partículas (Particle Swarm Optimization);    \n",
    "    3.3 Em Andamento: Algoritmo Genético, Algoritmo GWO/PSO Híbrido\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        \n",
    "    \n",
    "#### 4. Protocolo Experimental Com Métodos Meta-Heurísticos\n",
    "\n",
    "    4.1 Em Andamento\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "        .\n",
    "       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandapower as pp\n",
    "import time\n",
    "import random\n",
    "from pandapower.networks import case14, case_ieee30, case118, case300\n",
    "import pandapower.plotting as pplot\n",
    "import tabulate\n",
    "import numba\n",
    "from numba import njit\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (20.0, 10.0)\n",
    "plt.rcParams['font.family'] = \"serif\"\n",
    "font = {'size'   : 13}\n",
    "plt.rc('font', **font)\n",
    "plt.rc('xtick', labelsize=10) \n",
    "plt.rc('ytick', labelsize=10) \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  1. Visualização dos Dados dos Sistemas Elétricos de Potência\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "metadata": {},
   "outputs": [],
   "source": [
    "sep14 = case14()\n",
    "sep30 = case_ieee30()\n",
    "sep118 = case118()\n",
    "sep300 = case300()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.1 Sistema de 14 Barras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9e73e822d0>"
      ]
     },
     "execution_count": 241,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pplot.simple_plot(sep14,plot_loads=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "This pandapower network includes the following parameter tables:\n",
       "   - bus (14 elements)\n",
       "   - load (11 elements)\n",
       "   - gen (4 elements)\n",
       "   - shunt (1 element)\n",
       "   - ext_grid (1 element)\n",
       "   - line (15 elements)\n",
       "   - trafo (5 elements)\n",
       "   - poly_cost (5 elements)\n",
       "   - bus_geodata (14 elements)\n",
       " and the following results tables:\n",
       "   - res_bus (14 elements)\n",
       "   - res_line (15 elements)\n",
       "   - res_trafo (5 elements)\n",
       "   - res_ext_grid (1 element)\n",
       "   - res_load (11 elements)\n",
       "   - res_shunt (1 element)\n",
       "   - res_gen (4 elements)"
      ]
     },
     "execution_count": 242,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pp.runpp(sep14, algorithm = 'nr')\n",
    "sep14"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>in_service</th>\n",
       "      <th>max_vm_pu</th>\n",
       "      <th>min_vm_pu</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>zone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>1</td>\n",
       "      <td>b</td>\n",
       "      <td>135.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>2</td>\n",
       "      <td>b</td>\n",
       "      <td>135.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>11</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>12</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>13</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>14</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>3</td>\n",
       "      <td>b</td>\n",
       "      <td>135.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>4</td>\n",
       "      <td>b</td>\n",
       "      <td>135.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>5</td>\n",
       "      <td>b</td>\n",
       "      <td>135.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>6</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>7</td>\n",
       "      <td>b</td>\n",
       "      <td>14.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>8</td>\n",
       "      <td>b</td>\n",
       "      <td>12.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>9</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>10</td>\n",
       "      <td>b</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    in_service  max_vm_pu  min_vm_pu name type    vn_kv zone\n",
       "0         True       1.06       0.94    1    b  135.000    1\n",
       "1         True       1.06       0.94    2    b  135.000    1\n",
       "10        True       1.06       0.94   11    b    0.208    1\n",
       "11        True       1.06       0.94   12    b    0.208    1\n",
       "12        True       1.06       0.94   13    b    0.208    1\n",
       "13        True       1.06       0.94   14    b    0.208    1\n",
       "2         True       1.06       0.94    3    b  135.000    1\n",
       "3         True       1.06       0.94    4    b  135.000    1\n",
       "4         True       1.06       0.94    5    b  135.000    1\n",
       "5         True       1.06       0.94    6    b    0.208    1\n",
       "6         True       1.06       0.94    7    b   14.000    1\n",
       "7         True       1.06       0.94    8    b   12.000    1\n",
       "8         True       1.06       0.94    9    b    0.208    1\n",
       "9         True       1.06       0.94   10    b    0.208    1"
      ]
     },
     "execution_count": 243,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.060000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-232.393272</td>\n",
       "      <td>16.549301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.045000</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>-18.300000</td>\n",
       "      <td>-30.857100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.056907</td>\n",
       "      <td>-14.790622</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>1.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.055189</td>\n",
       "      <td>-15.075585</td>\n",
       "      <td>6.100000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.050382</td>\n",
       "      <td>-15.156276</td>\n",
       "      <td>13.500000</td>\n",
       "      <td>5.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1.035530</td>\n",
       "      <td>-16.033645</td>\n",
       "      <td>14.900000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>-12.725100</td>\n",
       "      <td>94.200000</td>\n",
       "      <td>-6.075348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.017671</td>\n",
       "      <td>-10.312901</td>\n",
       "      <td>47.800000</td>\n",
       "      <td>-3.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.019514</td>\n",
       "      <td>-8.773854</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.070000</td>\n",
       "      <td>-14.220946</td>\n",
       "      <td>11.200000</td>\n",
       "      <td>-5.230944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.061520</td>\n",
       "      <td>-13.359627</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.090000</td>\n",
       "      <td>-13.359627</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-17.623451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.055932</td>\n",
       "      <td>-14.938521</td>\n",
       "      <td>29.500000</td>\n",
       "      <td>-4.584844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.050985</td>\n",
       "      <td>-15.097288</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>5.800000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       vm_pu  va_degree        p_mw     q_mvar\n",
       "0   1.060000   0.000000 -232.393272  16.549301\n",
       "1   1.045000  -4.982589  -18.300000 -30.857100\n",
       "10  1.056907 -14.790622    3.500000   1.800000\n",
       "11  1.055189 -15.075585    6.100000   1.600000\n",
       "12  1.050382 -15.156276   13.500000   5.800000\n",
       "13  1.035530 -16.033645   14.900000   5.000000\n",
       "2   1.010000 -12.725100   94.200000  -6.075348\n",
       "3   1.017671 -10.312901   47.800000  -3.900000\n",
       "4   1.019514  -8.773854    7.600000   1.600000\n",
       "5   1.070000 -14.220946   11.200000  -5.230944\n",
       "6   1.061520 -13.359627    0.000000   0.000000\n",
       "7   1.090000 -13.359627    0.000000 -17.623451\n",
       "8   1.055932 -14.938521   29.500000  -4.584844\n",
       "9   1.050985 -15.097288    9.000000   5.800000"
      ]
     },
     "execution_count": 244,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.res_bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.06</td>\n",
       "      <td>332.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  in_service  name  va_degree  vm_pu  max_p_mw  min_p_mw  max_q_mvar  \\\n",
       "0    0        True  None        0.0   1.06     332.4       0.0        10.0   \n",
       "\n",
       "   min_q_mvar  \n",
       "0         0.0  "
      ]
     },
     "execution_count": 245,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.ext_grid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>232.393272</td>\n",
       "      <td>-16.549301</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         p_mw     q_mvar\n",
       "0  232.393272 -16.549301"
      ]
     },
     "execution_count": 246,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.res_ext_grid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>controllable</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>scaling</th>\n",
       "      <th>sn_mva</th>\n",
       "      <th>type</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>slack</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.045</td>\n",
       "      <td>False</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.070</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>-6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.090</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>-6.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  controllable  in_service  name  p_mw  scaling  sn_mva  type  vm_pu  \\\n",
       "0    1          True        True  None  40.0      1.0     NaN  None  1.045   \n",
       "1    2          True        True  None   0.0      1.0     NaN  None  1.010   \n",
       "2    5          True        True  None   0.0      1.0     NaN  None  1.070   \n",
       "3    7          True        True  None   0.0      1.0     NaN  None  1.090   \n",
       "\n",
       "   slack  max_p_mw  min_p_mw  max_q_mvar  min_q_mvar  \n",
       "0  False     140.0       0.0        50.0       -40.0  \n",
       "1  False     100.0       0.0        40.0         0.0  \n",
       "2  False     100.0       0.0        24.0        -6.0  \n",
       "3  False     100.0       0.0        24.0        -6.0  "
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>vm_pu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.0</td>\n",
       "      <td>43.557100</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>1.045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>25.075348</td>\n",
       "      <td>-12.725100</td>\n",
       "      <td>1.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>12.730944</td>\n",
       "      <td>-14.220946</td>\n",
       "      <td>1.070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>17.623451</td>\n",
       "      <td>-13.359627</td>\n",
       "      <td>1.090</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   p_mw     q_mvar  va_degree  vm_pu\n",
       "0  40.0  43.557100  -4.982589  1.045\n",
       "1   0.0  25.075348 -12.725100  1.010\n",
       "2   0.0  12.730944 -14.220946  1.070\n",
       "3   0.0  17.623451 -13.359627  1.090"
      ]
     },
     "execution_count": 248,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.res_gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_from_mw</th>\n",
       "      <th>q_from_mvar</th>\n",
       "      <th>p_to_mw</th>\n",
       "      <th>q_to_mvar</th>\n",
       "      <th>pl_mw</th>\n",
       "      <th>ql_mvar</th>\n",
       "      <th>i_from_ka</th>\n",
       "      <th>i_to_ka</th>\n",
       "      <th>i_ka</th>\n",
       "      <th>vm_from_pu</th>\n",
       "      <th>va_from_degree</th>\n",
       "      <th>vm_to_pu</th>\n",
       "      <th>va_to_degree</th>\n",
       "      <th>loading_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>156.882891</td>\n",
       "      <td>-20.404292</td>\n",
       "      <td>-152.585290</td>\n",
       "      <td>27.676250</td>\n",
       "      <td>4.297600</td>\n",
       "      <td>7.271958</td>\n",
       "      <td>0.638290</td>\n",
       "      <td>0.634645</td>\n",
       "      <td>0.638290</td>\n",
       "      <td>1.060000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.045000</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>1.507568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>75.510382</td>\n",
       "      <td>3.854991</td>\n",
       "      <td>-72.747509</td>\n",
       "      <td>2.229359</td>\n",
       "      <td>2.762873</td>\n",
       "      <td>6.084350</td>\n",
       "      <td>0.305050</td>\n",
       "      <td>0.305305</td>\n",
       "      <td>0.305305</td>\n",
       "      <td>1.060000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.019514</td>\n",
       "      <td>-8.773854</td>\n",
       "      <td>0.721097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5.227552</td>\n",
       "      <td>4.219138</td>\n",
       "      <td>-5.214678</td>\n",
       "      <td>-4.184937</td>\n",
       "      <td>0.012875</td>\n",
       "      <td>0.034201</td>\n",
       "      <td>17.658967</td>\n",
       "      <td>17.658967</td>\n",
       "      <td>17.658967</td>\n",
       "      <td>1.055932</td>\n",
       "      <td>-14.938521</td>\n",
       "      <td>1.050985</td>\n",
       "      <td>-15.097288</td>\n",
       "      <td>0.064262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9.426381</td>\n",
       "      <td>3.610006</td>\n",
       "      <td>-9.310227</td>\n",
       "      <td>-3.362931</td>\n",
       "      <td>0.116154</td>\n",
       "      <td>0.247075</td>\n",
       "      <td>26.534043</td>\n",
       "      <td>26.534043</td>\n",
       "      <td>26.534043</td>\n",
       "      <td>1.055932</td>\n",
       "      <td>-14.938521</td>\n",
       "      <td>1.035530</td>\n",
       "      <td>-16.033645</td>\n",
       "      <td>0.096559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>-3.785322</td>\n",
       "      <td>-1.615063</td>\n",
       "      <td>3.797904</td>\n",
       "      <td>1.644514</td>\n",
       "      <td>0.012581</td>\n",
       "      <td>0.029451</td>\n",
       "      <td>10.869239</td>\n",
       "      <td>10.869239</td>\n",
       "      <td>10.869239</td>\n",
       "      <td>1.050985</td>\n",
       "      <td>-15.097288</td>\n",
       "      <td>1.056907</td>\n",
       "      <td>-14.790622</td>\n",
       "      <td>0.039554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1.614258</td>\n",
       "      <td>0.753959</td>\n",
       "      <td>-1.607960</td>\n",
       "      <td>-0.748261</td>\n",
       "      <td>0.006298</td>\n",
       "      <td>0.005698</td>\n",
       "      <td>4.686717</td>\n",
       "      <td>4.686717</td>\n",
       "      <td>4.686717</td>\n",
       "      <td>1.055189</td>\n",
       "      <td>-15.075585</td>\n",
       "      <td>1.050382</td>\n",
       "      <td>-15.156276</td>\n",
       "      <td>0.017055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5.643851</td>\n",
       "      <td>1.747174</td>\n",
       "      <td>-5.589773</td>\n",
       "      <td>-1.637069</td>\n",
       "      <td>0.054078</td>\n",
       "      <td>0.110105</td>\n",
       "      <td>15.612659</td>\n",
       "      <td>15.612659</td>\n",
       "      <td>15.612659</td>\n",
       "      <td>1.050382</td>\n",
       "      <td>-15.156276</td>\n",
       "      <td>1.035530</td>\n",
       "      <td>-16.033645</td>\n",
       "      <td>0.056815</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>73.237579</td>\n",
       "      <td>3.560203</td>\n",
       "      <td>-70.914310</td>\n",
       "      <td>1.602233</td>\n",
       "      <td>2.323269</td>\n",
       "      <td>5.162436</td>\n",
       "      <td>0.300079</td>\n",
       "      <td>0.300351</td>\n",
       "      <td>0.300351</td>\n",
       "      <td>1.045000</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>1.010000</td>\n",
       "      <td>-12.725100</td>\n",
       "      <td>0.709395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>56.131496</td>\n",
       "      <td>-1.550350</td>\n",
       "      <td>-54.454838</td>\n",
       "      <td>3.020687</td>\n",
       "      <td>1.676658</td>\n",
       "      <td>1.470337</td>\n",
       "      <td>0.229806</td>\n",
       "      <td>0.229193</td>\n",
       "      <td>0.229806</td>\n",
       "      <td>1.045000</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>1.017671</td>\n",
       "      <td>-10.312901</td>\n",
       "      <td>0.542776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>41.516215</td>\n",
       "      <td>1.170998</td>\n",
       "      <td>-40.612462</td>\n",
       "      <td>-2.099034</td>\n",
       "      <td>0.903753</td>\n",
       "      <td>-0.928036</td>\n",
       "      <td>0.169973</td>\n",
       "      <td>0.170589</td>\n",
       "      <td>0.170589</td>\n",
       "      <td>1.045000</td>\n",
       "      <td>-4.982589</td>\n",
       "      <td>1.019514</td>\n",
       "      <td>-8.773854</td>\n",
       "      <td>0.402912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-23.285690</td>\n",
       "      <td>4.473116</td>\n",
       "      <td>23.659135</td>\n",
       "      <td>-4.835652</td>\n",
       "      <td>0.373445</td>\n",
       "      <td>-0.362537</td>\n",
       "      <td>0.100402</td>\n",
       "      <td>0.101481</td>\n",
       "      <td>0.101481</td>\n",
       "      <td>1.010000</td>\n",
       "      <td>-12.725100</td>\n",
       "      <td>1.017671</td>\n",
       "      <td>-10.312901</td>\n",
       "      <td>0.239686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>-61.158230</td>\n",
       "      <td>15.823642</td>\n",
       "      <td>61.672650</td>\n",
       "      <td>-14.201005</td>\n",
       "      <td>0.514420</td>\n",
       "      <td>1.622637</td>\n",
       "      <td>0.265475</td>\n",
       "      <td>0.265475</td>\n",
       "      <td>0.265475</td>\n",
       "      <td>1.017671</td>\n",
       "      <td>-10.312901</td>\n",
       "      <td>1.019514</td>\n",
       "      <td>-8.773854</td>\n",
       "      <td>0.627022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7.353277</td>\n",
       "      <td>3.560473</td>\n",
       "      <td>-7.297904</td>\n",
       "      <td>-3.444514</td>\n",
       "      <td>0.055373</td>\n",
       "      <td>0.115959</td>\n",
       "      <td>21.193869</td>\n",
       "      <td>21.193869</td>\n",
       "      <td>21.193869</td>\n",
       "      <td>1.070000</td>\n",
       "      <td>-14.220946</td>\n",
       "      <td>1.056907</td>\n",
       "      <td>-14.790622</td>\n",
       "      <td>0.077126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>7.786067</td>\n",
       "      <td>2.503414</td>\n",
       "      <td>-7.714258</td>\n",
       "      <td>-2.353959</td>\n",
       "      <td>0.071809</td>\n",
       "      <td>0.149455</td>\n",
       "      <td>21.216445</td>\n",
       "      <td>21.216445</td>\n",
       "      <td>21.216445</td>\n",
       "      <td>1.070000</td>\n",
       "      <td>-14.220946</td>\n",
       "      <td>1.055189</td>\n",
       "      <td>-15.075585</td>\n",
       "      <td>0.077208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>17.747977</td>\n",
       "      <td>7.216575</td>\n",
       "      <td>-17.535891</td>\n",
       "      <td>-6.798913</td>\n",
       "      <td>0.212085</td>\n",
       "      <td>0.417662</td>\n",
       "      <td>49.701157</td>\n",
       "      <td>49.701157</td>\n",
       "      <td>49.701157</td>\n",
       "      <td>1.070000</td>\n",
       "      <td>-14.220946</td>\n",
       "      <td>1.050382</td>\n",
       "      <td>-15.156276</td>\n",
       "      <td>0.180865</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     p_from_mw  q_from_mvar     p_to_mw  q_to_mvar     pl_mw   ql_mvar  \\\n",
       "0   156.882891   -20.404292 -152.585290  27.676250  4.297600  7.271958   \n",
       "1    75.510382     3.854991  -72.747509   2.229359  2.762873  6.084350   \n",
       "10    5.227552     4.219138   -5.214678  -4.184937  0.012875  0.034201   \n",
       "11    9.426381     3.610006   -9.310227  -3.362931  0.116154  0.247075   \n",
       "12   -3.785322    -1.615063    3.797904   1.644514  0.012581  0.029451   \n",
       "13    1.614258     0.753959   -1.607960  -0.748261  0.006298  0.005698   \n",
       "14    5.643851     1.747174   -5.589773  -1.637069  0.054078  0.110105   \n",
       "2    73.237579     3.560203  -70.914310   1.602233  2.323269  5.162436   \n",
       "3    56.131496    -1.550350  -54.454838   3.020687  1.676658  1.470337   \n",
       "4    41.516215     1.170998  -40.612462  -2.099034  0.903753 -0.928036   \n",
       "5   -23.285690     4.473116   23.659135  -4.835652  0.373445 -0.362537   \n",
       "6   -61.158230    15.823642   61.672650 -14.201005  0.514420  1.622637   \n",
       "7     7.353277     3.560473   -7.297904  -3.444514  0.055373  0.115959   \n",
       "8     7.786067     2.503414   -7.714258  -2.353959  0.071809  0.149455   \n",
       "9    17.747977     7.216575  -17.535891  -6.798913  0.212085  0.417662   \n",
       "\n",
       "    i_from_ka    i_to_ka       i_ka  vm_from_pu  va_from_degree  vm_to_pu  \\\n",
       "0    0.638290   0.634645   0.638290    1.060000        0.000000  1.045000   \n",
       "1    0.305050   0.305305   0.305305    1.060000        0.000000  1.019514   \n",
       "10  17.658967  17.658967  17.658967    1.055932      -14.938521  1.050985   \n",
       "11  26.534043  26.534043  26.534043    1.055932      -14.938521  1.035530   \n",
       "12  10.869239  10.869239  10.869239    1.050985      -15.097288  1.056907   \n",
       "13   4.686717   4.686717   4.686717    1.055189      -15.075585  1.050382   \n",
       "14  15.612659  15.612659  15.612659    1.050382      -15.156276  1.035530   \n",
       "2    0.300079   0.300351   0.300351    1.045000       -4.982589  1.010000   \n",
       "3    0.229806   0.229193   0.229806    1.045000       -4.982589  1.017671   \n",
       "4    0.169973   0.170589   0.170589    1.045000       -4.982589  1.019514   \n",
       "5    0.100402   0.101481   0.101481    1.010000      -12.725100  1.017671   \n",
       "6    0.265475   0.265475   0.265475    1.017671      -10.312901  1.019514   \n",
       "7   21.193869  21.193869  21.193869    1.070000      -14.220946  1.056907   \n",
       "8   21.216445  21.216445  21.216445    1.070000      -14.220946  1.055189   \n",
       "9   49.701157  49.701157  49.701157    1.070000      -14.220946  1.050382   \n",
       "\n",
       "    va_to_degree  loading_percent  \n",
       "0      -4.982589         1.507568  \n",
       "1      -8.773854         0.721097  \n",
       "10    -15.097288         0.064262  \n",
       "11    -16.033645         0.096559  \n",
       "12    -14.790622         0.039554  \n",
       "13    -15.156276         0.017055  \n",
       "14    -16.033645         0.056815  \n",
       "2     -12.725100         0.709395  \n",
       "3     -10.312901         0.542776  \n",
       "4      -8.773854         0.402912  \n",
       "5     -10.312901         0.239686  \n",
       "6      -8.773854         0.627022  \n",
       "7     -14.790622         0.077126  \n",
       "8     -15.075585         0.077208  \n",
       "9     -15.156276         0.180865  "
      ]
     },
     "execution_count": 249,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.res_line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>c_nf_per_km</th>\n",
       "      <th>df</th>\n",
       "      <th>from_bus</th>\n",
       "      <th>g_us_per_km</th>\n",
       "      <th>in_service</th>\n",
       "      <th>length_km</th>\n",
       "      <th>max_i_ka</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>r_ohm_per_km</th>\n",
       "      <th>std_type</th>\n",
       "      <th>to_bus</th>\n",
       "      <th>type</th>\n",
       "      <th>x_ohm_per_km</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>768.484773</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>3.532005</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>ol</td>\n",
       "      <td>10.783732</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>716.088084</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>9.846967</td>\n",
       "      <td>None</td>\n",
       "      <td>4</td>\n",
       "      <td>ol</td>\n",
       "      <td>40.649040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>None</td>\n",
       "      <td>9</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000055</td>\n",
       "      <td>None</td>\n",
       "      <td>13</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000035</td>\n",
       "      <td>None</td>\n",
       "      <td>10</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>None</td>\n",
       "      <td>12</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000074</td>\n",
       "      <td>None</td>\n",
       "      <td>13</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>637.493051</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>8.563928</td>\n",
       "      <td>None</td>\n",
       "      <td>2</td>\n",
       "      <td>ol</td>\n",
       "      <td>36.080033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>494.857619</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>10.590547</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>ol</td>\n",
       "      <td>32.134320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>503.590401</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>10.379138</td>\n",
       "      <td>None</td>\n",
       "      <td>4</td>\n",
       "      <td>ol</td>\n",
       "      <td>31.689630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>186.299339</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>12.212573</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>ol</td>\n",
       "      <td>31.170217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.339020</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.433038</td>\n",
       "      <td>None</td>\n",
       "      <td>4</td>\n",
       "      <td>ol</td>\n",
       "      <td>7.674548</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>None</td>\n",
       "      <td>10</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000053</td>\n",
       "      <td>None</td>\n",
       "      <td>11</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27479.652235</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000029</td>\n",
       "      <td>None</td>\n",
       "      <td>12</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.000056</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    c_nf_per_km   df  from_bus  g_us_per_km  in_service  length_km  \\\n",
       "0    768.484773  1.0         0          0.0        True        1.0   \n",
       "1    716.088084  1.0         0          0.0        True        1.0   \n",
       "10     0.000000  1.0         8          0.0        True        1.0   \n",
       "11     0.000000  1.0         8          0.0        True        1.0   \n",
       "12     0.000000  1.0         9          0.0        True        1.0   \n",
       "13     0.000000  1.0        11          0.0        True        1.0   \n",
       "14     0.000000  1.0        12          0.0        True        1.0   \n",
       "2    637.493051  1.0         1          0.0        True        1.0   \n",
       "3    494.857619  1.0         1          0.0        True        1.0   \n",
       "4    503.590401  1.0         1          0.0        True        1.0   \n",
       "5    186.299339  1.0         2          0.0        True        1.0   \n",
       "6      0.000000  1.0         3          0.0        True        1.0   \n",
       "7      0.000000  1.0         5          0.0        True        1.0   \n",
       "8      0.000000  1.0         5          0.0        True        1.0   \n",
       "9      0.000000  1.0         5          0.0        True        1.0   \n",
       "\n",
       "        max_i_ka  max_loading_percent  name  parallel  r_ohm_per_km std_type  \\\n",
       "0      42.339020                100.0  None         1      3.532005     None   \n",
       "1      42.339020                100.0  None         1      9.846967     None   \n",
       "10  27479.652235                100.0  None         1      0.000014     None   \n",
       "11  27479.652235                100.0  None         1      0.000055     None   \n",
       "12  27479.652235                100.0  None         1      0.000035     None   \n",
       "13  27479.652235                100.0  None         1      0.000096     None   \n",
       "14  27479.652235                100.0  None         1      0.000074     None   \n",
       "2      42.339020                100.0  None         1      8.563928     None   \n",
       "3      42.339020                100.0  None         1     10.590547     None   \n",
       "4      42.339020                100.0  None         1     10.379138     None   \n",
       "5      42.339020                100.0  None         1     12.212573     None   \n",
       "6      42.339020                100.0  None         1      2.433038     None   \n",
       "7   27479.652235                100.0  None         1      0.000041     None   \n",
       "8   27479.652235                100.0  None         1      0.000053     None   \n",
       "9   27479.652235                100.0  None         1      0.000029     None   \n",
       "\n",
       "    to_bus type  x_ohm_per_km  \n",
       "0        1   ol     10.783732  \n",
       "1        4   ol     40.649040  \n",
       "10       9   ol      0.000037  \n",
       "11      13   ol      0.000117  \n",
       "12      10   ol      0.000083  \n",
       "13      12   ol      0.000086  \n",
       "14      13   ol      0.000151  \n",
       "2        2   ol     36.080033  \n",
       "3        3   ol     32.134320  \n",
       "4        4   ol     31.689630  \n",
       "5        3   ol     31.170217  \n",
       "6        4   ol      7.674548  \n",
       "7       10   ol      0.000086  \n",
       "8       11   ol      0.000111  \n",
       "9       12   ol      0.000056  "
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>name</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>step</th>\n",
       "      <th>max_step</th>\n",
       "      <th>in_service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8</td>\n",
       "      <td>None</td>\n",
       "      <td>-19.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  name  q_mvar  p_mw  vn_kv  step  max_step  in_service\n",
       "0    8  None   -19.0   0.0  0.208     1         1        True"
      ]
     },
     "execution_count": 251,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.shunt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['df', 'hv_bus', 'i0_percent', 'in_service', 'lv_bus',\n",
       "       'max_loading_percent', 'name', 'parallel', 'pfe_kw', 'shift_degree',\n",
       "       'sn_mva', 'std_type', 'tap_max', 'tap_neutral', 'tap_min',\n",
       "       'tap_phase_shifter', 'tap_pos', 'tap_side', 'tap_step_degree',\n",
       "       'tap_step_percent', 'vn_hv_kv', 'vn_lv_kv', 'vk_percent',\n",
       "       'vkr_percent'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.trafo.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>hv_bus</th>\n",
       "      <th>i0_percent</th>\n",
       "      <th>in_service</th>\n",
       "      <th>lv_bus</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>pfe_kw</th>\n",
       "      <th>shift_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>tap_min</th>\n",
       "      <th>tap_phase_shifter</th>\n",
       "      <th>tap_pos</th>\n",
       "      <th>tap_side</th>\n",
       "      <th>tap_step_degree</th>\n",
       "      <th>tap_step_percent</th>\n",
       "      <th>vn_hv_kv</th>\n",
       "      <th>vn_lv_kv</th>\n",
       "      <th>vk_percent</th>\n",
       "      <th>vkr_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.2</td>\n",
       "      <td>135.0</td>\n",
       "      <td>14.000</td>\n",
       "      <td>2070.288</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.1</td>\n",
       "      <td>135.0</td>\n",
       "      <td>0.208</td>\n",
       "      <td>5506.182</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.8</td>\n",
       "      <td>135.0</td>\n",
       "      <td>0.208</td>\n",
       "      <td>2494.998</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.0</td>\n",
       "      <td>12.000</td>\n",
       "      <td>1743.885</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.208</td>\n",
       "      <td>1089.099</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    df  hv_bus  i0_percent  in_service  lv_bus  max_loading_percent  name  \\\n",
       "0  1.0       3         0.0        True       6                100.0  None   \n",
       "1  1.0       3         0.0        True       8                100.0  None   \n",
       "2  1.0       4         0.0        True       5                100.0  None   \n",
       "3  1.0       6         0.0        True       7                100.0  None   \n",
       "4  1.0       6         0.0        True       8                100.0  None   \n",
       "\n",
       "   parallel  pfe_kw  shift_degree  ...  tap_min tap_phase_shifter  tap_pos  \\\n",
       "0         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "1         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "2         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "3         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "4         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "\n",
       "   tap_side  tap_step_degree  tap_step_percent  vn_hv_kv vn_lv_kv  vk_percent  \\\n",
       "0        hv              NaN               2.2     135.0   14.000    2070.288   \n",
       "1        hv              NaN               3.1     135.0    0.208    5506.182   \n",
       "2        hv              NaN               6.8     135.0    0.208    2494.998   \n",
       "3      None              NaN               NaN      14.0   12.000    1743.885   \n",
       "4      None              NaN               NaN      14.0    0.208    1089.099   \n",
       "\n",
       "   vkr_percent  \n",
       "0          0.0  \n",
       "1          0.0  \n",
       "2          0.0  \n",
       "3          0.0  \n",
       "4          0.0  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep14.trafo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.2 Sistema de 30 Barras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9e73cc4c10>"
      ]
     },
     "execution_count": 254,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pplot.simple_plot(sep30,plot_loads=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "This pandapower network includes the following parameter tables:\n",
       "   - bus (30 elements)\n",
       "   - load (21 elements)\n",
       "   - gen (5 elements)\n",
       "   - shunt (2 elements)\n",
       "   - ext_grid (1 element)\n",
       "   - line (34 elements)\n",
       "   - trafo (7 elements)\n",
       "   - poly_cost (6 elements)\n",
       "   - bus_geodata (30 elements)\n",
       " and the following results tables:\n",
       "   - res_bus (30 elements)\n",
       "   - res_line (34 elements)\n",
       "   - res_trafo (7 elements)\n",
       "   - res_ext_grid (1 element)\n",
       "   - res_load (21 elements)\n",
       "   - res_shunt (2 elements)\n",
       "   - res_gen (5 elements)"
      ]
     },
     "execution_count": 255,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pp.runpp(sep30, algorithm = 'nr')\n",
    "sep30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>in_service</th>\n",
       "      <th>max_vm_pu</th>\n",
       "      <th>min_vm_pu</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>zone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>1</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>10</td>\n",
       "      <td>b</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>11</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>12</td>\n",
       "      <td>b</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>13</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>14</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>15</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>16</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>17</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>18</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>19</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>2</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>20</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>21</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>22</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>23</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>24</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>25</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>26</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>27</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>28</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>29</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>3</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>4</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>5</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>6</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>7</td>\n",
       "      <td>b</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>8</td>\n",
       "      <td>b</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>9</td>\n",
       "      <td>b</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    in_service  max_vm_pu  min_vm_pu name type  vn_kv zone\n",
       "0         True       1.06       0.94    0    b  132.0    1\n",
       "1         True       1.06       0.94    1    b  132.0    1\n",
       "10        True       1.06       0.94   10    b   11.0    1\n",
       "11        True       1.06       0.94   11    b   33.0    1\n",
       "12        True       1.06       0.94   12    b   11.0    1\n",
       "13        True       1.06       0.94   13    b   33.0    1\n",
       "14        True       1.06       0.94   14    b   33.0    1\n",
       "15        True       1.06       0.94   15    b   33.0    1\n",
       "16        True       1.06       0.94   16    b   33.0    1\n",
       "17        True       1.06       0.94   17    b   33.0    1\n",
       "18        True       1.06       0.94   18    b   33.0    1\n",
       "19        True       1.06       0.94   19    b   33.0    1\n",
       "2         True       1.06       0.94    2    b  132.0    1\n",
       "20        True       1.06       0.94   20    b   33.0    1\n",
       "21        True       1.06       0.94   21    b   33.0    1\n",
       "22        True       1.06       0.94   22    b   33.0    1\n",
       "23        True       1.06       0.94   23    b   33.0    1\n",
       "24        True       1.06       0.94   24    b   33.0    1\n",
       "25        True       1.06       0.94   25    b   33.0    1\n",
       "26        True       1.06       0.94   26    b   33.0    1\n",
       "27        True       1.06       0.94   27    b  132.0    1\n",
       "28        True       1.06       0.94   28    b   33.0    1\n",
       "29        True       1.06       0.94   29    b   33.0    1\n",
       "3         True       1.06       0.94    3    b  132.0    1\n",
       "4         True       1.06       0.94    4    b  132.0    1\n",
       "5         True       1.06       0.94    5    b  132.0    1\n",
       "6         True       1.06       0.94    6    b  132.0    1\n",
       "7         True       1.06       0.94    7    b  132.0    1\n",
       "8         True       1.06       0.94    8    b    1.0    1\n",
       "9         True       1.06       0.94    9    b   33.0    1"
      ]
     },
     "execution_count": 256,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.060000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-260.956948</td>\n",
       "      <td>20.417883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.045000</td>\n",
       "      <td>-5.378243</td>\n",
       "      <td>-18.300000</td>\n",
       "      <td>-43.369462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.082000</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-16.057446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.057339</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>11.200000</td>\n",
       "      <td>7.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.071000</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-10.450719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1.042508</td>\n",
       "      <td>-15.824522</td>\n",
       "      <td>6.200000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1.037916</td>\n",
       "      <td>-15.916363</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1.044626</td>\n",
       "      <td>-15.515424</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>1.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1.040150</td>\n",
       "      <td>-15.849948</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>5.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1.028396</td>\n",
       "      <td>-16.530189</td>\n",
       "      <td>3.200000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1.025900</td>\n",
       "      <td>-16.703722</td>\n",
       "      <td>9.500000</td>\n",
       "      <td>3.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1.029987</td>\n",
       "      <td>-16.507193</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>0.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.021178</td>\n",
       "      <td>-7.528660</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>1.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1.032982</td>\n",
       "      <td>-16.130667</td>\n",
       "      <td>17.500000</td>\n",
       "      <td>11.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1.033514</td>\n",
       "      <td>-16.116437</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1.027429</td>\n",
       "      <td>-16.306626</td>\n",
       "      <td>3.200000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1.021846</td>\n",
       "      <td>-16.482787</td>\n",
       "      <td>8.700000</td>\n",
       "      <td>2.210074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1.017619</td>\n",
       "      <td>-16.054559</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.999946</td>\n",
       "      <td>-16.473981</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>2.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1.023539</td>\n",
       "      <td>-15.530080</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1.007101</td>\n",
       "      <td>-11.677297</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1.003706</td>\n",
       "      <td>-16.759313</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.992235</td>\n",
       "      <td>-17.641613</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>1.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.012300</td>\n",
       "      <td>-9.279432</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>1.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>-14.148767</td>\n",
       "      <td>94.200000</td>\n",
       "      <td>-16.658791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.010626</td>\n",
       "      <td>-11.055023</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.002597</td>\n",
       "      <td>-12.852319</td>\n",
       "      <td>22.800000</td>\n",
       "      <td>10.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>-11.797385</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>-6.111267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.051132</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.045379</td>\n",
       "      <td>-15.688173</td>\n",
       "      <td>5.800000</td>\n",
       "      <td>-18.763526</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       vm_pu  va_degree        p_mw     q_mvar\n",
       "0   1.060000   0.000000 -260.956948  20.417883\n",
       "1   1.045000  -5.378243  -18.300000 -43.369462\n",
       "10  1.082000 -14.097969    0.000000 -16.057446\n",
       "11  1.057339 -14.932908   11.200000   7.500000\n",
       "12  1.071000 -14.932908    0.000000 -10.450719\n",
       "13  1.042508 -15.824522    6.200000   1.600000\n",
       "14  1.037916 -15.916363    8.200000   2.500000\n",
       "15  1.044626 -15.515424    3.500000   1.800000\n",
       "16  1.040150 -15.849948    9.000000   5.800000\n",
       "17  1.028396 -16.530189    3.200000   0.900000\n",
       "18  1.025900 -16.703722    9.500000   3.400000\n",
       "19  1.029987 -16.507193    2.200000   0.700000\n",
       "2   1.021178  -7.528660    2.400000   1.200000\n",
       "20  1.032982 -16.130667   17.500000  11.200000\n",
       "21  1.033514 -16.116437    0.000000   0.000000\n",
       "22  1.027429 -16.306626    3.200000   1.600000\n",
       "23  1.021846 -16.482787    8.700000   2.210074\n",
       "24  1.017619 -16.054559    0.000000   0.000000\n",
       "25  0.999946 -16.473981    3.500000   2.300000\n",
       "26  1.023539 -15.530080    0.000000   0.000000\n",
       "27  1.007101 -11.677297    0.000000   0.000000\n",
       "28  1.003706 -16.759313    2.400000   0.900000\n",
       "29  0.992235 -17.641613   10.600000   1.900000\n",
       "3   1.012300  -9.279432    7.600000   1.600000\n",
       "4   1.010000 -14.148767   94.200000 -16.658791\n",
       "5   1.010626 -11.055023    0.000000   0.000000\n",
       "6   1.002597 -12.852319   22.800000  10.900000\n",
       "7   1.010000 -11.797385   30.000000  -6.111267\n",
       "8   1.051132 -14.097969    0.000000   0.000000\n",
       "9   1.045379 -15.688173    5.800000 -18.763526"
      ]
     },
     "execution_count": 257,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.res_bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>vm_pu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.0</td>\n",
       "      <td>56.069462</td>\n",
       "      <td>-5.378243</td>\n",
       "      <td>1.045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>35.658791</td>\n",
       "      <td>-14.148767</td>\n",
       "      <td>1.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>36.111267</td>\n",
       "      <td>-11.797385</td>\n",
       "      <td>1.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>16.057446</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>1.082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>10.450719</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>1.071</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   p_mw     q_mvar  va_degree  vm_pu\n",
       "0  40.0  56.069462  -5.378243  1.045\n",
       "1   0.0  35.658791 -14.148767  1.010\n",
       "2   0.0  36.111267 -11.797385  1.010\n",
       "3   0.0  16.057446 -14.097969  1.082\n",
       "4   0.0  10.450719 -14.932908  1.071"
      ]
     },
     "execution_count": 258,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.res_gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>controllable</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>scaling</th>\n",
       "      <th>sn_mva</th>\n",
       "      <th>type</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>slack</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.045</td>\n",
       "      <td>False</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.082</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>-24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.071</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>-24.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  controllable  in_service  name  p_mw  scaling  sn_mva  type  vm_pu  \\\n",
       "0    1          True        True  None  40.0      1.0     NaN  None  1.045   \n",
       "1    4          True        True  None   0.0      1.0     NaN  None  1.010   \n",
       "2    7          True        True  None   0.0      1.0     NaN  None  1.010   \n",
       "3   10          True        True  None   0.0      1.0     NaN  None  1.082   \n",
       "4   12          True        True  None   0.0      1.0     NaN  None  1.071   \n",
       "\n",
       "   slack  max_p_mw  min_p_mw  max_q_mvar  min_q_mvar  \n",
       "0  False     140.0       0.0        40.0       -50.0  \n",
       "1  False     100.0       0.0        40.0       -40.0  \n",
       "2  False     100.0       0.0        10.0       -40.0  \n",
       "3  False     100.0       0.0         6.0       -24.0  \n",
       "4  False     100.0       0.0         6.0       -24.0  "
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>c_nf_per_km</th>\n",
       "      <th>df</th>\n",
       "      <th>from_bus</th>\n",
       "      <th>g_us_per_km</th>\n",
       "      <th>in_service</th>\n",
       "      <th>length_km</th>\n",
       "      <th>max_i_ka</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>r_ohm_per_km</th>\n",
       "      <th>std_type</th>\n",
       "      <th>to_bus</th>\n",
       "      <th>type</th>\n",
       "      <th>x_ohm_per_km</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>803.812844</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>3.345408</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>ol</td>\n",
       "      <td>10.018800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>621.128107</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>7.875648</td>\n",
       "      <td>None</td>\n",
       "      <td>2</td>\n",
       "      <td>ol</td>\n",
       "      <td>28.784448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.340559</td>\n",
       "      <td>None</td>\n",
       "      <td>13</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.786751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.720918</td>\n",
       "      <td>None</td>\n",
       "      <td>14</td>\n",
       "      <td>ol</td>\n",
       "      <td>1.420056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.029105</td>\n",
       "      <td>None</td>\n",
       "      <td>15</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.163843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.406690</td>\n",
       "      <td>None</td>\n",
       "      <td>14</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.174733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.570636</td>\n",
       "      <td>None</td>\n",
       "      <td>16</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.094147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>14</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.168497</td>\n",
       "      <td>None</td>\n",
       "      <td>17</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.379465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.695871</td>\n",
       "      <td>None</td>\n",
       "      <td>18</td>\n",
       "      <td>ol</td>\n",
       "      <td>1.406988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.370260</td>\n",
       "      <td>None</td>\n",
       "      <td>19</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.740520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.019304</td>\n",
       "      <td>None</td>\n",
       "      <td>19</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.276010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.352836</td>\n",
       "      <td>None</td>\n",
       "      <td>16</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.920205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>560.233194</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>9.931680</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>ol</td>\n",
       "      <td>30.265488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.378972</td>\n",
       "      <td>None</td>\n",
       "      <td>20</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.815661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.791703</td>\n",
       "      <td>None</td>\n",
       "      <td>21</td>\n",
       "      <td>ol</td>\n",
       "      <td>1.632411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.126324</td>\n",
       "      <td>None</td>\n",
       "      <td>21</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.257004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>14</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.089000</td>\n",
       "      <td>None</td>\n",
       "      <td>22</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.199780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>21</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.252350</td>\n",
       "      <td>None</td>\n",
       "      <td>23</td>\n",
       "      <td>ol</td>\n",
       "      <td>1.949310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.437480</td>\n",
       "      <td>None</td>\n",
       "      <td>23</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.940300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.052765</td>\n",
       "      <td>None</td>\n",
       "      <td>24</td>\n",
       "      <td>ol</td>\n",
       "      <td>3.584988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.770416</td>\n",
       "      <td>None</td>\n",
       "      <td>25</td>\n",
       "      <td>ol</td>\n",
       "      <td>4.138200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.190277</td>\n",
       "      <td>None</td>\n",
       "      <td>26</td>\n",
       "      <td>ol</td>\n",
       "      <td>2.272743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>26</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.393622</td>\n",
       "      <td>None</td>\n",
       "      <td>28</td>\n",
       "      <td>ol</td>\n",
       "      <td>4.522617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>127.879316</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.299968</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>ol</td>\n",
       "      <td>6.603696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>26</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>3.486978</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>ol</td>\n",
       "      <td>6.563403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.612511</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>ol</td>\n",
       "      <td>4.936437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>651.575563</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>11.081664</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>ol</td>\n",
       "      <td>34.848000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>197.908465</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.944656</td>\n",
       "      <td>None</td>\n",
       "      <td>27</td>\n",
       "      <td>ol</td>\n",
       "      <td>10.436976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>636.351835</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>8.224128</td>\n",
       "      <td>None</td>\n",
       "      <td>4</td>\n",
       "      <td>ol</td>\n",
       "      <td>34.551792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>569.367431</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>10.123344</td>\n",
       "      <td>None</td>\n",
       "      <td>5</td>\n",
       "      <td>ol</td>\n",
       "      <td>30.718512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>137.013553</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.073456</td>\n",
       "      <td>None</td>\n",
       "      <td>5</td>\n",
       "      <td>ol</td>\n",
       "      <td>7.213536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>310.564053</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>8.015040</td>\n",
       "      <td>None</td>\n",
       "      <td>6</td>\n",
       "      <td>ol</td>\n",
       "      <td>20.211840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>258.803378</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>4.652208</td>\n",
       "      <td>None</td>\n",
       "      <td>6</td>\n",
       "      <td>ol</td>\n",
       "      <td>14.287680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>137.013553</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>99999.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.090880</td>\n",
       "      <td>None</td>\n",
       "      <td>7</td>\n",
       "      <td>ol</td>\n",
       "      <td>7.318080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    c_nf_per_km   df  from_bus  g_us_per_km  in_service  length_km  max_i_ka  \\\n",
       "0    803.812844  1.0         0          0.0        True        1.0   99999.0   \n",
       "1    621.128107  1.0         0          0.0        True        1.0   99999.0   \n",
       "10     0.000000  1.0        11          0.0        True        1.0   99999.0   \n",
       "11     0.000000  1.0        11          0.0        True        1.0   99999.0   \n",
       "12     0.000000  1.0        11          0.0        True        1.0   99999.0   \n",
       "13     0.000000  1.0        13          0.0        True        1.0   99999.0   \n",
       "14     0.000000  1.0        15          0.0        True        1.0   99999.0   \n",
       "15     0.000000  1.0        14          0.0        True        1.0   99999.0   \n",
       "16     0.000000  1.0        17          0.0        True        1.0   99999.0   \n",
       "17     0.000000  1.0        18          0.0        True        1.0   99999.0   \n",
       "18     0.000000  1.0         9          0.0        True        1.0   99999.0   \n",
       "19     0.000000  1.0         9          0.0        True        1.0   99999.0   \n",
       "2    560.233194  1.0         1          0.0        True        1.0   99999.0   \n",
       "20     0.000000  1.0         9          0.0        True        1.0   99999.0   \n",
       "21     0.000000  1.0         9          0.0        True        1.0   99999.0   \n",
       "22     0.000000  1.0        20          0.0        True        1.0   99999.0   \n",
       "23     0.000000  1.0        14          0.0        True        1.0   99999.0   \n",
       "24     0.000000  1.0        21          0.0        True        1.0   99999.0   \n",
       "25     0.000000  1.0        22          0.0        True        1.0   99999.0   \n",
       "26     0.000000  1.0        23          0.0        True        1.0   99999.0   \n",
       "27     0.000000  1.0        24          0.0        True        1.0   99999.0   \n",
       "28     0.000000  1.0        24          0.0        True        1.0   99999.0   \n",
       "29     0.000000  1.0        26          0.0        True        1.0   99999.0   \n",
       "3    127.879316  1.0         2          0.0        True        1.0   99999.0   \n",
       "30     0.000000  1.0        26          0.0        True        1.0   99999.0   \n",
       "31     0.000000  1.0        28          0.0        True        1.0   99999.0   \n",
       "32   651.575563  1.0         7          0.0        True        1.0   99999.0   \n",
       "33   197.908465  1.0         5          0.0        True        1.0   99999.0   \n",
       "4    636.351835  1.0         1          0.0        True        1.0   99999.0   \n",
       "5    569.367431  1.0         1          0.0        True        1.0   99999.0   \n",
       "6    137.013553  1.0         3          0.0        True        1.0   99999.0   \n",
       "7    310.564053  1.0         4          0.0        True        1.0   99999.0   \n",
       "8    258.803378  1.0         5          0.0        True        1.0   99999.0   \n",
       "9    137.013553  1.0         5          0.0        True        1.0   99999.0   \n",
       "\n",
       "    max_loading_percent  name  parallel  r_ohm_per_km std_type  to_bus type  \\\n",
       "0                 100.0  None         1      3.345408     None       1   ol   \n",
       "1                 100.0  None         1      7.875648     None       2   ol   \n",
       "10                100.0  None         1      1.340559     None      13   ol   \n",
       "11                100.0  None         1      0.720918     None      14   ol   \n",
       "12                100.0  None         1      1.029105     None      15   ol   \n",
       "13                100.0  None         1      2.406690     None      14   ol   \n",
       "14                100.0  None         1      0.570636     None      16   ol   \n",
       "15                100.0  None         1      1.168497     None      17   ol   \n",
       "16                100.0  None         1      0.695871     None      18   ol   \n",
       "17                100.0  None         1      0.370260     None      19   ol   \n",
       "18                100.0  None         1      1.019304     None      19   ol   \n",
       "19                100.0  None         1      0.352836     None      16   ol   \n",
       "2                 100.0  None         1      9.931680     None       3   ol   \n",
       "20                100.0  None         1      0.378972     None      20   ol   \n",
       "21                100.0  None         1      0.791703     None      21   ol   \n",
       "22                100.0  None         1      0.126324     None      21   ol   \n",
       "23                100.0  None         1      1.089000     None      22   ol   \n",
       "24                100.0  None         1      1.252350     None      23   ol   \n",
       "25                100.0  None         1      1.437480     None      23   ol   \n",
       "26                100.0  None         1      2.052765     None      24   ol   \n",
       "27                100.0  None         1      2.770416     None      25   ol   \n",
       "28                100.0  None         1      1.190277     None      26   ol   \n",
       "29                100.0  None         1      2.393622     None      28   ol   \n",
       "3                 100.0  None         1      2.299968     None       3   ol   \n",
       "30                100.0  None         1      3.486978     None      29   ol   \n",
       "31                100.0  None         1      2.612511     None      29   ol   \n",
       "32                100.0  None         1     11.081664     None      27   ol   \n",
       "33                100.0  None         1      2.944656     None      27   ol   \n",
       "4                 100.0  None         1      8.224128     None       4   ol   \n",
       "5                 100.0  None         1     10.123344     None       5   ol   \n",
       "6                 100.0  None         1      2.073456     None       5   ol   \n",
       "7                 100.0  None         1      8.015040     None       6   ol   \n",
       "8                 100.0  None         1      4.652208     None       6   ol   \n",
       "9                 100.0  None         1      2.090880     None       7   ol   \n",
       "\n",
       "    x_ohm_per_km  \n",
       "0      10.018800  \n",
       "1      28.784448  \n",
       "10      2.786751  \n",
       "11      1.420056  \n",
       "12      2.163843  \n",
       "13      2.174733  \n",
       "14      2.094147  \n",
       "15      2.379465  \n",
       "16      1.406988  \n",
       "17      0.740520  \n",
       "18      2.276010  \n",
       "19      0.920205  \n",
       "2      30.265488  \n",
       "20      0.815661  \n",
       "21      1.632411  \n",
       "22      0.257004  \n",
       "23      2.199780  \n",
       "24      1.949310  \n",
       "25      2.940300  \n",
       "26      3.584988  \n",
       "27      4.138200  \n",
       "28      2.272743  \n",
       "29      4.522617  \n",
       "3       6.603696  \n",
       "30      6.563403  \n",
       "31      4.936437  \n",
       "32     34.848000  \n",
       "33     10.436976  \n",
       "4      34.551792  \n",
       "5      30.718512  \n",
       "6       7.213536  \n",
       "7      20.211840  \n",
       "8      14.287680  \n",
       "9       7.318080  "
      ]
     },
     "execution_count": 260,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>controllable</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>scaling</th>\n",
       "      <th>sn_mva</th>\n",
       "      <th>type</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>slack</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.045</td>\n",
       "      <td>False</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.082</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>-24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.071</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>-24.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  controllable  in_service  name  p_mw  scaling  sn_mva  type  vm_pu  \\\n",
       "0    1          True        True  None  40.0      1.0     NaN  None  1.045   \n",
       "1    4          True        True  None   0.0      1.0     NaN  None  1.010   \n",
       "2    7          True        True  None   0.0      1.0     NaN  None  1.010   \n",
       "3   10          True        True  None   0.0      1.0     NaN  None  1.082   \n",
       "4   12          True        True  None   0.0      1.0     NaN  None  1.071   \n",
       "\n",
       "   slack  max_p_mw  min_p_mw  max_q_mvar  min_q_mvar  \n",
       "0  False     140.0       0.0        40.0       -50.0  \n",
       "1  False     100.0       0.0        40.0       -40.0  \n",
       "2  False     100.0       0.0        10.0       -40.0  \n",
       "3  False     100.0       0.0         6.0       -24.0  \n",
       "4  False     100.0       0.0         6.0       -24.0  "
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>name</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>step</th>\n",
       "      <th>max_step</th>\n",
       "      <th>in_service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>None</td>\n",
       "      <td>-19.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>23</td>\n",
       "      <td>None</td>\n",
       "      <td>-4.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   bus  name  q_mvar  p_mw  vn_kv  step  max_step  in_service\n",
       "0    9  None   -19.0   0.0   33.0     1         1        True\n",
       "1   23  None    -4.3   0.0   33.0     1         1        True"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.shunt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>hv_bus</th>\n",
       "      <th>i0_percent</th>\n",
       "      <th>in_service</th>\n",
       "      <th>lv_bus</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>pfe_kw</th>\n",
       "      <th>shift_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>tap_min</th>\n",
       "      <th>tap_phase_shifter</th>\n",
       "      <th>tap_pos</th>\n",
       "      <th>tap_side</th>\n",
       "      <th>tap_step_degree</th>\n",
       "      <th>tap_step_percent</th>\n",
       "      <th>vn_hv_kv</th>\n",
       "      <th>vn_lv_kv</th>\n",
       "      <th>vk_percent</th>\n",
       "      <th>vkr_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.2</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.799792</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>9</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.1</td>\n",
       "      <td>132.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>55.599444</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.799792</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.999890</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.8</td>\n",
       "      <td>132.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>25.599744</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>13.999860</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>27</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>26</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.2</td>\n",
       "      <td>132.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>39.599604</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    df  hv_bus  i0_percent  in_service  lv_bus  max_loading_percent  name  \\\n",
       "0  1.0       5         0.0        True       8                100.0  None   \n",
       "1  1.0       5         0.0        True       9                100.0  None   \n",
       "2  1.0      10         0.0        True       8                100.0  None   \n",
       "3  1.0       9         0.0        True       8                100.0  None   \n",
       "4  1.0       3         0.0        True      11                100.0  None   \n",
       "5  1.0      11         0.0        True      12                100.0  None   \n",
       "6  1.0      27         0.0        True      26                100.0  None   \n",
       "\n",
       "   parallel  pfe_kw  shift_degree  ...  tap_min tap_phase_shifter  tap_pos  \\\n",
       "0         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "1         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "2         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "3         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "4         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "5         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "6         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "\n",
       "   tap_side  tap_step_degree  tap_step_percent  vn_hv_kv vn_lv_kv  vk_percent  \\\n",
       "0        hv              NaN               2.2     132.0      1.0   20.799792   \n",
       "1        hv              NaN               3.1     132.0     33.0   55.599444   \n",
       "2      None              NaN               NaN      11.0      1.0   20.799792   \n",
       "3      None              NaN               NaN      33.0      1.0   10.999890   \n",
       "4        hv              NaN               6.8     132.0     33.0   25.599744   \n",
       "5      None              NaN               NaN      33.0     11.0   13.999860   \n",
       "6        hv              NaN               3.2     132.0     33.0   39.599604   \n",
       "\n",
       "   vkr_percent  \n",
       "0          0.0  \n",
       "1          0.0  \n",
       "2          0.0  \n",
       "3          0.0  \n",
       "4          0.0  \n",
       "5          0.0  \n",
       "6          0.0  \n",
       "\n",
       "[7 rows x 24 columns]"
      ]
     },
     "execution_count": 263,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.trafo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_hv_mw</th>\n",
       "      <th>q_hv_mvar</th>\n",
       "      <th>p_lv_mw</th>\n",
       "      <th>q_lv_mvar</th>\n",
       "      <th>pl_mw</th>\n",
       "      <th>ql_mvar</th>\n",
       "      <th>i_hv_ka</th>\n",
       "      <th>i_lv_ka</th>\n",
       "      <th>vm_hv_pu</th>\n",
       "      <th>va_hv_degree</th>\n",
       "      <th>vm_lv_pu</th>\n",
       "      <th>va_lv_degree</th>\n",
       "      <th>loading_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.772124e+01</td>\n",
       "      <td>-8.092986</td>\n",
       "      <td>-2.772124e+01</td>\n",
       "      <td>9.717440</td>\n",
       "      <td>-7.105427e-15</td>\n",
       "      <td>1.624454</td>\n",
       "      <td>0.124982</td>\n",
       "      <td>16.134721</td>\n",
       "      <td>1.010626</td>\n",
       "      <td>-11.055023</td>\n",
       "      <td>1.051132</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>28.575087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.583966e+01</td>\n",
       "      <td>0.186541</td>\n",
       "      <td>-1.583966e+01</td>\n",
       "      <td>1.096066</td>\n",
       "      <td>1.776357e-15</td>\n",
       "      <td>1.282607</td>\n",
       "      <td>0.068557</td>\n",
       "      <td>0.265726</td>\n",
       "      <td>1.010626</td>\n",
       "      <td>-11.055023</td>\n",
       "      <td>1.045379</td>\n",
       "      <td>-15.688173</td>\n",
       "      <td>15.674365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-6.661338e-15</td>\n",
       "      <td>16.057446</td>\n",
       "      <td>6.661338e-15</td>\n",
       "      <td>-15.599344</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.458102</td>\n",
       "      <td>0.778925</td>\n",
       "      <td>8.568180</td>\n",
       "      <td>1.082000</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>1.051132</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>14.840672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-2.772124e+01</td>\n",
       "      <td>-5.082386</td>\n",
       "      <td>2.772124e+01</td>\n",
       "      <td>5.881905</td>\n",
       "      <td>-3.552714e-15</td>\n",
       "      <td>0.799519</td>\n",
       "      <td>0.471676</td>\n",
       "      <td>15.565294</td>\n",
       "      <td>1.045379</td>\n",
       "      <td>-15.688173</td>\n",
       "      <td>1.051132</td>\n",
       "      <td>-14.097969</td>\n",
       "      <td>26.960150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.419322e+01</td>\n",
       "      <td>14.410000</td>\n",
       "      <td>-4.419322e+01</td>\n",
       "      <td>-9.721377</td>\n",
       "      <td>1.421085e-14</td>\n",
       "      <td>4.688622</td>\n",
       "      <td>0.200841</td>\n",
       "      <td>0.748735</td>\n",
       "      <td>1.012300</td>\n",
       "      <td>-9.279432</td>\n",
       "      <td>1.057339</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>45.918856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.065814e-13</td>\n",
       "      <td>-10.317415</td>\n",
       "      <td>-1.070255e-13</td>\n",
       "      <td>10.450719</td>\n",
       "      <td>-4.440892e-16</td>\n",
       "      <td>0.133303</td>\n",
       "      <td>0.170719</td>\n",
       "      <td>0.512157</td>\n",
       "      <td>1.057339</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>1.071000</td>\n",
       "      <td>-14.932908</td>\n",
       "      <td>9.758005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.806888e+01</td>\n",
       "      <td>5.036015</td>\n",
       "      <td>-1.806888e+01</td>\n",
       "      <td>-3.748796</td>\n",
       "      <td>1.065814e-14</td>\n",
       "      <td>1.287219</td>\n",
       "      <td>0.081465</td>\n",
       "      <td>0.315431</td>\n",
       "      <td>1.007101</td>\n",
       "      <td>-11.677297</td>\n",
       "      <td>1.023539</td>\n",
       "      <td>-15.530080</td>\n",
       "      <td>18.625485</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        p_hv_mw  q_hv_mvar       p_lv_mw  q_lv_mvar         pl_mw   ql_mvar  \\\n",
       "0  2.772124e+01  -8.092986 -2.772124e+01   9.717440 -7.105427e-15  1.624454   \n",
       "1  1.583966e+01   0.186541 -1.583966e+01   1.096066  1.776357e-15  1.282607   \n",
       "2 -6.661338e-15  16.057446  6.661338e-15 -15.599344  0.000000e+00  0.458102   \n",
       "3 -2.772124e+01  -5.082386  2.772124e+01   5.881905 -3.552714e-15  0.799519   \n",
       "4  4.419322e+01  14.410000 -4.419322e+01  -9.721377  1.421085e-14  4.688622   \n",
       "5  1.065814e-13 -10.317415 -1.070255e-13  10.450719 -4.440892e-16  0.133303   \n",
       "6  1.806888e+01   5.036015 -1.806888e+01  -3.748796  1.065814e-14  1.287219   \n",
       "\n",
       "    i_hv_ka    i_lv_ka  vm_hv_pu  va_hv_degree  vm_lv_pu  va_lv_degree  \\\n",
       "0  0.124982  16.134721  1.010626    -11.055023  1.051132    -14.097969   \n",
       "1  0.068557   0.265726  1.010626    -11.055023  1.045379    -15.688173   \n",
       "2  0.778925   8.568180  1.082000    -14.097969  1.051132    -14.097969   \n",
       "3  0.471676  15.565294  1.045379    -15.688173  1.051132    -14.097969   \n",
       "4  0.200841   0.748735  1.012300     -9.279432  1.057339    -14.932908   \n",
       "5  0.170719   0.512157  1.057339    -14.932908  1.071000    -14.932908   \n",
       "6  0.081465   0.315431  1.007101    -11.677297  1.023539    -15.530080   \n",
       "\n",
       "   loading_percent  \n",
       "0        28.575087  \n",
       "1        15.674365  \n",
       "2        14.840672  \n",
       "3        26.960150  \n",
       "4        45.918856  \n",
       "5         9.758005  \n",
       "6        18.625485  "
      ]
     },
     "execution_count": 264,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep30.res_trafo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.3 Sistema de 118 Barras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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J82bN3dBhSIiUlpo5VlEbnmLFi2iZ8+ehY675557WLFihRMqEhGR0korzyJyy7v33nupWLEiKSkpdOzYkQ4dOmCz2XjnnXfyjjcHePLJJ11YpYiIlAZaeRYRAaZPn86gQYOIiIjgzz//xM/PjxYtWrB582YAoqOj2blzJ25uao8vInIr0/8FRESAfv360aRJE44dO8a4ceMAiIiIyHv9jz/+oEWLFiQkJLiqRBERKQUUnkVEAHd3d+Li4gAYM2YMR48eJTMzE4DbbruN4OBgtmzZQpcuXZg3b54rSxURERfStg0RkYusViuBgYFkZGTQuHFjtm7diq+vLxs3biQiIoKxY8fyn//8B29vbw4dOkTlypVdXbKIiDiZVp5FRC7673//S0ZGBgaDga1btwJgNpu54447CAkJYdu2bbRo0QKTycS0adNcXK2IiLiCwrOIyEXff/89AFFRUXnPWSwWAgMDMRgM/PTTT2zatAmAJUuWuKRGERFxLYVnEZGLMjIyANi7dy8ADz/8MAcOHODs2bOkpKTw/vvv4+Fh7/CZnJzssjpFRMR1FJ5FRC66tIfZZrPx3HPPsWjRImrVqgVASEgI//rXv3j66acBSE9Px2q1uqxWERFxDYVnEZGLHn744byPL4Xky2VnZ+dt28jOzmb9+vVOq01EREoHhWcRkYvCwsLyPu7bty9LliwhNzcXm83Gpk2b6Ny5Mzt37sTHxweA48ePu6pUERFxER3PLSJykb+/PwBubm4kJSXRrVs3AgIC8PLy4syZMwCEh4dTsWJFdu7cmTdeRERuHVp5FhG5KCwsjGbNmmG1WunVqxe1atUiIyODM2fOEBwczIgRI5g9e3ZecG7btq2rSxYRESfTyrOIyGWef/55nn76aX766Se++uqrvDAdGhrK3r176d69O2A/zjsgIMDF1YqIiLPphEERkctYrVaefPJJ5s6dC8Add9xB9erV2bZtG0ePHgWgcePGrFq1ivLly7uyVBERcQGFZxGRv8nNzeWDDz5g0qRJpKam5j3v6elJv379GDduHBUqVHBhhSIi4ioKzyIi+TCZTPz88898+umn/PTTT7z22mv8+9//dnVZIiLiQrphUEQkH97e3nTt2pVevXoB5G3bEBGRW5fCs4hIIaKiogDYt2+fiysRERFX07YNEZFC/PXXX1SsWJGAgADS09MxGAyuLklERFxEK88iIoUIDQ0lKCiIjIwMTp8+7epyRETEhRSeRUQKYTYbCA4eBnzBwIE24uPBZHJ1VSIi4gratiEiUoCff4bevSEr6wIWiw8A/v7g5gbz50Pnzi4uUEREnErhWUQkHxs3QocOYDRe+3UfH1i+HGJinFuXiIi4jsKziEg+7r4bNmwoeEyLFpCY6Jx6RETE9bTnWUTkGpKTYevWwsft2AGHDzu8HBERKSUUnkVEriE5Gby9Cx/n7W0fKyIitwaFZxGRa6hQASyWwsfl5kL58o6vR0RESgfteRYRuQabDapWhWPHCh532232lWc3LUWIiNwS9M+9iMg1GAwwahT4+uY/xs8P3n5bwVlE5Faif/JFRPIxYAA895w9QF8ekA0G+3ODBsEzz7iuPhERcT5t2xARKURiIowfD2vW2D9v3RpeeQVatnRtXSIi4nwKzyIiIiIiRaRtGyIiIiIiRaTwLCIiIiJSRArPIiIiIiJFpPAsIiIiIlJECs8iIiIiIkWk8CwiIiIiUkQKzyIiIiIiRaTwLCIiIiJSRArPIiIiIiJFpPAsIiIiIlJECs8iIiIiIkWk8CwiIiIiUkQKzyIiIiIiRaTwLCIiIiJSRArPIiIiIiJFpPAsIiIiIlJE/x9GdMpSnc1VjgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9e73eca450>"
      ]
     },
     "execution_count": 265,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pplot.simple_plot(sep118,plot_loads=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "This pandapower network includes the following parameter tables:\n",
       "   - bus (118 elements)\n",
       "   - load (99 elements)\n",
       "   - gen (53 elements)\n",
       "   - shunt (14 elements)\n",
       "   - ext_grid (1 element)\n",
       "   - line (173 elements)\n",
       "   - trafo (13 elements)\n",
       "   - poly_cost (54 elements)\n",
       "   - bus_geodata (118 elements)\n",
       " and the following results tables:\n",
       "   - res_bus (118 elements)\n",
       "   - res_line (173 elements)\n",
       "   - res_trafo (13 elements)\n",
       "   - res_ext_grid (1 element)\n",
       "   - res_load (99 elements)\n",
       "   - res_shunt (14 elements)\n",
       "   - res_gen (53 elements)"
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pp.runpp(sep118, algorithm = 'nr')\n",
    "\n",
    "sep118"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>in_service</th>\n",
       "      <th>max_vm_pu</th>\n",
       "      <th>min_vm_pu</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>zone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>1</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>2</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>11</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>101</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>102</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>96</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>97</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>98</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>99</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>100</td>\n",
       "      <td>b</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     in_service  max_vm_pu  min_vm_pu name type  vn_kv zone\n",
       "0          True       1.06       0.94    1    b  138.0    1\n",
       "1          True       1.06       0.94    2    b  138.0    1\n",
       "10         True       1.06       0.94   11    b  138.0    1\n",
       "100        True       1.06       0.94  101    b  138.0    1\n",
       "101        True       1.06       0.94  102    b  138.0    1\n",
       "..          ...        ...        ...  ...  ...    ...  ...\n",
       "95         True       1.06       0.94   96    b  138.0    1\n",
       "96         True       1.06       0.94   97    b  138.0    1\n",
       "97         True       1.06       0.94   98    b  138.0    1\n",
       "98         True       1.06       0.94   99    b  138.0    1\n",
       "99         True       1.06       0.94  100    b  138.0    1\n",
       "\n",
       "[118 rows x 7 columns]"
      ]
     },
     "execution_count": 267,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.955000</td>\n",
       "      <td>10.972367</td>\n",
       "      <td>51.0</td>\n",
       "      <td>30.104097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.971393</td>\n",
       "      <td>11.512175</td>\n",
       "      <td>20.0</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.985089</td>\n",
       "      <td>13.005428</td>\n",
       "      <td>70.0</td>\n",
       "      <td>23.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>0.991420</td>\n",
       "      <td>29.645192</td>\n",
       "      <td>22.0</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>0.989131</td>\n",
       "      <td>32.363302</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>0.992283</td>\n",
       "      <td>27.540933</td>\n",
       "      <td>38.0</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>1.011166</td>\n",
       "      <td>27.914135</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1.023509</td>\n",
       "      <td>27.431610</td>\n",
       "      <td>34.0</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>1.010000</td>\n",
       "      <td>27.065051</td>\n",
       "      <td>42.0</td>\n",
       "      <td>17.535596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1.017000</td>\n",
       "      <td>28.057145</td>\n",
       "      <td>-215.0</td>\n",
       "      <td>-77.552221</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        vm_pu  va_degree   p_mw     q_mvar\n",
       "0    0.955000  10.972367   51.0  30.104097\n",
       "1    0.971393  11.512175   20.0   9.000000\n",
       "10   0.985089  13.005428   70.0  23.000000\n",
       "100  0.991420  29.645192   22.0  15.000000\n",
       "101  0.989131  32.363302    5.0   3.000000\n",
       "..        ...        ...    ...        ...\n",
       "95   0.992283  27.540933   38.0  15.000000\n",
       "96   1.011166  27.914135   15.0   9.000000\n",
       "97   1.023509  27.431610   34.0   8.000000\n",
       "98   1.010000  27.065051   42.0  17.535596\n",
       "99   1.017000  28.057145 -215.0 -77.552221\n",
       "\n",
       "[118 rows x 4 columns]"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.res_bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>controllable</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>scaling</th>\n",
       "      <th>sn_mva</th>\n",
       "      <th>type</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>slack</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.955</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>-5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.998</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>24</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>220.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.050</td>\n",
       "      <td>False</td>\n",
       "      <td>320.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>-47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>25</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>314.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.015</td>\n",
       "      <td>False</td>\n",
       "      <td>414.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>-1000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>26</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.968</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>30</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.967</td>\n",
       "      <td>False</td>\n",
       "      <td>107.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.963</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>-14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>33</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.984</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>35</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.980</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>39</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.970</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>41</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.985</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>19.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.005</td>\n",
       "      <td>False</td>\n",
       "      <td>119.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.990</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>-13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>48</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>204.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.025</td>\n",
       "      <td>False</td>\n",
       "      <td>304.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>210.0</td>\n",
       "      <td>-85.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>53</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>48.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.955</td>\n",
       "      <td>False</td>\n",
       "      <td>148.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>54</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.952</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>55</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.954</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>58</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>155.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.985</td>\n",
       "      <td>False</td>\n",
       "      <td>255.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>-60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>60</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>160.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.995</td>\n",
       "      <td>False</td>\n",
       "      <td>260.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>61</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.998</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>-20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>64</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>391.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.005</td>\n",
       "      <td>False</td>\n",
       "      <td>491.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>65</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>392.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.050</td>\n",
       "      <td>False</td>\n",
       "      <td>492.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>69</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.984</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>-10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.015</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>71</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.980</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>72</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.991</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>73</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.958</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>-6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>75</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.943</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>76</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.006</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>-20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>79</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>477.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.040</td>\n",
       "      <td>False</td>\n",
       "      <td>577.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>-165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>84</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.985</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>86</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.015</td>\n",
       "      <td>False</td>\n",
       "      <td>104.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>88</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>607.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.005</td>\n",
       "      <td>False</td>\n",
       "      <td>707.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>89</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.985</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>450.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.050</td>\n",
       "      <td>False</td>\n",
       "      <td>550.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-147.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>90</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.980</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>91</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.990</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>98</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>99</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>252.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.017</td>\n",
       "      <td>False</td>\n",
       "      <td>352.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>155.0</td>\n",
       "      <td>-50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>102</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.010</td>\n",
       "      <td>False</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>103</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.971</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>104</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.965</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>106</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.952</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>109</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.973</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>110</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.980</td>\n",
       "      <td>False</td>\n",
       "      <td>136.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>85.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.990</td>\n",
       "      <td>False</td>\n",
       "      <td>185.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>-35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>111</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.975</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>112</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.993</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>115</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.005</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>-1000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>14</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.970</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>17</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.973</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>-16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>18</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.962</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>23</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.992</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>-300.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    bus  controllable  in_service  name   p_mw  scaling  sn_mva  type  vm_pu  \\\n",
       "0     0          True        True  None    0.0      1.0     NaN  None  0.955   \n",
       "1     3          True        True  None    0.0      1.0     NaN  None  0.998   \n",
       "10   24          True        True  None  220.0      1.0     NaN  None  1.050   \n",
       "11   25          True        True  None  314.0      1.0     NaN  None  1.015   \n",
       "12   26          True        True  None    0.0      1.0     NaN  None  0.968   \n",
       "13   30          True        True  None    7.0      1.0     NaN  None  0.967   \n",
       "14   31          True        True  None    0.0      1.0     NaN  None  0.963   \n",
       "15   33          True        True  None    0.0      1.0     NaN  None  0.984   \n",
       "16   35          True        True  None    0.0      1.0     NaN  None  0.980   \n",
       "17   39          True        True  None    0.0      1.0     NaN  None  0.970   \n",
       "18   41          True        True  None    0.0      1.0     NaN  None  0.985   \n",
       "19   45          True        True  None   19.0      1.0     NaN  None  1.005   \n",
       "2     5          True        True  None    0.0      1.0     NaN  None  0.990   \n",
       "20   48          True        True  None  204.0      1.0     NaN  None  1.025   \n",
       "21   53          True        True  None   48.0      1.0     NaN  None  0.955   \n",
       "22   54          True        True  None    0.0      1.0     NaN  None  0.952   \n",
       "23   55          True        True  None    0.0      1.0     NaN  None  0.954   \n",
       "24   58          True        True  None  155.0      1.0     NaN  None  0.985   \n",
       "25   60          True        True  None  160.0      1.0     NaN  None  0.995   \n",
       "26   61          True        True  None    0.0      1.0     NaN  None  0.998   \n",
       "27   64          True        True  None  391.0      1.0     NaN  None  1.005   \n",
       "28   65          True        True  None  392.0      1.0     NaN  None  1.050   \n",
       "29   69          True        True  None    0.0      1.0     NaN  None  0.984   \n",
       "3     7          True        True  None    0.0      1.0     NaN  None  1.015   \n",
       "30   71          True        True  None    0.0      1.0     NaN  None  0.980   \n",
       "31   72          True        True  None    0.0      1.0     NaN  None  0.991   \n",
       "32   73          True        True  None    0.0      1.0     NaN  None  0.958   \n",
       "33   75          True        True  None    0.0      1.0     NaN  None  0.943   \n",
       "34   76          True        True  None    0.0      1.0     NaN  None  1.006   \n",
       "35   79          True        True  None  477.0      1.0     NaN  None  1.040   \n",
       "36   84          True        True  None    0.0      1.0     NaN  None  0.985   \n",
       "37   86          True        True  None    4.0      1.0     NaN  None  1.015   \n",
       "38   88          True        True  None  607.0      1.0     NaN  None  1.005   \n",
       "39   89          True        True  None    0.0      1.0     NaN  None  0.985   \n",
       "4     9          True        True  None  450.0      1.0     NaN  None  1.050   \n",
       "40   90          True        True  None    0.0      1.0     NaN  None  0.980   \n",
       "41   91          True        True  None    0.0      1.0     NaN  None  0.990   \n",
       "42   98          True        True  None    0.0      1.0     NaN  None  1.010   \n",
       "43   99          True        True  None  252.0      1.0     NaN  None  1.017   \n",
       "44  102          True        True  None   40.0      1.0     NaN  None  1.010   \n",
       "45  103          True        True  None    0.0      1.0     NaN  None  0.971   \n",
       "46  104          True        True  None    0.0      1.0     NaN  None  0.965   \n",
       "47  106          True        True  None    0.0      1.0     NaN  None  0.952   \n",
       "48  109          True        True  None    0.0      1.0     NaN  None  0.973   \n",
       "49  110          True        True  None   36.0      1.0     NaN  None  0.980   \n",
       "5    11          True        True  None   85.0      1.0     NaN  None  0.990   \n",
       "50  111          True        True  None    0.0      1.0     NaN  None  0.975   \n",
       "51  112          True        True  None    0.0      1.0     NaN  None  0.993   \n",
       "52  115          True        True  None    0.0      1.0     NaN  None  1.005   \n",
       "6    14          True        True  None    0.0      1.0     NaN  None  0.970   \n",
       "7    17          True        True  None    0.0      1.0     NaN  None  0.973   \n",
       "8    18          True        True  None    0.0      1.0     NaN  None  0.962   \n",
       "9    23          True        True  None    0.0      1.0     NaN  None  0.992   \n",
       "\n",
       "    slack  max_p_mw  min_p_mw  max_q_mvar  min_q_mvar  \n",
       "0   False     100.0       0.0        15.0        -5.0  \n",
       "1   False     100.0       0.0       300.0      -300.0  \n",
       "10  False     320.0       0.0       140.0       -47.0  \n",
       "11  False     414.0       0.0      1000.0     -1000.0  \n",
       "12  False     100.0       0.0       300.0      -300.0  \n",
       "13  False     107.0       0.0       300.0      -300.0  \n",
       "14  False     100.0       0.0        42.0       -14.0  \n",
       "15  False     100.0       0.0        24.0        -8.0  \n",
       "16  False     100.0       0.0        24.0        -8.0  \n",
       "17  False     100.0       0.0       300.0      -300.0  \n",
       "18  False     100.0       0.0       300.0      -300.0  \n",
       "19  False     119.0       0.0       100.0      -100.0  \n",
       "2   False     100.0       0.0        50.0       -13.0  \n",
       "20  False     304.0       0.0       210.0       -85.0  \n",
       "21  False     148.0       0.0       300.0      -300.0  \n",
       "22  False     100.0       0.0        23.0        -8.0  \n",
       "23  False     100.0       0.0        15.0        -8.0  \n",
       "24  False     255.0       0.0       180.0       -60.0  \n",
       "25  False     260.0       0.0       300.0      -100.0  \n",
       "26  False     100.0       0.0        20.0       -20.0  \n",
       "27  False     491.0       0.0       200.0       -67.0  \n",
       "28  False     492.0       0.0       200.0       -67.0  \n",
       "29  False     100.0       0.0        32.0       -10.0  \n",
       "3   False     100.0       0.0       300.0      -300.0  \n",
       "30  False     100.0       0.0       100.0      -100.0  \n",
       "31  False     100.0       0.0       100.0      -100.0  \n",
       "32  False     100.0       0.0         9.0        -6.0  \n",
       "33  False     100.0       0.0        23.0        -8.0  \n",
       "34  False     100.0       0.0        70.0       -20.0  \n",
       "35  False     577.0       0.0       280.0      -165.0  \n",
       "36  False     100.0       0.0        23.0        -8.0  \n",
       "37  False     104.0       0.0      1000.0      -100.0  \n",
       "38  False     707.0       0.0       300.0      -210.0  \n",
       "39  False     100.0       0.0       300.0      -300.0  \n",
       "4   False     550.0       0.0       200.0      -147.0  \n",
       "40  False     100.0       0.0       100.0      -100.0  \n",
       "41  False     100.0       0.0         9.0        -3.0  \n",
       "42  False     100.0       0.0       100.0      -100.0  \n",
       "43  False     352.0       0.0       155.0       -50.0  \n",
       "44  False     140.0       0.0        40.0       -15.0  \n",
       "45  False     100.0       0.0        23.0        -8.0  \n",
       "46  False     100.0       0.0        23.0        -8.0  \n",
       "47  False     100.0       0.0       200.0      -200.0  \n",
       "48  False     100.0       0.0        23.0        -8.0  \n",
       "49  False     136.0       0.0      1000.0      -100.0  \n",
       "5   False     185.0       0.0       120.0       -35.0  \n",
       "50  False     100.0       0.0      1000.0      -100.0  \n",
       "51  False     100.0       0.0       200.0      -100.0  \n",
       "52  False     100.0       0.0      1000.0     -1000.0  \n",
       "6   False     100.0       0.0        30.0       -10.0  \n",
       "7   False     100.0       0.0        50.0       -16.0  \n",
       "8   False     100.0       0.0        24.0        -8.0  \n",
       "9   False     100.0       0.0       300.0      -300.0  "
      ]
     },
     "execution_count": 269,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>c_nf_per_km</th>\n",
       "      <th>df</th>\n",
       "      <th>from_bus</th>\n",
       "      <th>g_us_per_km</th>\n",
       "      <th>in_service</th>\n",
       "      <th>length_km</th>\n",
       "      <th>max_i_ka</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>r_ohm_per_km</th>\n",
       "      <th>std_type</th>\n",
       "      <th>to_bus</th>\n",
       "      <th>type</th>\n",
       "      <th>x_ohm_per_km</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>353.789081</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>5.770332</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>ol</td>\n",
       "      <td>19.024956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>150.708577</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.456676</td>\n",
       "      <td>None</td>\n",
       "      <td>2</td>\n",
       "      <td>ol</td>\n",
       "      <td>8.074656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>69.922094</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.133118</td>\n",
       "      <td>None</td>\n",
       "      <td>11</td>\n",
       "      <td>ol</td>\n",
       "      <td>3.732624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>122.294021</td>\n",
       "      <td>1.0</td>\n",
       "      <td>69</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1.679681</td>\n",
       "      <td>None</td>\n",
       "      <td>70</td>\n",
       "      <td>ol</td>\n",
       "      <td>6.760620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>679.720754</td>\n",
       "      <td>1.0</td>\n",
       "      <td>23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>9.293472</td>\n",
       "      <td>None</td>\n",
       "      <td>71</td>\n",
       "      <td>ol</td>\n",
       "      <td>37.326240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>373.567841</td>\n",
       "      <td>1.0</td>\n",
       "      <td>65</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>4.265856</td>\n",
       "      <td>None</td>\n",
       "      <td>66</td>\n",
       "      <td>ol</td>\n",
       "      <td>19.329660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>987.823686</td>\n",
       "      <td>1.0</td>\n",
       "      <td>46</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>16.073136</td>\n",
       "      <td>None</td>\n",
       "      <td>68</td>\n",
       "      <td>ol</td>\n",
       "      <td>52.904232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1153.296689</td>\n",
       "      <td>1.0</td>\n",
       "      <td>48</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>18.758340</td>\n",
       "      <td>None</td>\n",
       "      <td>68</td>\n",
       "      <td>ol</td>\n",
       "      <td>61.702560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>1699.301885</td>\n",
       "      <td>1.0</td>\n",
       "      <td>68</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>5.713200</td>\n",
       "      <td>None</td>\n",
       "      <td>69</td>\n",
       "      <td>ol</td>\n",
       "      <td>24.185880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1420.449231</td>\n",
       "      <td>1.0</td>\n",
       "      <td>23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.418606</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.420872</td>\n",
       "      <td>None</td>\n",
       "      <td>69</td>\n",
       "      <td>ol</td>\n",
       "      <td>78.366060</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>173 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     c_nf_per_km   df  from_bus  g_us_per_km  in_service  length_km  \\\n",
       "0     353.789081  1.0         0          0.0        True        1.0   \n",
       "1     150.708577  1.0         0          0.0        True        1.0   \n",
       "10     69.922094  1.0        10          0.0        True        1.0   \n",
       "100   122.294021  1.0        69          0.0        True        1.0   \n",
       "101   679.720754  1.0        23          0.0        True        1.0   \n",
       "..           ...  ...       ...          ...         ...        ...   \n",
       "95    373.567841  1.0        65          0.0        True        1.0   \n",
       "96    987.823686  1.0        46          0.0        True        1.0   \n",
       "97   1153.296689  1.0        48          0.0        True        1.0   \n",
       "98   1699.301885  1.0        68          0.0        True        1.0   \n",
       "99   1420.449231  1.0        23          0.0        True        1.0   \n",
       "\n",
       "      max_i_ka  max_loading_percent  name  parallel  r_ohm_per_km std_type  \\\n",
       "0    41.418606                100.0  None         1      5.770332     None   \n",
       "1    41.418606                100.0  None         1      2.456676     None   \n",
       "10   41.418606                100.0  None         1      1.133118     None   \n",
       "100  41.418606                100.0  None         1      1.679681     None   \n",
       "101  41.418606                100.0  None         1      9.293472     None   \n",
       "..         ...                  ...   ...       ...           ...      ...   \n",
       "95   41.418606                100.0  None         1      4.265856     None   \n",
       "96   41.418606                100.0  None         1     16.073136     None   \n",
       "97   41.418606                100.0  None         1     18.758340     None   \n",
       "98   41.418606                100.0  None         1      5.713200     None   \n",
       "99   41.418606                100.0  None         1      0.420872     None   \n",
       "\n",
       "     to_bus type  x_ohm_per_km  \n",
       "0         1   ol     19.024956  \n",
       "1         2   ol      8.074656  \n",
       "10       11   ol      3.732624  \n",
       "100      70   ol      6.760620  \n",
       "101      71   ol     37.326240  \n",
       "..      ...  ...           ...  \n",
       "95       66   ol     19.329660  \n",
       "96       68   ol     52.904232  \n",
       "97       68   ol     61.702560  \n",
       "98       69   ol     24.185880  \n",
       "99       69   ol     78.366060  \n",
       "\n",
       "[173 rows x 15 columns]"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>name</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>step</th>\n",
       "      <th>max_step</th>\n",
       "      <th>in_service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>None</td>\n",
       "      <td>40.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>33</td>\n",
       "      <td>None</td>\n",
       "      <td>-14.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>82</td>\n",
       "      <td>None</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>104</td>\n",
       "      <td>None</td>\n",
       "      <td>-20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>106</td>\n",
       "      <td>None</td>\n",
       "      <td>-6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>109</td>\n",
       "      <td>None</td>\n",
       "      <td>-6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>36</td>\n",
       "      <td>None</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43</td>\n",
       "      <td>None</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>44</td>\n",
       "      <td>None</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>45</td>\n",
       "      <td>None</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>47</td>\n",
       "      <td>None</td>\n",
       "      <td>-15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>73</td>\n",
       "      <td>None</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>78</td>\n",
       "      <td>None</td>\n",
       "      <td>-20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>81</td>\n",
       "      <td>None</td>\n",
       "      <td>-20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    bus  name  q_mvar  p_mw  vn_kv  step  max_step  in_service\n",
       "0     4  None    40.0   0.0  138.0     1         1        True\n",
       "1    33  None   -14.0   0.0  138.0     1         1        True\n",
       "10   82  None   -10.0   0.0  138.0     1         1        True\n",
       "11  104  None   -20.0   0.0  138.0     1         1        True\n",
       "12  106  None    -6.0   0.0  138.0     1         1        True\n",
       "13  109  None    -6.0   0.0  138.0     1         1        True\n",
       "2    36  None    25.0   0.0  138.0     1         1        True\n",
       "3    43  None   -10.0   0.0  138.0     1         1        True\n",
       "4    44  None   -10.0   0.0  138.0     1         1        True\n",
       "5    45  None   -10.0   0.0  138.0     1         1        True\n",
       "6    47  None   -15.0   0.0  138.0     1         1        True\n",
       "7    73  None   -12.0   0.0  138.0     1         1        True\n",
       "8    78  None   -20.0   0.0  138.0     1         1        True\n",
       "9    81  None   -20.0   0.0  138.0     1         1        True"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.shunt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>hv_bus</th>\n",
       "      <th>i0_percent</th>\n",
       "      <th>in_service</th>\n",
       "      <th>lv_bus</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>pfe_kw</th>\n",
       "      <th>shift_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>tap_min</th>\n",
       "      <th>tap_phase_shifter</th>\n",
       "      <th>tap_pos</th>\n",
       "      <th>tap_side</th>\n",
       "      <th>tap_step_degree</th>\n",
       "      <th>tap_step_percent</th>\n",
       "      <th>vn_hv_kv</th>\n",
       "      <th>vn_lv_kv</th>\n",
       "      <th>vk_percent</th>\n",
       "      <th>vkr_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.5</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>264.330000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>25</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>24</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>378.180000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.0</td>\n",
       "      <td>80</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>79</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.5</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>366.300000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.0</td>\n",
       "      <td>86</td>\n",
       "      <td>-0.044949</td>\n",
       "      <td>True</td>\n",
       "      <td>85</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>161.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>2072.259865</td>\n",
       "      <td>279.972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.0</td>\n",
       "      <td>115</td>\n",
       "      <td>-0.165657</td>\n",
       "      <td>True</td>\n",
       "      <td>67</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>345.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>40.236041</td>\n",
       "      <td>3.366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>29</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>16</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>384.120000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>37</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>36</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.5</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>371.250000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>62</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>58</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>382.140000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>63</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>60</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.5</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>265.320000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>64</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>65</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.5</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>366.300000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.0</td>\n",
       "      <td>64</td>\n",
       "      <td>-0.644444</td>\n",
       "      <td>True</td>\n",
       "      <td>67</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>345.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>158.988082</td>\n",
       "      <td>13.662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>67</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>68</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.5</td>\n",
       "      <td>161.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>366.300000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.0</td>\n",
       "      <td>80</td>\n",
       "      <td>-0.816162</td>\n",
       "      <td>True</td>\n",
       "      <td>67</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>345.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>200.729061</td>\n",
       "      <td>17.325</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     df  hv_bus  i0_percent  in_service  lv_bus  max_loading_percent  name  \\\n",
       "0   1.0       7    0.000000        True       4                100.0  None   \n",
       "1   1.0      25    0.000000        True      24                100.0  None   \n",
       "10  1.0      80    0.000000        True      79                100.0  None   \n",
       "11  1.0      86   -0.044949        True      85                100.0  None   \n",
       "12  1.0     115   -0.165657        True      67                100.0  None   \n",
       "2   1.0      29    0.000000        True      16                100.0  None   \n",
       "3   1.0      37    0.000000        True      36                100.0  None   \n",
       "4   1.0      62    0.000000        True      58                100.0  None   \n",
       "5   1.0      63    0.000000        True      60                100.0  None   \n",
       "6   1.0      64    0.000000        True      65                100.0  None   \n",
       "7   1.0      64   -0.644444        True      67                100.0  None   \n",
       "8   1.0      67    0.000000        True      68                100.0  None   \n",
       "9   1.0      80   -0.816162        True      67                100.0  None   \n",
       "\n",
       "    parallel  pfe_kw  shift_degree  ...  tap_min tap_phase_shifter  tap_pos  \\\n",
       "0          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "1          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "10         1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "11         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "12         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "2          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "3          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "4          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "5          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "6          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "7          1     0.0           0.0  ...      NaN             False      NaN   \n",
       "8          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "9          1     0.0           0.0  ...      NaN             False      NaN   \n",
       "\n",
       "    tap_side  tap_step_degree  tap_step_percent  vn_hv_kv vn_lv_kv  \\\n",
       "0         hv              NaN               1.5     345.0    138.0   \n",
       "1         hv              NaN               4.0     345.0    138.0   \n",
       "10        hv              NaN               6.5     345.0    138.0   \n",
       "11      None              NaN               NaN     161.0    138.0   \n",
       "12      None              NaN               NaN     345.0    161.0   \n",
       "2         hv              NaN               4.0     345.0    138.0   \n",
       "3         hv              NaN               6.5     345.0    138.0   \n",
       "4         hv              NaN               4.0     345.0    138.0   \n",
       "5         hv              NaN               1.5     345.0    138.0   \n",
       "6         hv              NaN               6.5     345.0    138.0   \n",
       "7       None              NaN               NaN     345.0    161.0   \n",
       "8         hv              NaN               6.5     161.0    138.0   \n",
       "9       None              NaN               NaN     345.0    161.0   \n",
       "\n",
       "     vk_percent  vkr_percent  \n",
       "0    264.330000        0.000  \n",
       "1    378.180000        0.000  \n",
       "10   366.300000        0.000  \n",
       "11  2072.259865      279.972  \n",
       "12    40.236041        3.366  \n",
       "2    384.120000        0.000  \n",
       "3    371.250000        0.000  \n",
       "4    382.140000        0.000  \n",
       "5    265.320000        0.000  \n",
       "6    366.300000        0.000  \n",
       "7    158.988082       13.662  \n",
       "8    366.300000        0.000  \n",
       "9    200.729061       17.325  \n",
       "\n",
       "[13 rows x 24 columns]"
      ]
     },
     "execution_count": 272,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep118.trafo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.4 Sistema de 300 Barras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9e742ff210>"
      ]
     },
     "execution_count": 273,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pplot.simple_plot(sep300,plot_loads=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "This pandapower network includes the following parameter tables:\n",
       "   - bus (300 elements)\n",
       "   - load (193 elements)\n",
       "   - sgen (8 elements)\n",
       "   - gen (68 elements)\n",
       "   - shunt (29 elements)\n",
       "   - ext_grid (1 element)\n",
       "   - line (283 elements)\n",
       "   - trafo (128 elements)\n",
       "   - poly_cost (69 elements)\n",
       "   - bus_geodata (300 elements)\n",
       " and the following results tables:\n",
       "   - res_bus (300 elements)\n",
       "   - res_line (283 elements)\n",
       "   - res_trafo (128 elements)\n",
       "   - res_ext_grid (1 element)\n",
       "   - res_load (193 elements)\n",
       "   - res_sgen (8 elements)\n",
       "   - res_shunt (29 elements)\n",
       "   - res_gen (68 elements)"
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pp.runpp(sep300, algorithm = 'nr')\n",
    "sep300"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>in_service</th>\n",
       "      <th>max_vm_pu</th>\n",
       "      <th>min_vm_pu</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>zone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>1</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>2</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>11</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>122</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>123</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>117</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>118</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>119</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>120</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>True</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.94</td>\n",
       "      <td>121</td>\n",
       "      <td>b</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     in_service  max_vm_pu  min_vm_pu name type  vn_kv zone\n",
       "0          True       1.06       0.94    1    b  115.0    1\n",
       "1          True       1.06       0.94    2    b  115.0    1\n",
       "10         True       1.06       0.94   11    b  115.0    1\n",
       "100        True       1.06       0.94  122    b  115.0    1\n",
       "101        True       1.06       0.94  123    b  115.0    1\n",
       "..          ...        ...        ...  ...  ...    ...  ...\n",
       "95         True       1.06       0.94  117    b  115.0    1\n",
       "96         True       1.06       0.94  118    b  115.0    1\n",
       "97         True       1.06       0.94  119    b  115.0    1\n",
       "98         True       1.06       0.94  120    b  115.0    1\n",
       "99         True       1.06       0.94  121    b  115.0    1\n",
       "\n",
       "[300 rows x 7 columns]"
      ]
     },
     "execution_count": 275,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.028422</td>\n",
       "      <td>5.970424</td>\n",
       "      <td>90.0</td>\n",
       "      <td>49.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.035342</td>\n",
       "      <td>7.758020</td>\n",
       "      <td>56.0</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.005658</td>\n",
       "      <td>2.484330</td>\n",
       "      <td>83.0</td>\n",
       "      <td>21.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>0.972870</td>\n",
       "      <td>-14.276601</td>\n",
       "      <td>229.1</td>\n",
       "      <td>11.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>1.000605</td>\n",
       "      <td>-17.545382</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>0.934883</td>\n",
       "      <td>-4.634095</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-284.052244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>0.929904</td>\n",
       "      <td>-4.036511</td>\n",
       "      <td>14.1</td>\n",
       "      <td>650.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1.043500</td>\n",
       "      <td>5.252275</td>\n",
       "      <td>-1930.0</td>\n",
       "      <td>-1050.391640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>0.958444</td>\n",
       "      <td>-8.683876</td>\n",
       "      <td>777.0</td>\n",
       "      <td>164.476158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>0.987156</td>\n",
       "      <td>-12.548744</td>\n",
       "      <td>535.0</td>\n",
       "      <td>55.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        vm_pu  va_degree    p_mw       q_mvar\n",
       "0    1.028422   5.970424    90.0    49.000000\n",
       "1    1.035342   7.758020    56.0    15.000000\n",
       "10   1.005658   2.484330    83.0    21.000000\n",
       "100  0.972870 -14.276601   229.1    11.800000\n",
       "101  1.000605 -17.545382    78.0     1.400000\n",
       "..        ...        ...     ...          ...\n",
       "95   0.934883  -4.634095     0.0  -284.052244\n",
       "96   0.929904  -4.036511    14.1   650.000000\n",
       "97   1.043500   5.252275 -1930.0 -1050.391640\n",
       "98   0.958444  -8.683876   777.0   164.476158\n",
       "99   0.987156 -12.548744   535.0    55.000000\n",
       "\n",
       "[300 rows x 4 columns]"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.res_bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_hv_mw</th>\n",
       "      <th>q_hv_mvar</th>\n",
       "      <th>p_lv_mw</th>\n",
       "      <th>q_lv_mvar</th>\n",
       "      <th>pl_mw</th>\n",
       "      <th>ql_mvar</th>\n",
       "      <th>i_hv_ka</th>\n",
       "      <th>i_lv_ka</th>\n",
       "      <th>vm_hv_pu</th>\n",
       "      <th>va_hv_degree</th>\n",
       "      <th>vm_lv_pu</th>\n",
       "      <th>va_lv_degree</th>\n",
       "      <th>loading_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>79.632490</td>\n",
       "      <td>8.729184</td>\n",
       "      <td>-79.628729</td>\n",
       "      <td>-8.700351</td>\n",
       "      <td>3.760761e-03</td>\n",
       "      <td>0.028833</td>\n",
       "      <td>0.394237</td>\n",
       "      <td>0.397469</td>\n",
       "      <td>1.020160</td>\n",
       "      <td>-11.212013</td>\n",
       "      <td>1.011776</td>\n",
       "      <td>-11.232220</td>\n",
       "      <td>0.799700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26.434711</td>\n",
       "      <td>10.363424</td>\n",
       "      <td>-26.255174</td>\n",
       "      <td>-7.147937</td>\n",
       "      <td>1.795378e-01</td>\n",
       "      <td>3.215486</td>\n",
       "      <td>0.140889</td>\n",
       "      <td>2.373381</td>\n",
       "      <td>1.011776</td>\n",
       "      <td>-11.232220</td>\n",
       "      <td>1.002926</td>\n",
       "      <td>-17.409715</td>\n",
       "      <td>0.283466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.470372</td>\n",
       "      <td>0.170390</td>\n",
       "      <td>-0.468615</td>\n",
       "      <td>-0.160000</td>\n",
       "      <td>1.756844e-03</td>\n",
       "      <td>0.010390</td>\n",
       "      <td>0.044899</td>\n",
       "      <td>0.493891</td>\n",
       "      <td>0.974704</td>\n",
       "      <td>-19.371074</td>\n",
       "      <td>0.964756</td>\n",
       "      <td>-20.432245</td>\n",
       "      <td>0.005185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>47.034472</td>\n",
       "      <td>15.377642</td>\n",
       "      <td>-46.416485</td>\n",
       "      <td>-10.362441</td>\n",
       "      <td>6.179868e-01</td>\n",
       "      <td>5.015201</td>\n",
       "      <td>0.244762</td>\n",
       "      <td>0.414058</td>\n",
       "      <td>1.015000</td>\n",
       "      <td>-20.090853</td>\n",
       "      <td>1.004773</td>\n",
       "      <td>-25.610838</td>\n",
       "      <td>0.492456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>127.433629</td>\n",
       "      <td>64.439712</td>\n",
       "      <td>-126.837784</td>\n",
       "      <td>-62.016609</td>\n",
       "      <td>5.958448e-01</td>\n",
       "      <td>2.423102</td>\n",
       "      <td>0.589612</td>\n",
       "      <td>0.707534</td>\n",
       "      <td>1.013262</td>\n",
       "      <td>-22.199618</td>\n",
       "      <td>1.001821</td>\n",
       "      <td>-22.968041</td>\n",
       "      <td>1.423544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>84.818942</td>\n",
       "      <td>109.701558</td>\n",
       "      <td>-84.679860</td>\n",
       "      <td>-103.338526</td>\n",
       "      <td>1.390827e-01</td>\n",
       "      <td>6.363032</td>\n",
       "      <td>0.224014</td>\n",
       "      <td>0.551635</td>\n",
       "      <td>1.035904</td>\n",
       "      <td>-20.577454</td>\n",
       "      <td>1.013262</td>\n",
       "      <td>-22.199618</td>\n",
       "      <td>1.352135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>-4.129472</td>\n",
       "      <td>-9.031409</td>\n",
       "      <td>4.129472</td>\n",
       "      <td>9.268715</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.237306</td>\n",
       "      <td>0.052142</td>\n",
       "      <td>0.090853</td>\n",
       "      <td>0.956174</td>\n",
       "      <td>-25.363581</td>\n",
       "      <td>0.977000</td>\n",
       "      <td>-24.806375</td>\n",
       "      <td>0.104908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>44.760484</td>\n",
       "      <td>17.816593</td>\n",
       "      <td>-44.760484</td>\n",
       "      <td>-15.362379</td>\n",
       "      <td>-2.131628e-14</td>\n",
       "      <td>2.454215</td>\n",
       "      <td>0.251238</td>\n",
       "      <td>0.425012</td>\n",
       "      <td>0.962693</td>\n",
       "      <td>-26.468419</td>\n",
       "      <td>0.974024</td>\n",
       "      <td>-29.230211</td>\n",
       "      <td>0.505485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>26.768681</td>\n",
       "      <td>16.740224</td>\n",
       "      <td>-26.768681</td>\n",
       "      <td>-15.468957</td>\n",
       "      <td>-1.421085e-14</td>\n",
       "      <td>1.271267</td>\n",
       "      <td>0.158218</td>\n",
       "      <td>0.272953</td>\n",
       "      <td>1.001821</td>\n",
       "      <td>-22.968041</td>\n",
       "      <td>0.990839</td>\n",
       "      <td>-24.965951</td>\n",
       "      <td>0.318331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>39.015511</td>\n",
       "      <td>21.492799</td>\n",
       "      <td>-38.597823</td>\n",
       "      <td>-16.163813</td>\n",
       "      <td>4.176877e-01</td>\n",
       "      <td>5.328987</td>\n",
       "      <td>0.230667</td>\n",
       "      <td>0.378667</td>\n",
       "      <td>0.969489</td>\n",
       "      <td>-24.697169</td>\n",
       "      <td>0.966692</td>\n",
       "      <td>-29.546170</td>\n",
       "      <td>0.464098</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>128 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        p_hv_mw   q_hv_mvar     p_lv_mw   q_lv_mvar         pl_mw   ql_mvar  \\\n",
       "0     79.632490    8.729184  -79.628729   -8.700351  3.760761e-03  0.028833   \n",
       "1     26.434711   10.363424  -26.255174   -7.147937  1.795378e-01  3.215486   \n",
       "10     0.470372    0.170390   -0.468615   -0.160000  1.756844e-03  0.010390   \n",
       "100   47.034472   15.377642  -46.416485  -10.362441  6.179868e-01  5.015201   \n",
       "101  127.433629   64.439712 -126.837784  -62.016609  5.958448e-01  2.423102   \n",
       "..          ...         ...         ...         ...           ...       ...   \n",
       "95    84.818942  109.701558  -84.679860 -103.338526  1.390827e-01  6.363032   \n",
       "96    -4.129472   -9.031409    4.129472    9.268715  0.000000e+00  0.237306   \n",
       "97    44.760484   17.816593  -44.760484  -15.362379 -2.131628e-14  2.454215   \n",
       "98    26.768681   16.740224  -26.768681  -15.468957 -1.421085e-14  1.271267   \n",
       "99    39.015511   21.492799  -38.597823  -16.163813  4.176877e-01  5.328987   \n",
       "\n",
       "      i_hv_ka   i_lv_ka  vm_hv_pu  va_hv_degree  vm_lv_pu  va_lv_degree  \\\n",
       "0    0.394237  0.397469  1.020160    -11.212013  1.011776    -11.232220   \n",
       "1    0.140889  2.373381  1.011776    -11.232220  1.002926    -17.409715   \n",
       "10   0.044899  0.493891  0.974704    -19.371074  0.964756    -20.432245   \n",
       "100  0.244762  0.414058  1.015000    -20.090853  1.004773    -25.610838   \n",
       "101  0.589612  0.707534  1.013262    -22.199618  1.001821    -22.968041   \n",
       "..        ...       ...       ...           ...       ...           ...   \n",
       "95   0.224014  0.551635  1.035904    -20.577454  1.013262    -22.199618   \n",
       "96   0.052142  0.090853  0.956174    -25.363581  0.977000    -24.806375   \n",
       "97   0.251238  0.425012  0.962693    -26.468419  0.974024    -29.230211   \n",
       "98   0.158218  0.272953  1.001821    -22.968041  0.990839    -24.965951   \n",
       "99   0.230667  0.378667  0.969489    -24.697169  0.966692    -29.546170   \n",
       "\n",
       "     loading_percent  \n",
       "0           0.799700  \n",
       "1           0.283466  \n",
       "10          0.005185  \n",
       "100         0.492456  \n",
       "101         1.423544  \n",
       "..               ...  \n",
       "95          1.352135  \n",
       "96          0.104908  \n",
       "97          0.505485  \n",
       "98          0.318331  \n",
       "99          0.464098  \n",
       "\n",
       "[128 rows x 13 columns]"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.res_trafo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_mw</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>va_degree</th>\n",
       "      <th>vm_pu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>9.839253</td>\n",
       "      <td>2.418345</td>\n",
       "      <td>1.0153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>20.001949</td>\n",
       "      <td>1.366269</td>\n",
       "      <td>1.0205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1930.0</td>\n",
       "      <td>1050.391640</td>\n",
       "      <td>5.252275</td>\n",
       "      <td>1.0435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>240.0</td>\n",
       "      <td>119.823333</td>\n",
       "      <td>-13.398031</td>\n",
       "      <td>1.0233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.0</td>\n",
       "      <td>199.152215</td>\n",
       "      <td>-18.335631</td>\n",
       "      <td>1.0103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>50.0</td>\n",
       "      <td>22.003472</td>\n",
       "      <td>-6.809724</td>\n",
       "      <td>1.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>8.0</td>\n",
       "      <td>4.072075</td>\n",
       "      <td>-7.520736</td>\n",
       "      <td>1.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>290.0</td>\n",
       "      <td>30.961223</td>\n",
       "      <td>-6.241003</td>\n",
       "      <td>1.0520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>68.0</td>\n",
       "      <td>-10.693621</td>\n",
       "      <td>-14.661849</td>\n",
       "      <td>1.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>117.0</td>\n",
       "      <td>20.640919</td>\n",
       "      <td>-20.360415</td>\n",
       "      <td>0.9900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>68 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      p_mw       q_mvar  va_degree   vm_pu\n",
       "0      0.0     9.839253   2.418345  1.0153\n",
       "1      0.0    20.001949   1.366269  1.0205\n",
       "10  1930.0  1050.391640   5.252275  1.0435\n",
       "11   240.0   119.823333 -13.398031  1.0233\n",
       "12     0.0   199.152215 -18.335631  1.0103\n",
       "..     ...          ...        ...     ...\n",
       "66    50.0    22.003472  -6.809724  1.0000\n",
       "67     8.0     4.072075  -7.520736  1.0000\n",
       "7    290.0    30.961223  -6.241003  1.0520\n",
       "8     68.0   -10.693621 -14.661849  1.0000\n",
       "9    117.0    20.640919 -20.360415  0.9900\n",
       "\n",
       "[68 rows x 4 columns]"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.res_gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>controllable</th>\n",
       "      <th>in_service</th>\n",
       "      <th>name</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>scaling</th>\n",
       "      <th>sn_mva</th>\n",
       "      <th>type</th>\n",
       "      <th>vm_pu</th>\n",
       "      <th>slack</th>\n",
       "      <th>max_p_mw</th>\n",
       "      <th>min_p_mw</th>\n",
       "      <th>max_q_mvar</th>\n",
       "      <th>min_q_mvar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0153</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>-10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0205</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>-20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>97</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>1930.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0435</td>\n",
       "      <td>False</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1500.0</td>\n",
       "      <td>-500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>102</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0233</td>\n",
       "      <td>False</td>\n",
       "      <td>340.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>-60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>103</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0103</td>\n",
       "      <td>False</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>-25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>294</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>False</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>-38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>295</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>False</td>\n",
       "      <td>108.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>-6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>76</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>290.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0520</td>\n",
       "      <td>False</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>-153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>79</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>68.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>False</td>\n",
       "      <td>168.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>-30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>87</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>None</td>\n",
       "      <td>117.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>0.9900</td>\n",
       "      <td>False</td>\n",
       "      <td>217.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>-24.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>68 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    bus  controllable  in_service  name    p_mw  scaling  sn_mva  type  \\\n",
       "0     7          True        True  None     0.0      1.0     NaN  None   \n",
       "1     9          True        True  None     0.0      1.0     NaN  None   \n",
       "10   97          True        True  None  1930.0      1.0     NaN  None   \n",
       "11  102          True        True  None   240.0      1.0     NaN  None   \n",
       "12  103          True        True  None     0.0      1.0     NaN  None   \n",
       "..  ...           ...         ...   ...     ...      ...     ...   ...   \n",
       "66  294          True        True  None    50.0      1.0     NaN  None   \n",
       "67  295          True        True  None     8.0      1.0     NaN  None   \n",
       "7    76          True        True  None   290.0      1.0     NaN  None   \n",
       "8    79          True        True  None    68.0      1.0     NaN  None   \n",
       "9    87          True        True  None   117.0      1.0     NaN  None   \n",
       "\n",
       "     vm_pu  slack  max_p_mw  min_p_mw  max_q_mvar  min_q_mvar  \n",
       "0   1.0153  False     100.0       0.0        10.0       -10.0  \n",
       "1   1.0205  False     100.0       0.0        20.0       -20.0  \n",
       "10  1.0435  False    2030.0       0.0      1500.0      -500.0  \n",
       "11  1.0233  False     340.0       0.0       120.0       -60.0  \n",
       "12  1.0103  False     100.0       0.0       200.0       -25.0  \n",
       "..     ...    ...       ...       ...         ...         ...  \n",
       "66  1.0000  False     150.0       0.0        38.0       -38.0  \n",
       "67  1.0000  False     108.0       0.0         6.0        -6.0  \n",
       "7   1.0520  False     390.0       0.0       153.0      -153.0  \n",
       "8   1.0000  False     168.0       0.0        56.0       -30.0  \n",
       "9   0.9900  False     217.0       0.0        77.0       -24.0  \n",
       "\n",
       "[68 rows x 14 columns]"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.gen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>c_nf_per_km</th>\n",
       "      <th>df</th>\n",
       "      <th>from_bus</th>\n",
       "      <th>g_us_per_km</th>\n",
       "      <th>in_service</th>\n",
       "      <th>length_km</th>\n",
       "      <th>max_i_ka</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>r_ohm_per_km</th>\n",
       "      <th>std_type</th>\n",
       "      <th>to_bus</th>\n",
       "      <th>type</th>\n",
       "      <th>x_ohm_per_km</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>265</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.105800</td>\n",
       "      <td>None</td>\n",
       "      <td>269</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.460230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>270</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>866.025404</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.024211</td>\n",
       "      <td>None</td>\n",
       "      <td>271</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.107445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>290</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>866.025404</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016692</td>\n",
       "      <td>None</td>\n",
       "      <td>268</td>\n",
       "      <td>ol</td>\n",
       "      <td>0.012606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>250.716672</td>\n",
       "      <td>1.0</td>\n",
       "      <td>61</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.851164</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.116000</td>\n",
       "      <td>None</td>\n",
       "      <td>72</td>\n",
       "      <td>ol</td>\n",
       "      <td>14.283000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>1900.432370</td>\n",
       "      <td>1.0</td>\n",
       "      <td>61</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.851164</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>15.129400</td>\n",
       "      <td>None</td>\n",
       "      <td>239</td>\n",
       "      <td>ol</td>\n",
       "      <td>106.487700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>942.694685</td>\n",
       "      <td>1.0</td>\n",
       "      <td>58</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>4.496500</td>\n",
       "      <td>None</td>\n",
       "      <td>60</td>\n",
       "      <td>ol</td>\n",
       "      <td>13.092750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>220.630671</td>\n",
       "      <td>1.0</td>\n",
       "      <td>59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.380500</td>\n",
       "      <td>None</td>\n",
       "      <td>63</td>\n",
       "      <td>ol</td>\n",
       "      <td>11.505750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>3.385600</td>\n",
       "      <td>None</td>\n",
       "      <td>237</td>\n",
       "      <td>ol</td>\n",
       "      <td>25.524250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>601.720012</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.777250</td>\n",
       "      <td>None</td>\n",
       "      <td>62</td>\n",
       "      <td>ol</td>\n",
       "      <td>7.538250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>361.032007</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.702328</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>2.380500</td>\n",
       "      <td>None</td>\n",
       "      <td>65</td>\n",
       "      <td>ol</td>\n",
       "      <td>6.877000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>283 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     c_nf_per_km   df  from_bus  g_us_per_km  in_service  length_km  \\\n",
       "0       0.000000  1.0       265          0.0        True        1.0   \n",
       "1       0.000000  1.0       270          0.0        True        1.0   \n",
       "10      0.000000  1.0       290          0.0        True        1.0   \n",
       "100   250.716672  1.0        61          0.0        True        1.0   \n",
       "101  1900.432370  1.0        61          0.0        True        1.0   \n",
       "..           ...  ...       ...          ...         ...        ...   \n",
       "95    942.694685  1.0        58          0.0        True        1.0   \n",
       "96    220.630671  1.0        59          0.0        True        1.0   \n",
       "97      0.000000  1.0        59          0.0        True        1.0   \n",
       "98    601.720012  1.0        60          0.0        True        1.0   \n",
       "99    361.032007  1.0        60          0.0        True        1.0   \n",
       "\n",
       "       max_i_ka  max_loading_percent  name  parallel  r_ohm_per_km std_type  \\\n",
       "0     49.702328                100.0  None         1      0.105800     None   \n",
       "1    866.025404                100.0  None         1      0.024211     None   \n",
       "10   866.025404                100.0  None         1      0.016692     None   \n",
       "100   24.851164                100.0  None         1      2.116000     None   \n",
       "101   24.851164                100.0  None         1     15.129400     None   \n",
       "..          ...                  ...   ...       ...           ...      ...   \n",
       "95    49.702328                100.0  None         1      4.496500     None   \n",
       "96    49.702328                100.0  None         1      2.380500     None   \n",
       "97    49.702328                100.0  None         1      3.385600     None   \n",
       "98    49.702328                100.0  None         1      2.777250     None   \n",
       "99    49.702328                100.0  None         1      2.380500     None   \n",
       "\n",
       "     to_bus type  x_ohm_per_km  \n",
       "0       269   ol      0.460230  \n",
       "1       271   ol      0.107445  \n",
       "10      268   ol      0.012606  \n",
       "100      72   ol     14.283000  \n",
       "101     239   ol    106.487700  \n",
       "..      ...  ...           ...  \n",
       "95       60   ol     13.092750  \n",
       "96       63   ol     11.505750  \n",
       "97      237   ol     25.524250  \n",
       "98       62   ol      7.538250  \n",
       "99       65   ol      6.877000  \n",
       "\n",
       "[283 rows x 15 columns]"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>p_from_mw</th>\n",
       "      <th>q_from_mvar</th>\n",
       "      <th>p_to_mw</th>\n",
       "      <th>q_to_mvar</th>\n",
       "      <th>pl_mw</th>\n",
       "      <th>ql_mvar</th>\n",
       "      <th>i_from_ka</th>\n",
       "      <th>i_to_ka</th>\n",
       "      <th>i_ka</th>\n",
       "      <th>vm_from_pu</th>\n",
       "      <th>va_from_degree</th>\n",
       "      <th>vm_to_pu</th>\n",
       "      <th>va_to_degree</th>\n",
       "      <th>loading_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>36.202230</td>\n",
       "      <td>-6.457857</td>\n",
       "      <td>-36.191662</td>\n",
       "      <td>6.503828</td>\n",
       "      <td>0.010568</td>\n",
       "      <td>0.045971</td>\n",
       "      <td>0.182471</td>\n",
       "      <td>0.182471</td>\n",
       "      <td>0.182471</td>\n",
       "      <td>1.011776</td>\n",
       "      <td>-11.232220</td>\n",
       "      <td>1.011713</td>\n",
       "      <td>-11.305629</td>\n",
       "      <td>0.367128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9.469407</td>\n",
       "      <td>2.654983</td>\n",
       "      <td>-9.415964</td>\n",
       "      <td>-2.417807</td>\n",
       "      <td>0.053443</td>\n",
       "      <td>0.237176</td>\n",
       "      <td>0.857791</td>\n",
       "      <td>0.857791</td>\n",
       "      <td>0.857791</td>\n",
       "      <td>1.002926</td>\n",
       "      <td>-17.409715</td>\n",
       "      <td>0.991389</td>\n",
       "      <td>-18.670740</td>\n",
       "      <td>0.099049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>4.390201</td>\n",
       "      <td>1.568983</td>\n",
       "      <td>-4.381511</td>\n",
       "      <td>-1.562420</td>\n",
       "      <td>0.008690</td>\n",
       "      <td>0.006563</td>\n",
       "      <td>0.416576</td>\n",
       "      <td>0.416576</td>\n",
       "      <td>0.416576</td>\n",
       "      <td>0.979010</td>\n",
       "      <td>-19.767690</td>\n",
       "      <td>0.976828</td>\n",
       "      <td>-19.807789</td>\n",
       "      <td>0.048102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>-78.799121</td>\n",
       "      <td>-59.387539</td>\n",
       "      <td>79.179689</td>\n",
       "      <td>56.897091</td>\n",
       "      <td>0.380569</td>\n",
       "      <td>-2.490448</td>\n",
       "      <td>0.248562</td>\n",
       "      <td>0.241076</td>\n",
       "      <td>0.248562</td>\n",
       "      <td>0.996487</td>\n",
       "      <td>-21.939344</td>\n",
       "      <td>1.015248</td>\n",
       "      <td>-20.863255</td>\n",
       "      <td>1.000201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>51.263134</td>\n",
       "      <td>-14.161047</td>\n",
       "      <td>-50.500000</td>\n",
       "      <td>-17.400000</td>\n",
       "      <td>0.763134</td>\n",
       "      <td>-31.561047</td>\n",
       "      <td>0.133972</td>\n",
       "      <td>0.137134</td>\n",
       "      <td>0.137134</td>\n",
       "      <td>0.996487</td>\n",
       "      <td>-21.939344</td>\n",
       "      <td>0.977727</td>\n",
       "      <td>-27.940515</td>\n",
       "      <td>0.551822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>-60.658194</td>\n",
       "      <td>22.823473</td>\n",
       "      <td>62.185315</td>\n",
       "      <td>-22.876933</td>\n",
       "      <td>1.527121</td>\n",
       "      <td>-0.053460</td>\n",
       "      <td>0.332221</td>\n",
       "      <td>0.340272</td>\n",
       "      <td>0.340272</td>\n",
       "      <td>0.979390</td>\n",
       "      <td>-29.840986</td>\n",
       "      <td>0.977610</td>\n",
       "      <td>-25.733671</td>\n",
       "      <td>0.684620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>-49.338302</td>\n",
       "      <td>-5.036021</td>\n",
       "      <td>49.808273</td>\n",
       "      <td>6.258154</td>\n",
       "      <td>0.469971</td>\n",
       "      <td>1.222133</td>\n",
       "      <td>0.256790</td>\n",
       "      <td>0.256179</td>\n",
       "      <td>0.256790</td>\n",
       "      <td>0.969614</td>\n",
       "      <td>-27.437693</td>\n",
       "      <td>0.983787</td>\n",
       "      <td>-24.907472</td>\n",
       "      <td>0.516655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>14.056126</td>\n",
       "      <td>2.923134</td>\n",
       "      <td>-14.000000</td>\n",
       "      <td>-2.500000</td>\n",
       "      <td>0.056126</td>\n",
       "      <td>0.423134</td>\n",
       "      <td>0.074336</td>\n",
       "      <td>0.074336</td>\n",
       "      <td>0.074336</td>\n",
       "      <td>0.969614</td>\n",
       "      <td>-27.437693</td>\n",
       "      <td>0.960470</td>\n",
       "      <td>-29.060896</td>\n",
       "      <td>0.149563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>27.504332</td>\n",
       "      <td>13.295036</td>\n",
       "      <td>-27.290443</td>\n",
       "      <td>-15.539693</td>\n",
       "      <td>0.213889</td>\n",
       "      <td>-2.244656</td>\n",
       "      <td>0.156882</td>\n",
       "      <td>0.163689</td>\n",
       "      <td>0.163689</td>\n",
       "      <td>0.977610</td>\n",
       "      <td>-25.733671</td>\n",
       "      <td>0.963200</td>\n",
       "      <td>-26.499423</td>\n",
       "      <td>0.329338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>-23.399633</td>\n",
       "      <td>-0.887568</td>\n",
       "      <td>23.502757</td>\n",
       "      <td>-0.542579</td>\n",
       "      <td>0.103124</td>\n",
       "      <td>-1.430147</td>\n",
       "      <td>0.120253</td>\n",
       "      <td>0.120188</td>\n",
       "      <td>0.120253</td>\n",
       "      <td>0.977610</td>\n",
       "      <td>-25.733671</td>\n",
       "      <td>0.982012</td>\n",
       "      <td>-25.007752</td>\n",
       "      <td>0.241947</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>283 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     p_from_mw  q_from_mvar    p_to_mw  q_to_mvar     pl_mw    ql_mvar  \\\n",
       "0    36.202230    -6.457857 -36.191662   6.503828  0.010568   0.045971   \n",
       "1     9.469407     2.654983  -9.415964  -2.417807  0.053443   0.237176   \n",
       "10    4.390201     1.568983  -4.381511  -1.562420  0.008690   0.006563   \n",
       "100 -78.799121   -59.387539  79.179689  56.897091  0.380569  -2.490448   \n",
       "101  51.263134   -14.161047 -50.500000 -17.400000  0.763134 -31.561047   \n",
       "..         ...          ...        ...        ...       ...        ...   \n",
       "95  -60.658194    22.823473  62.185315 -22.876933  1.527121  -0.053460   \n",
       "96  -49.338302    -5.036021  49.808273   6.258154  0.469971   1.222133   \n",
       "97   14.056126     2.923134 -14.000000  -2.500000  0.056126   0.423134   \n",
       "98   27.504332    13.295036 -27.290443 -15.539693  0.213889  -2.244656   \n",
       "99  -23.399633    -0.887568  23.502757  -0.542579  0.103124  -1.430147   \n",
       "\n",
       "     i_from_ka   i_to_ka      i_ka  vm_from_pu  va_from_degree  vm_to_pu  \\\n",
       "0     0.182471  0.182471  0.182471    1.011776      -11.232220  1.011713   \n",
       "1     0.857791  0.857791  0.857791    1.002926      -17.409715  0.991389   \n",
       "10    0.416576  0.416576  0.416576    0.979010      -19.767690  0.976828   \n",
       "100   0.248562  0.241076  0.248562    0.996487      -21.939344  1.015248   \n",
       "101   0.133972  0.137134  0.137134    0.996487      -21.939344  0.977727   \n",
       "..         ...       ...       ...         ...             ...       ...   \n",
       "95    0.332221  0.340272  0.340272    0.979390      -29.840986  0.977610   \n",
       "96    0.256790  0.256179  0.256790    0.969614      -27.437693  0.983787   \n",
       "97    0.074336  0.074336  0.074336    0.969614      -27.437693  0.960470   \n",
       "98    0.156882  0.163689  0.163689    0.977610      -25.733671  0.963200   \n",
       "99    0.120253  0.120188  0.120253    0.977610      -25.733671  0.982012   \n",
       "\n",
       "     va_to_degree  loading_percent  \n",
       "0      -11.305629         0.367128  \n",
       "1      -18.670740         0.099049  \n",
       "10     -19.807789         0.048102  \n",
       "100    -20.863255         1.000201  \n",
       "101    -27.940515         0.551822  \n",
       "..            ...              ...  \n",
       "95     -25.733671         0.684620  \n",
       "96     -24.907472         0.516655  \n",
       "97     -29.060896         0.149563  \n",
       "98     -26.499423         0.329338  \n",
       "99     -25.007752         0.241947  \n",
       "\n",
       "[283 rows x 14 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.res_line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bus</th>\n",
       "      <th>name</th>\n",
       "      <th>q_mvar</th>\n",
       "      <th>p_mw</th>\n",
       "      <th>vn_kv</th>\n",
       "      <th>step</th>\n",
       "      <th>max_step</th>\n",
       "      <th>in_service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>95</td>\n",
       "      <td>None</td>\n",
       "      <td>-325.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>98</td>\n",
       "      <td>None</td>\n",
       "      <td>-55.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>218</td>\n",
       "      <td>None</td>\n",
       "      <td>140.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>230.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>226</td>\n",
       "      <td>None</td>\n",
       "      <td>-45.60</td>\n",
       "      <td>0.00</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>267</td>\n",
       "      <td>None</td>\n",
       "      <td>-2.40</td>\n",
       "      <td>0.14</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>274</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>276</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>277</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>278</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>279</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>280</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>281</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>132</td>\n",
       "      <td>None</td>\n",
       "      <td>-34.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>282</td>\n",
       "      <td>None</td>\n",
       "      <td>-1.72</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>283</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>285</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>286</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>287</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>288</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>296</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>297</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>299</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.10</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>142</td>\n",
       "      <td>None</td>\n",
       "      <td>212.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>230.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>144</td>\n",
       "      <td>None</td>\n",
       "      <td>103.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>230.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>151</td>\n",
       "      <td>None</td>\n",
       "      <td>-53.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>157</td>\n",
       "      <td>None</td>\n",
       "      <td>-45.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>168</td>\n",
       "      <td>None</td>\n",
       "      <td>150.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>345.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>209</td>\n",
       "      <td>None</td>\n",
       "      <td>300.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>345.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>216</td>\n",
       "      <td>None</td>\n",
       "      <td>150.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    bus  name  q_mvar  p_mw  vn_kv  step  max_step  in_service\n",
       "0    95  None -325.00  0.00  115.0     1         1        True\n",
       "1    98  None  -55.00  0.00  115.0     1         1        True\n",
       "10  218  None  140.00  0.00  230.0     1         1        True\n",
       "11  226  None  -45.60  0.00   66.0     1         1        True\n",
       "12  267  None   -2.40  0.14    6.6     1         1        True\n",
       "13  274  None    0.00  0.08    0.6     1         1        True\n",
       "14  276  None    0.00  0.07    0.6     1         1        True\n",
       "15  277  None    0.00  0.02    0.6     1         1        True\n",
       "16  278  None    0.00  0.02    0.6     1         1        True\n",
       "17  279  None    0.00  0.10    0.6     1         1        True\n",
       "18  280  None    0.00  0.07    0.6     1         1        True\n",
       "19  281  None    0.00  0.10    0.6     1         1        True\n",
       "2   132  None  -34.50  0.00  115.0     1         1        True\n",
       "20  282  None   -1.72  0.08    0.6     1         1        True\n",
       "21  283  None    0.00  0.09    0.6     1         1        True\n",
       "22  285  None    0.00  0.10    0.6     1         1        True\n",
       "23  286  None    0.00  0.14    0.6     1         1        True\n",
       "24  287  None    0.00  0.05    0.6     1         1        True\n",
       "25  288  None    0.00  0.04    0.6     1         1        True\n",
       "26  296  None    0.00  0.05    0.6     1         1        True\n",
       "27  297  None    0.00  0.05    0.6     1         1        True\n",
       "28  299  None    0.00  0.10    2.3     1         1        True\n",
       "3   142  None  212.00  0.00  230.0     1         1        True\n",
       "4   144  None  103.00  0.00  230.0     1         1        True\n",
       "5   151  None  -53.00  0.00  115.0     1         1        True\n",
       "6   157  None  -45.00  0.00  115.0     1         1        True\n",
       "7   168  None  150.00  0.00  345.0     1         1        True\n",
       "8   209  None  300.00  0.00  345.0     1         1        True\n",
       "9   216  None  150.00  0.00  138.0     1         1        True"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.shunt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>hv_bus</th>\n",
       "      <th>i0_percent</th>\n",
       "      <th>in_service</th>\n",
       "      <th>lv_bus</th>\n",
       "      <th>max_loading_percent</th>\n",
       "      <th>name</th>\n",
       "      <th>parallel</th>\n",
       "      <th>pfe_kw</th>\n",
       "      <th>shift_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>tap_min</th>\n",
       "      <th>tap_phase_shifter</th>\n",
       "      <th>tap_pos</th>\n",
       "      <th>tap_side</th>\n",
       "      <th>tap_step_degree</th>\n",
       "      <th>tap_step_percent</th>\n",
       "      <th>vn_hv_kv</th>\n",
       "      <th>vn_lv_kv</th>\n",
       "      <th>vk_percent</th>\n",
       "      <th>vkr_percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>30</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>265</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.82</td>\n",
       "      <td>115.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>4.592576</td>\n",
       "      <td>0.594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>265</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>270</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.32</td>\n",
       "      <td>115.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>4331.253785</td>\n",
       "      <td>241.461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.0</td>\n",
       "      <td>275</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>277</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>39599.832856</td>\n",
       "      <td>6602.112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>1.0</td>\n",
       "      <td>176</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>187</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>lv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>2104.699021</td>\n",
       "      <td>257.400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>1.0</td>\n",
       "      <td>190</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>189</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>138.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>124.378046</td>\n",
       "      <td>29.700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>1.0</td>\n",
       "      <td>173</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>190</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>hv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.50</td>\n",
       "      <td>345.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>362.426547</td>\n",
       "      <td>7.920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>1.0</td>\n",
       "      <td>178</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>226</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>115.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>2178.000000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1.0</td>\n",
       "      <td>56</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>179</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>lv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>970.200000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>1.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>180</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>lv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1267.200000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1.0</td>\n",
       "      <td>245</td>\n",
       "      <td>0.012121</td>\n",
       "      <td>True</td>\n",
       "      <td>182</td>\n",
       "      <td>100.0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>lv</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.00</td>\n",
       "      <td>115.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>2029.282671</td>\n",
       "      <td>198.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>128 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      df  hv_bus  i0_percent  in_service  lv_bus  max_loading_percent  name  \\\n",
       "0    1.0      30    0.000000        True     265                100.0  None   \n",
       "1    1.0     265    0.000000        True     270                100.0  None   \n",
       "10   1.0     275    0.000000        True     277                100.0  None   \n",
       "100  1.0     176    0.000000        True     187                100.0  None   \n",
       "101  1.0     190    0.000000        True     189                100.0  None   \n",
       "..   ...     ...         ...         ...     ...                  ...   ...   \n",
       "95   1.0     173    0.000000        True     190                100.0  None   \n",
       "96   1.0     178    0.000000        True     226                100.0  None   \n",
       "97   1.0      56    0.000000        True     179                100.0  None   \n",
       "98   1.0     189    0.000000        True     180                100.0  None   \n",
       "99   1.0     245    0.012121        True     182                100.0  None   \n",
       "\n",
       "     parallel  pfe_kw  shift_degree  ...  tap_min tap_phase_shifter  tap_pos  \\\n",
       "0           1     0.0           0.0  ...      NaN             False      1.0   \n",
       "1           1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "10          1     0.0           0.0  ...      NaN             False      NaN   \n",
       "100         1     0.0           0.0  ...      NaN             False      1.0   \n",
       "101         1     0.0           0.0  ...      NaN             False      NaN   \n",
       "..        ...     ...           ...  ...      ...               ...      ...   \n",
       "95          1     0.0           0.0  ...      NaN             False     -1.0   \n",
       "96          1     0.0           0.0  ...      NaN             False      NaN   \n",
       "97          1     0.0           0.0  ...      NaN             False      1.0   \n",
       "98          1     0.0           0.0  ...      NaN             False      1.0   \n",
       "99          1     0.0           0.0  ...      NaN             False      1.0   \n",
       "\n",
       "     tap_side  tap_step_degree  tap_step_percent  vn_hv_kv vn_lv_kv  \\\n",
       "0          hv              NaN              0.82     115.0    115.0   \n",
       "1          hv              NaN              3.32     115.0      6.6   \n",
       "10       None              NaN               NaN       6.6      0.6   \n",
       "100        lv              NaN              3.00     115.0     66.0   \n",
       "101      None              NaN               NaN     138.0    115.0   \n",
       "..        ...              ...               ...       ...      ...   \n",
       "95         hv              NaN              1.50     345.0    138.0   \n",
       "96       None              NaN               NaN     115.0     66.0   \n",
       "97         lv              NaN              3.00     115.0     66.0   \n",
       "98         lv              NaN              1.00     115.0     66.0   \n",
       "99         lv              NaN              5.00     115.0     66.0   \n",
       "\n",
       "       vk_percent  vkr_percent  \n",
       "0        4.592576        0.594  \n",
       "1     4331.253785      241.461  \n",
       "10   39599.832856     6602.112  \n",
       "100   2104.699021      257.400  \n",
       "101    124.378046       29.700  \n",
       "..            ...          ...  \n",
       "95     362.426547        7.920  \n",
       "96    2178.000000        0.000  \n",
       "97     970.200000        0.000  \n",
       "98    1267.200000        0.000  \n",
       "99    2029.282671      198.000  \n",
       "\n",
       "[128 rows x 24 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep300.trafo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Funções Para Manipulação e Extração de Dados do Sistema Elétrico de Potência"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.1 Função Para Inicializar o Sistema Elétrico de Potência"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Para se coletar alguns dados iniciais do sistema elétrico é necessário realizar um cálculo de fluxo de carga preliminar neste."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [],
   "source": [
    "def inicializa_sep(sep, algorithm, relatorio):\n",
    "    \n",
    "    \"\"\"\"\n",
    "    \n",
    "    Função Para Inicializar os Sistemas com Dados Retirados de Outros Trabalhos Para Efeitos de Comparação\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------   \n",
    "    sep : sistema elétrico de potência carregado pelo pandapower.\n",
    "    algorithm : algoritmo de solução do fluxo de potência pelo pandapower. Opções:\n",
    "    \n",
    "    \n",
    "\n",
    "        “nr” Newton-Raphson (pypower implementation with numba accelerations)\n",
    "\n",
    "        “iwamoto_nr” Newton-Raphson with Iwamoto multiplier (maybe slower than NR but more robust)\n",
    "\n",
    "        “bfsw” backward/forward sweep (specially suited for radial and weakly-meshed networks)\n",
    "\n",
    "        “gs” gauss-seidel (pypower implementation)\n",
    "\n",
    "        “fdbx” fast-decoupled (pypower implementation)\n",
    "\n",
    "        “fdxb” fast-decoupled (pypower implementation)\n",
    "        \n",
    "        https://pandapower.readthedocs.io/en/v2.4.0/powerflow/ac.html\n",
    "\n",
    "\n",
    "    relatorio : caso relatorio = True, retorna relatório informando que o sistema foi carregado e o tempo de execução do algoritmo.\n",
    "                caso relatorio = False, não retorna nada.\n",
    "    \n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    \"\"\"\n",
    "    \n",
    "    if len(sep.bus)==14:\n",
    "        \n",
    "        sep.bus['min_vm_pu'] = 0.95\n",
    "        sep.bus['max_vm_pu'] = 1.05\n",
    "        sep.ext_grid['vm_pu'] = 1.05\n",
    "        \n",
    "      \n",
    "        \n",
    "        if algorithm == 'nr':\n",
    "        \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm,numba = True, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "            \n",
    "            tempo = fim-inicio\n",
    "        \n",
    "        \n",
    "        else:\n",
    "            \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "        \n",
    "            tempo = fim-inicio\n",
    "       \n",
    "        if relatorio == True:\n",
    "            \n",
    "            \n",
    "            print('Algoritmo: ', algorithm)\n",
    "            print('Tempo de Execução: ', tempo)\n",
    "\n",
    "        \n",
    "    if len(sep.bus)==30:\n",
    "        \n",
    "        sep.bus['min_vm_pu'] = 0.95\n",
    "        sep.bus['max_vm_pu'] = 1.05\n",
    "        sep.ext_grid['vm_pu'] = 1.05\n",
    "        \n",
    "        if algorithm == 'nr':\n",
    "        \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm,numba = True, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "            \n",
    "            tempo = fim-inicio\n",
    "        \n",
    "        \n",
    "        else:\n",
    "            \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "        \n",
    "            tempo = fim-inicio\n",
    "       \n",
    "        if relatorio == True:\n",
    "            \n",
    "            \n",
    "            print('Algoritmo: ', algorithm)\n",
    "            print('Tempo de Execução: ', tempo)\n",
    "                \n",
    "    if len(sep.bus)==118:\n",
    "        \n",
    "        sep.bus['min_vm_pu'] = 0.90\n",
    "        sep.bus['max_vm_pu'] = 1.10\n",
    "        sep.ext_grid['vm_pu'] = 1.10\n",
    "\n",
    "        if algorithm == 'nr':\n",
    "        \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm,numba = True, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "            \n",
    "            tempo = fim-inicio\n",
    "        \n",
    "        \n",
    "        else:\n",
    "            \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "        \n",
    "            tempo = fim-inicio\n",
    "       \n",
    "        if relatorio == True:\n",
    "            \n",
    "            \n",
    "            print('Algoritmo: ', algorithm)\n",
    "            print('Tempo de Execução: ', tempo)\n",
    "\n",
    "                    \n",
    "    if len(sep.bus)==300:\n",
    "        \n",
    "        sep.bus['min_vm_pu'] = 0.90\n",
    "        sep.bus['max_vm_pu'] = 1.10\n",
    "        sep.ext_grid['vm_pu'] = 1.10\n",
    "    \n",
    "        if algorithm == 'nr':\n",
    "        \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm,numba = True, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "            \n",
    "            tempo = fim-inicio\n",
    "        \n",
    "        \n",
    "        else:\n",
    "            \n",
    "            inicio = time.time()\n",
    "            pp.runpp(sep,algorithm=algorithm, init = 'results', tolerance_mva = 1e-5)\n",
    "            fim = time.time()\n",
    "        \n",
    "            tempo = fim-inicio\n",
    "       \n",
    "        if relatorio == True:\n",
    "            \n",
    "            \n",
    "            print('Algoritmo: ', algorithm)\n",
    "            print('Tempo de Execução: ', tempo)\n",
    "\n",
    "    return 'Sistemas Inicializados'\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Algoritmo:  nr\n",
      "Tempo de Execução:  0.014342069625854492\n",
      "\n",
      "Algoritmo:  iwamoto_nr\n",
      "Tempo de Execução:  0.009608030319213867\n",
      "\n",
      "Algoritmo:  gs\n",
      "Tempo de Execução:  0.009115219116210938\n",
      "\n",
      "Algoritmo:  fdbx\n",
      "Tempo de Execução:  0.014975786209106445\n",
      "\n",
      "Algoritmo:  fdxb\n",
      "Tempo de Execução:  0.01479339599609375\n",
      "\n"
     ]
    }
   ],
   "source": [
    "inicializa_sep(sep30,algorithm='nr', relatorio=True)\n",
    "print('')\n",
    "inicializa_sep(sep14,algorithm='iwamoto_nr', relatorio=True)\n",
    "print('')\n",
    "inicializa_sep(sep14,algorithm='gs', relatorio=True)\n",
    "print('')\n",
    "inicializa_sep(sep14,algorithm='fdbx', relatorio=True)\n",
    "print('')\n",
    "inicializa_sep(sep14,algorithm='fdxb', relatorio=True)\n",
    "print('')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.2 Função Para Calcular as Condutâncias de Linha do Sistema"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A matriz de condutâncias do sistema é importante para, posteriormente, calcular as perdas nas linhas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [],
   "source": [
    "def matriz_condutancia(sep,relatorio=True):\n",
    "    \n",
    "    '''\n",
    "    \n",
    "    Calcula a matriz de condutâncias de linha, retornando apenas a parte triangular superior.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------   \n",
    "    sep : sistema elétrico de potência carregado pelo pandapower.\n",
    "    relatorio : caso relatorio = True, retorna relatório informando barras de origem e destino das linhas, resistências (pu), reatâncias (pu).\n",
    "                caso relatorio = False, retorna apenas a parte triangular superior da matriz de condutâncias.\n",
    "    Retorno\n",
    "    -------    \n",
    "    matriz_g: matriz de condutâncias entre barras com triângulo inferior zerado.\n",
    "    \n",
    "    Observações:\n",
    "    ------------\n",
    "    \n",
    "    Potência Aparente de Base = 100 MVA\n",
    "    \n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    \n",
    "    '''\n",
    "    \n",
    "    sep.line=sep.line.sort_index()\n",
    "   \n",
    "    sep.bus=sep.bus.sort_index()\n",
    "    \n",
    "    vbus = sep.bus.vn_kv.to_numpy(dtype=np.float64)\n",
    "    \n",
    "    zbase = np.power(np.multiply(vbus,1000), 2)/100e6\n",
    "    \n",
    "    # Inicializa Matriz Zerada\n",
    "    \n",
    "    matriz_z = np.zeros((4,len(sep.line.index.ravel())),dtype=np.float64)\n",
    "    \n",
    "    matriz_g = np.zeros((sep.bus.name.count(),sep.bus.name.count()), dtype=np.float64)\n",
    "    \n",
    "    g = np.zeros(len(sep.line.index.ravel()),dtype=np.float64)\n",
    "    \n",
    "    # Pega Valores de Barra Origem e Destino das Linhas\n",
    "        \n",
    "    matriz_z[0,:]=sep.line.from_bus\n",
    "    \n",
    "    matriz_z[1,:]=sep.line.to_bus\n",
    "    \n",
    "    \n",
    "    for i in range(len(sep.line.index.ravel())):    \n",
    "    \n",
    "        matriz_z[2,i] = sep.line.r_ohm_per_km[i]/zbase[int(matriz_z[0,i])]\n",
    "        matriz_z[3,i] = sep.line.x_ohm_per_km[i]/zbase[int(matriz_z[0,i])]\n",
    "    \n",
    "    # Calcula Condutâncias\n",
    "    \n",
    "    g = np.array(np.divide(matriz_z[2,:], np.power(matriz_z[2,:],2)+np.power(matriz_z[3],2)))\n",
    "    z = np.sqrt(np.power(matriz_z[2,:],2) + np.power(matriz_z[3,:],2))\n",
    "    b = np.array(np.divide(matriz_z[3,:], np.power(matriz_z[2,:],2)+np.power(matriz_z[3],2)))\n",
    "\n",
    "    # Gera Matriz\n",
    "    \n",
    "    for posicao in range(len(sep.line.index.ravel())):\n",
    "        \n",
    "        matriz_g[matriz_z[0,posicao].astype(np.int),matriz_z[1,posicao].astype(np.int)] = g[posicao]\n",
    "        \n",
    "    \n",
    "    if relatorio==True:\n",
    "    \n",
    "        tabela = np.zeros((len(sep.line.index.ravel()),7))\n",
    "        tabela[:,0] = matriz_z[0,:]\n",
    "        tabela[:,1] = matriz_z[1,:]\n",
    "        tabela[:,2] = matriz_z[2,:]\n",
    "        tabela[:,3] = matriz_z[3,:]\n",
    "        tabela[:,4] = z\n",
    "        tabela[:,5] = g\n",
    "        tabela[:,6] = b\n",
    "\n",
    "        table = tabulate.tabulate(tabela, headers = ['Barra de Origem', 'Barra de Destino','R (pu)','Xl (pu)','Z (pu)', 'G (pu)','B (pu)'], tablefmt=\"psql\")\n",
    "        print(table)\n",
    "        \n",
    "        if len(sep.bus)==14:\n",
    "\n",
    "            sns.heatmap(matriz_condutancia(sep,relatorio=False)+matriz_condutancia(sep,relatorio=False).T,annot=True,fmt='.6g',cmap='jet')\n",
    "            plt.xlabel('Barra Origem')\n",
    "            plt.ylabel('Barra Destino')\n",
    "            plt.title('Matriz de Condutâncias de Linha Completa')\n",
    "\n",
    "        \n",
    "    if relatorio==False:\n",
    "        \n",
    "        return matriz_g\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-------------------+--------------------+----------+-----------+-----------+----------+----------+\n",
      "|   Barra de Origem |   Barra de Destino |   R (pu) |   Xl (pu) |    Z (pu) |   G (pu) |   B (pu) |\n",
      "|-------------------+--------------------+----------+-----------+-----------+----------+----------|\n",
      "|                 0 |                  1 |  0.01938 |   0.05917 | 0.0622629 |  4.99913 | 15.2631  |\n",
      "|                 0 |                  4 |  0.05403 |   0.22304 | 0.229491  |  1.0259  |  4.23498 |\n",
      "|                 1 |                  2 |  0.04699 |   0.19797 | 0.20347   |  1.13502 |  4.78186 |\n",
      "|                 1 |                  3 |  0.05811 |   0.17632 | 0.185649  |  1.68603 |  5.11584 |\n",
      "|                 1 |                  4 |  0.05695 |   0.17388 | 0.182969  |  1.70114 |  5.19393 |\n",
      "|                 2 |                  3 |  0.06701 |   0.17103 | 0.183689  |  1.98598 |  5.06882 |\n",
      "|                 3 |                  4 |  0.01335 |   0.04211 | 0.0441755 |  6.84098 | 21.5786  |\n",
      "|                 5 |                 10 |  0.09498 |   0.1989  | 0.220414  |  1.95503 |  4.09407 |\n",
      "|                 5 |                 11 |  0.12291 |   0.25581 | 0.283806  |  1.52597 |  3.17596 |\n",
      "|                 5 |                 12 |  0.06615 |   0.13027 | 0.146103  |  3.09893 |  6.10276 |\n",
      "|                 8 |                  9 |  0.03181 |   0.0845  | 0.0902891 |  3.90205 | 10.3654  |\n",
      "|                 8 |                 13 |  0.12711 |   0.27038 | 0.298768  |  1.42401 |  3.02905 |\n",
      "|                 9 |                 10 |  0.08205 |   0.19207 | 0.208861  |  1.88088 |  4.40294 |\n",
      "|                11 |                 12 |  0.22092 |   0.19988 | 0.297922  |  2.48902 |  2.25197 |\n",
      "|                12 |                 13 |  0.17093 |   0.34802 | 0.387731  |  1.13699 |  2.31496 |\n",
      "+-------------------+--------------------+----------+-----------+-----------+----------+----------+\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matriz_condutancia(sep14,relatorio=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3 Função Para Coletar Tensões Das Barras e Seus Respectivos Limites Inferiores e Superiores\n",
    "\n",
    "As tensões nas barras são importantes para se calcular as perdas nas linhas, e os limites inferiores e superiores para garantir que as estas estejam nos níveis adequados."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "def coleta_dados_vbus(sep,relatorio=True):\n",
    "    \n",
    "   \n",
    "    '''\n",
    "    \n",
    "    Coleta os Dados de Tensões e Limites Superiores e Inferiores das Barras do Sistema.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------\n",
    "    sep : sistema elétrico de potência carregado pelo pandapower.\n",
    "    relatorio : caso relatorio = True, retorna relatório informando, tensões, ângulos e limites.\n",
    "                caso relatorio = False, retorna apenas as tensões, ângulos e limtes\n",
    "    \n",
    "    Retorno\n",
    "    ----------\n",
    "    vbus : vetor de tensões [pu] das barras em ordem crescente do número da barra\n",
    "    theta : vetor de ângulo de tensões [°]\n",
    "    v_lim_superior : \n",
    "    \n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "        \n",
    "    '''\n",
    "    \n",
    "    sep.res_bus=sep.res_bus.sort_index()\n",
    "    \n",
    "    sep.bus=sep.bus.sort_index()\n",
    "      \n",
    "    vbus = sep.res_bus['vm_pu'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    theta = sep.res_bus['va_degree'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    v_lim_superior = sep.bus[\"max_vm_pu\"].to_numpy(dtype=np.float32)\n",
    "    \n",
    "    v_lim_inferior = sep.bus[\"min_vm_pu\"].to_numpy(dtype=np.float32)\n",
    "\n",
    "    \n",
    "    \n",
    "    if relatorio==True:\n",
    "        \n",
    "        tabela = np.zeros((len(vbus),4))\n",
    "        tabela[:,0] = vbus\n",
    "        tabela[:,1] = theta\n",
    "        tabela[:,2] = v_lim_inferior\n",
    "        tabela[:,3] = v_lim_superior\n",
    "\n",
    "        table = tabulate.tabulate(tabela, headers = ['Tensões nas Barras (pu)', 'Ângulos das Barras (°)','Limites Inferiores','Limites Superiores'], tablefmt=\"psql\")\n",
    "        print(table)\n",
    "    \n",
    "        sns.scatterplot(x=np.arange(0,len(vbus),1),y=vbus,color='blue',label='Módulo da Tensão',s=75)\n",
    "        sns.lineplot(x=np.arange(0,len(vbus),1),y=v_lim_superior,color='red',label='Limite Superior',alpha=0.5)\n",
    "        sns.lineplot(x=np.arange(0,len(vbus),1),y=v_lim_inferior,color='orange',label='Limite Inferior',alpha=0.5)\n",
    "        plt.grid()\n",
    "        plt.title('Módulo da Tensão por Barra do Sistema')\n",
    "        plt.xlabel('Barra do Sistema')\n",
    "        plt.ylabel('Tensão [pu]')\n",
    "        plt.legend(loc='best')\n",
    "        plt.figure(figsize=(16,10))\n",
    "        sns.scatterplot(x=np.arange(0,len(theta),1),y=theta,color='green',label='Ângulo da Tensão',s=75)\n",
    "        plt.grid()\n",
    "        plt.title('Ângulo da Tensão por Barra do Sistema')\n",
    "        plt.xlabel('Barra do Sistema')\n",
    "        plt.ylabel('Theta [°]')\n",
    "        plt.legend(loc='best')\n",
    "        \n",
    "    \n",
    "    if relatorio==False:\n",
    "        \n",
    "        return vbus, theta, v_lim_superior, v_lim_inferior\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------------------------+--------------------------+----------------------+----------------------+\n",
      "|   Tensões nas Barras (pu) |   Ângulos das Barras (°) |   Limites Inferiores |   Limites Superiores |\n",
      "|---------------------------+--------------------------+----------------------+----------------------|\n",
      "|                  0.955    |                 10.9724  |                  0.9 |                  1.1 |\n",
      "|                  0.971393 |                 11.5122  |                  0.9 |                  1.1 |\n",
      "|                  0.967692 |                 11.8558  |                  0.9 |                  1.1 |\n",
      "|                  0.998    |                 15.5737  |                  0.9 |                  1.1 |\n",
      "|                  1.00198  |                 16.0188  |                  0.9 |                  1.1 |\n",
      "|                  0.99     |                 13.2915  |                  0.9 |                  1.1 |\n",
      "|                  0.989328 |                 12.847   |                  0.9 |                  1.1 |\n",
      "|                  1.015    |                 21.0402  |                  0.9 |                  1.1 |\n",
      "|                  1.04292  |                 28.2943  |                  0.9 |                  1.1 |\n",
      "|                  1.05     |                 35.8752  |                  0.9 |                  1.1 |\n",
      "|                  0.985089 |                 13.0054  |                  0.9 |                  1.1 |\n",
      "|                  0.99     |                 12.4885  |                  0.9 |                  1.1 |\n",
      "|                  0.968302 |                 11.6294  |                  0.9 |                  1.1 |\n",
      "|                  0.983591 |                 11.7711  |                  0.9 |                  1.1 |\n",
      "|                  0.97     |                 11.4738  |                  0.9 |                  1.1 |\n",
      "|                  0.983897 |                 12.187   |                  0.9 |                  1.1 |\n",
      "|                  0.995089 |                 13.9948  |                  0.9 |                  1.1 |\n",
      "|                  0.973    |                 11.7804  |                  0.9 |                  1.1 |\n",
      "|                  0.962    |                 11.3143  |                  0.9 |                  1.1 |\n",
      "|                  0.956934 |                 12.1906  |                  0.9 |                  1.1 |\n",
      "|                  0.957725 |                 13.7776  |                  0.9 |                  1.1 |\n",
      "|                  0.969019 |                 16.3313  |                  0.9 |                  1.1 |\n",
      "|                  0.999469 |                 21.2483  |                  0.9 |                  1.1 |\n",
      "|                  0.992    |                 21.1135  |                  0.9 |                  1.1 |\n",
      "|                  1.05     |                 28.1795  |                  0.9 |                  1.1 |\n",
      "|                  1.015    |                 29.9598  |                  0.9 |                  1.1 |\n",
      "|                  0.968    |                 15.6041  |                  0.9 |                  1.1 |\n",
      "|                  0.961568 |                 13.8785  |                  0.9 |                  1.1 |\n",
      "|                  0.963216 |                 12.8851  |                  0.9 |                  1.1 |\n",
      "|                  0.985333 |                 19.0334  |                  0.9 |                  1.1 |\n",
      "|                  0.967    |                 13.0015  |                  0.9 |                  1.1 |\n",
      "|                  0.963    |                 15.0603  |                  0.9 |                  1.1 |\n",
      "|                  0.970934 |                 10.8534  |                  0.9 |                  1.1 |\n",
      "|                  0.984    |                 11.511   |                  0.9 |                  1.1 |\n",
      "|                  0.980452 |                 11.0547  |                  0.9 |                  1.1 |\n",
      "|                  0.98     |                 11.0551  |                  0.9 |                  1.1 |\n",
      "|                  0.990661 |                 11.9663  |                  0.9 |                  1.1 |\n",
      "|                  0.961286 |                 17.1072  |                  0.9 |                  1.1 |\n",
      "|                  0.969961 |                  8.57622 |                  0.9 |                  1.1 |\n",
      "|                  0.97     |                  7.49515 |                  0.9 |                  1.1 |\n",
      "|                  0.966832 |                  7.05119 |                  0.9 |                  1.1 |\n",
      "|                  0.985    |                  8.65254 |                  0.9 |                  1.1 |\n",
      "|                  0.977121 |                 11.46    |                  0.9 |                  1.1 |\n",
      "|                  0.984436 |                 13.943   |                  0.9 |                  1.1 |\n",
      "|                  0.986383 |                 15.7723  |                  0.9 |                  1.1 |\n",
      "|                  1.005    |                 18.5754  |                  0.9 |                  1.1 |\n",
      "|                  1.01705  |                 20.7988  |                  0.9 |                  1.1 |\n",
      "|                  1.02063  |                 20.0182  |                  0.9 |                  1.1 |\n",
      "|                  1.025    |                 21.0213  |                  0.9 |                  1.1 |\n",
      "|                  1.00108  |                 18.9825  |                  0.9 |                  1.1 |\n",
      "|                  0.966877 |                 16.3638  |                  0.9 |                  1.1 |\n",
      "|                  0.956818 |                 15.4105  |                  0.9 |                  1.1 |\n",
      "|                  0.945983 |                 14.4358  |                  0.9 |                  1.1 |\n",
      "|                  0.955    |                 15.3477  |                  0.9 |                  1.1 |\n",
      "|                  0.952    |                 15.0579  |                  0.9 |                  1.1 |\n",
      "|                  0.954    |                 15.2445  |                  0.9 |                  1.1 |\n",
      "|                  0.970583 |                 16.4489  |                  0.9 |                  1.1 |\n",
      "|                  0.959039 |                 15.5921  |                  0.9 |                  1.1 |\n",
      "|                  0.985    |                 19.4481  |                  0.9 |                  1.1 |\n",
      "|                  0.993156 |                 23.2297  |                  0.9 |                  1.1 |\n",
      "|                  0.995    |                 24.1211  |                  0.9 |                  1.1 |\n",
      "|                  0.998    |                 23.5044  |                  0.9 |                  1.1 |\n",
      "|                  0.968737 |                 22.827   |                  0.9 |                  1.1 |\n",
      "|                  0.983739 |                 24.593   |                  0.9 |                  1.1 |\n",
      "|                  1.005    |                 27.7187  |                  0.9 |                  1.1 |\n",
      "|                  1.05     |                 27.5583  |                  0.9 |                  1.1 |\n",
      "|                  1.01968  |                 24.9186  |                  0.9 |                  1.1 |\n",
      "|                  1.00326  |                 27.5977  |                  0.9 |                  1.1 |\n",
      "|                  1.035    |                 30       |                  0.9 |                  1.1 |\n",
      "|                  0.984    |                 22.6176  |                  0.9 |                  1.1 |\n",
      "|                  0.986845 |                 22.2066  |                  0.9 |                  1.1 |\n",
      "|                  0.98     |                 21.1082  |                  0.9 |                  1.1 |\n",
      "|                  0.991    |                 21.9951  |                  0.9 |                  1.1 |\n",
      "|                  0.958    |                 21.6681  |                  0.9 |                  1.1 |\n",
      "|                  0.967332 |                 22.9297  |                  0.9 |                  1.1 |\n",
      "|                  0.943    |                 21.7979  |                  0.9 |                  1.1 |\n",
      "|                  1.006    |                 26.7493  |                  0.9 |                  1.1 |\n",
      "|                  1.00342  |                 26.4452  |                  0.9 |                  1.1 |\n",
      "|                  1.00922  |                 26.744   |                  0.9 |                  1.1 |\n",
      "|                  1.04     |                 28.9883  |                  0.9 |                  1.1 |\n",
      "|                  0.996848 |                 28.1426  |                  0.9 |                  1.1 |\n",
      "|                  0.988545 |                 27.2702  |                  0.9 |                  1.1 |\n",
      "|                  0.984377 |                 28.4624  |                  0.9 |                  1.1 |\n",
      "|                  0.979704 |                 30.9987  |                  0.9 |                  1.1 |\n",
      "|                  0.985    |                 32.5539  |                  0.9 |                  1.1 |\n",
      "|                  0.98672  |                 31.184   |                  0.9 |                  1.1 |\n",
      "|                  1.015    |                 31.4427  |                  0.9 |                  1.1 |\n",
      "|                  0.987453 |                 35.6887  |                  0.9 |                  1.1 |\n",
      "|                  1.005    |                 39.7467  |                  0.9 |                  1.1 |\n",
      "|                  0.985    |                 33.3367  |                  0.9 |                  1.1 |\n",
      "|                  0.98     |                 33.349   |                  0.9 |                  1.1 |\n",
      "|                  0.99     |                 33.8791  |                  0.9 |                  1.1 |\n",
      "|                  0.985433 |                 30.8474  |                  0.9 |                  1.1 |\n",
      "|                  0.98983  |                 28.6805  |                  0.9 |                  1.1 |\n",
      "|                  0.980332 |                 27.7079  |                  0.9 |                  1.1 |\n",
      "|                  0.992283 |                 27.5409  |                  0.9 |                  1.1 |\n",
      "|                  1.01117  |                 27.9141  |                  0.9 |                  1.1 |\n",
      "|                  1.02351  |                 27.4316  |                  0.9 |                  1.1 |\n",
      "|                  1.01     |                 27.0651  |                  0.9 |                  1.1 |\n",
      "|                  1.017    |                 28.0571  |                  0.9 |                  1.1 |\n",
      "|                  0.99142  |                 29.6452  |                  0.9 |                  1.1 |\n",
      "|                  0.989131 |                 32.3633  |                  0.9 |                  1.1 |\n",
      "|                  1.01     |                 24.3161  |                  0.9 |                  1.1 |\n",
      "|                  0.971    |                 21.7461  |                  0.9 |                  1.1 |\n",
      "|                  0.965    |                 20.6419  |                  0.9 |                  1.1 |\n",
      "|                  0.961146 |                 20.3817  |                  0.9 |                  1.1 |\n",
      "|                  0.952    |                 17.581   |                  0.9 |                  1.1 |\n",
      "|                  0.966212 |                 19.4418  |                  0.9 |                  1.1 |\n",
      "|                  0.967026 |                 18.9892  |                  0.9 |                  1.1 |\n",
      "|                  0.973    |                 18.1423  |                  0.9 |                  1.1 |\n",
      "|                  0.98     |                 19.7874  |                  0.9 |                  1.1 |\n",
      "|                  0.975    |                 15.0431  |                  0.9 |                  1.1 |\n",
      "|                  0.993    |                 13.9922  |                  0.9 |                  1.1 |\n",
      "|                  0.960093 |                 14.726   |                  0.9 |                  1.1 |\n",
      "|                  0.960023 |                 14.7178  |                  0.9 |                  1.1 |\n",
      "|                  1.005    |                 27.1629  |                  0.9 |                  1.1 |\n",
      "|                  0.973824 |                 10.9475  |                  0.9 |                  1.1 |\n",
      "|                  0.949437 |                 21.9412  |                  0.9 |                  1.1 |\n",
      "+---------------------------+--------------------------+----------------------+----------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "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TXV98cUXOeigg/j1r3/NhAkTaGxsZM8992SbbbbhyCOP5P7772fUqFHMmzePX/ziF6xZs4bzzjuvu97GbtHR8GldSumnpYWU0jrgJxFxUjHVkiRJktTT9JQeJFJXbOzwvarXoxt6IvUkRxxxBP37Z5HEnnvuyfDhw5uG1+2zzz4sbm+cbzPXXHMNJ5xwAkOHDgXghBNO4IwzzuCRRx5h77333mD77bbbjgceeIDf/e533Hzzzfz0pz/lX//1X7niiiv48pe/3Klzn3RSFo3069ePk046iWnTpjF9+nRuvPFGtt9+eyZNmgTAyJEjmThxItdddx1XXHFF0/5TpmTPchs1alSLodGNN97IDjvswIQJE4As+Dr66KO56qqrOPLII5u2O/7449lss83YYostuPzyyzt1DUXraPj054gYmlJ6vVQQEVsBS8uWz0wp9ayrkyRJkrSexsZsYvDFi7NhdHV1net10dd6bkgqxtZbb9307/79+6+3vPnmm/PWW2916njLli3jpptu4t57720qGzVqFC+99FKb++23337st99+fPe73+WCCy7g7LPP5gtf+AIDBw7s8LnL52fabrvteOutt3j55ZdZtmwZL7/88nq9mF555ZUN5nPaZptt2jz+888/z3bbbbde2YgRI5g7d26njlNNHQ2f/gI8EhF3AK8A7wOOAO6MiFIsdzJg+CRJkiT1UEuWwCGHrP/EulKvpXykSYf0lB4kknquuXPnUldXR12FxuPW1dVx2mmnccYZZzSVvfbaa2yxxRYtbn/OOedwwgkn8MEPfhDIJhz/7Gc/y7e//W3efPNNBg4cyIABA1izZk3TPq+++mqLx3rllVeahhauWLGCgQMHMnz4cOrq6thll13Wm3vprbfeWu+YHb22+++/f72yFStWVOzedofNOrjdMcD/A7YDds+/LgC2zZd3B1p+RyVJkiRVXWPjhsETvBdIrVhRnXpJ2jTdd999PNv8A6ebDB06lJUrVwLwmc98huXLl3Pqqady00038cYbbwBZOLPffvuxevXqFo+xYsUKrrzyStatWwdASomf//znjBs3rqkX1ujRo1m4cCHvvPMOKSV+8YtftHisG264AYB33nmHa6+9ls997nNsttlmTJ06lSVLljB//vymc5x++unceuutnbreqVOn8uKLLzYFUI2Njdx+++2ceuqpnTpONXW059PNKaUz2togIn7QDfWRJEmdtLFDaKTuZpvsmZYt2zB4KlmyJFvvnE3V5/ePepP58+fzzW9+E4ALL7xwveFkTzzxBPvttx8NDQ00NjZy5plnctlll3HrrbeycOFCLrnkErbaaisWLlzIrFmzqKmpYUT+IVR6mt0FF1zAyJEjueKKK2hsbGTKlCnMmDGDY445hp/97GeMHz+euro6dtxxR8444wzWrl3LgQceyKBBgwCYPn36esP5yp144olcddVVfOxjH2PQoEG8+eab7Lbbbtx2221N20yePJlbbrmFvffem912242GhgZuvfVW/vZvD+TXv76fUgem97//g0yaNInly5ezxx578P3vfx/I5ni6++67+frXv867777LunXrOPjggznppJOangQI2VxNp556atNk5kcddVTTPerXrx9Tp07l3nvv5dxzz+Ub3/gGa9eu5ZJLLuGoo45q2r50j48//njOPffcbnqHu0+klKpdh4oaO3Zsam22+95m9uzZ640dlXo626x6o57ebrtrCI02HdVus7bJnuumm2Dq1NbXz5gBn/1s5epTUu0225P4/dN7VKLdPvnkk+y+++6FnkOdt2ZNNt9daUqqceOCu+56jokTR9GJaaIqbuXKlQwZMqRbjtVa24yIh1NKY1vap9VhdxFxfUdP3JltJUlS93AIjXoa22TPNmZM2+tHj65MPdQyv3+knu/tt9cPnkrWrs16K779dnXq1Ru0NefT6IjYPiJ2aO8F7FKpCkuSpExHhtBIlWSb7Nnq6rJeNC2pr8/Wq3r8/pF6vrVr3wueXn65kS9+sQGA888/nscff4y1a6tXt56urTmfDgCWd+AYASztltpIkqQOW7y47fVPP+2TqFRZlW6Tzo3TObW1cPfdcOihWZhRUhrWVZrvyftaHX6mSz1f+UPqhg+v5f/8n9kbrN9yy8rWqbdoK3zqTMdbO5dJklRhDqFRT1PJNuncOF1TXw9z58ILL2RhxujRsNNO74VL3tfq8TNd6vlqajZufV/WaviUUlrS2jpJklR9pSE0S1r4ie0QGlVDpdpke3PjzJvnU9vaUlubvZr3ovG+Vpef6VLPN2AADBy44ZxPkJUPGFD5OvUWbc35JLWrsREWLMienrJgQbYsSaqM0hCa5nO4NB9CI1VKpdqkc+MUw/taXX6mSz3f5ptnvRCbP9Vu4MCs9+Lmm1enXr1BW8PupDbZLVuSqq+9ITRSpVWiTTo3TjG8r9XnZ7rU89XUwAc+kE0+vmZNtjxggMFTewyf1CV2y5aknqO1ITTV4ETFguLbpHPjFMP72jP0pM90SS3bfPPs5eTiHeewO3WJ3bIlSc0tWQIf/zjstx9MnZp9HT++9Z8XUleV5sZpiXPjdJ33VVJnzZkzh/3335+IYO+99+b222/fYJvnn3+eHXfckbVr13b5PKeffjrf+973Nqaq63nqqadoaGggIth999254oorOrzv008/zSc+8QnGjx/PHnvswRNPPNGlOsybN4999tmnS/v2Rh0OnyLiixHxx4j4a/711CIrpp6tI92yJUl9R3s9YlesqE69tGlybpxieF8lddaECROYOXMmAFdeeSVHH330BtvsvPPOPProowzYiNm4L730Ur785S83LV900UVMmzaty8d7//vfz+zZswE4//zz+cpXvtLhfS+++GIOPvhg5s6dy2WXXcZmm3WtT8/HPvYx7r///i7t2xt1aNhdRJwFnALMAFYAtcBXImJQSul/F1g/9VB2y5YkletIj1j/cFV3cm6cYnhfJRVh2LBhG7X/4MGDu6kmG2/ZsmVMnDgRgMMOO6zLx4kIttlmm+6qVo/X0Yju74B9U0oXp5R+nFL6V2A/4O87eqKIqI2In0TE71tZv1lEXBIRF0TEjyNi/7J1B0XEVRFxUUT8S1n5sIiYHhHnRsS1EeGvtRVit2xVg09XlHoue8SqGkrz4nz2s9lXA5Lu4X2V1F3efPNNGhoaqKmpaeppNGXKFLbeemu+8Y1vcNxxx7Hnnnvy6U9/mpdeeomTTz6Zfffdl4MPPpjXXnsNgKuvvpoPfOADNDQ0ADB9+nSuv/56Zs2aRUNDA1OmTAHg3Xff5ZJLLmH//fenoaGBT33qUyxfvrzDdX3ssceahhD++7//O5/85CcZM2YMl1xySdM2U6ZM4ZFHHuGSSy6hoaGBBQsWAHDdddex33770dDQwEEHHcTjjz8OwL333stee+3FqFGjuPLKKznkkEOoqanhpz/9adOwv6VLlzYd/4YbbuCAAw5gwoQJTJw4sen45XWbOXMmhx9+OEOHDuWiiy7qyttSFR2dcPztlNLK8oKU0usR0ZlBm+OBXwJ7tbL+OGBoSunciBgGzI+I3YGBwDXAh1JKb0XEbRFxYErpfuDbwH0ppZsj4kjgu8DUTtRJXVTqln3oodn/aJfYLVtF8emKUs9mj1hJkgr24ixYU6H/fa2phR263qunZNCgQcyePZtRo0Y1lc2YMYOGhgYeeOABZs2a1TRf1NSpU7ntttsYPHgwkyZN4tprr+WrX/0qp512GoMGDeL6668H4JRTTuHFF19k6dKlTWUAP/jBD7juuut46KGHGDp0KFdeeSWTJ0/moYce6lBd99hjD2bOnMkuu+zCG2+8wX/+53/y/PPPM3r0aE488URGjBjRVPdp06Y1Dfu74447OPvss/nTn/7EDjvswK9//WsOPfRQnnnmGQ4++GAuv/xyDj30UEaOHMk999zD7bff3hTGRUTT+X/1q1/xta99jT/+8Y+MGDGC+++/n4MOOohFixatV7eXX36ZO++8k/nz53d5vqlq6GjPp9URcXx5QUR8DljT0ROllG4FVraxyeHAg/m2r+bH/hBwAPB8SumtfLt5+bbr7dOsXBVQ6pa9YAHMmJF9nTvXIEDdz7lkpJ7PHrGSJKkzjjjiCPr370+/fv3Yc8892X333ZuG1+2zzz4sbq9bdTPXXHMNJ5xwAkOHDgXghBNO4OGHH+aRRx7pdN2OPfZYIJuvatiwYTzbxtNTrrnmGo499lh22GEHAI488khWr17NXXfd1bRNTU0NxxxzDABHH300kyZN2uA4V199NZMnT2ZE3pPjwAMPZPvtt+fGG29cb7tST6/999+fk046qdPXVi0d7fn0v4B7I+Ia4GVgOLAKOKgb67Id64dTr+dl27ZS3nyf14FtIqJ/Sumd8gNHxClkc1YxYsSIpu5+vd2qVat6zLXssAO88QYsWpS9pJZ0tc2uXg2nn976+ocfhi226Hq9pLb0pM/anu5HP8qG17311ntlAwdmvaKefDJ7qXi2WfU2tln1RpVot1tttRUrV5b9KTzk4zCk0FOub2VbfUfes2rVKgBWr169fn3LpJTWW79u3TpqamqallNKDBo0qGn53XffZdWqVU3La9asYd26dU3Lb731Fm+//fZ651u2bBk33HADs2bNairbeeedWbp0Kbvttlur9X/zzTebjlO6lv79+zeVDRw4kL/+9a/r1X3NmjVNy0uXLmXRokV84hOfaDrmNttsw4svvsjKlStZvXo1W2+9dav3pnSdzz33HHvuued62w0fPpxnnnmGlStXtli3zii/fxtrzZo1nW7/HQqfUkqLIuIDwGSgDlgG/DKltKqzlWzDS6z/rTQ0L0utlJfv81pe/tfmwVNe/+nAdICxY8em0ljR3m727NkUeS2NjdkEsYsXZ3841NU55l8bp6tt9qab4OyzW18/YwZ88pNdr5fUlqI/azc1H/mIExVXW1tt1p/t6on8nFVvVIl2++STTzJkSCXTpq4p9VbaYost1qvv3Llzqauro66ujohYb32/fv2oqalpWt58880ZOHBg0/LAgQPZfPPNm5Zramro169fq+sB6urqOP300znjjDOayl577TW22GKLNp+0N2jQoKbjlK6l/Ljt1X3UqFF88IMf5Pvf/37TPitXrqR///4MGjSILbbYgoho9b0cPHgwQ4YMYdSoUbz22mvrbffyyy+z2267MWTIkBbr1hkrV67stvZUU1PD3nvv3al9OvxMwJTSGymlGSmlf8u/roqIf+h0LctExJYRsW2+eCfZEDvyOZ9qgMfJhtXtHBED8+0+nm+73j7NyrWRliyBj38c9tsPpk7Nvo4f3/qTjKQiOZeM1Hs4UXHP5c92SVIl3XfffW0OV9sYQ4cOberF85nPfIbly5dz6qmnctNNN/HGG28AsGLFCvbbbz9Wr15dSB1KTj31VG677TZefvllIOvJ9Dd/8zcsW7as08e5/fbbacyfqnT//ffz4osv8rnPfa7b61wNHR12R0TsB+wPbFlWfDLwkw7uP4FsMvDtI+IC4HvANGAP4FTgZmDv/Gl2dcDnU0rryOabOg34QUT8BXg0n2wc4DzgOxExBqgH2ugboY5qb36defOcUFyVVZpLpnxy+xLnkpGk9vmzXZJUhPnz5/PNb34TgAsvvJD3ve99TeueeOKJpifANTY2cuaZZ3LZZZdx6623snDhQi655BK22morFi5cyKxZs6ipqWma7+j6669nzZo1XHDBBYwcOZIrrriCxsZGpkyZwowZMzjmmGP42c9+xvjx46mrq2PHHXfkjDPOYO3atRx44IEMGjQIyJ6Mt/XWW29Q76eeeoovfvGLAHzrW9/ilVde4VOf+hSf+cxnAGhoaOCuu+5iypQpTXW/+uqr+eEPf9hU9zvvvJNbbrmFyZMn89prr3HEEUdQU1PDu+++ywUXXMD73/9+HnzwQc4880waGxtpaGjg8ssvZ6+99uK5557jxBNPBOD444/nxz/+MZMnT+bVV19l8uTJDBgwgM0224x7772XkSNH8txzz61Xt3PPPZfDDtv4CeErKVJKLa+IuAL4Y0rpuoj4R+DTwE7AfwEDyJ5e91RK6W8rVdnuMHbs2NTR2e57uqK6ei5YkP1vaFvrx43r9tOqD9iYNrtkSetPV3SSexXJ4SDqbVpqs/5sV09UGga6fPlsdtyxwWGg6lUqNexu9913L/Qc6ju6c9hda20zIh5OKY1taZ+2ht1dQNYzCeDv/n979x4nRX3n+//98QJ4JXJxRiMjiijGC8kRAojCoEaMt42yxhNWjEmMPxNjvKHh6KpxN8nRLGpWEyNeEhIha7JrPJLjZtEgo4KX8W6OSrioXIQBBFdF5Caf3x9VjT1MT3fPTFd1VfXr+XjMY6arurq/1fPtqm996vv5fiUdK+lFd5/g7mdLOlzS0i6VGIlUalKBBQviKQeQj9kVAaDzOLcjafLTQN96izRQAMi6Yml3d+rTNLYN7u5mtnNupbu/Z2b9IywbqoTxdZBU9fWfjicDACgf53YkCWmgAFB7ivV82kHBGE+StKOZ9ZO02sx+YmajzOw6SXtHXkLELje+TiGMrwMAQPpwbkeSLFnSfg+nRYuC9QCAbCkWfBov6c/h37comE3unySNk9Qk6RJJ3y+4JVKtvl6aObNtIzU3vg53otKjpSVIT5s2LfgdTpwAAMig3DF/7dq2x3zO7UgS0kABoPa0m3bnwUjkC8K//zNv1SFmVidptbtvjbh8qJLc+DpLlwYNgIEDpX79GAQyTXJd1/PvLDJANwBkU/4xf/Jkady4tsd8zu1ICtJAAaD2FBvzaRsz6ytpoKSnw22+oSAV7xZ3/zjC8qGKGF8nvRhLAQBqR0eO+ZzbkQS5NND8GWxzSAMFgGwqlnaXb7Kkf5C0o4JZ8C6QdJKCQckBJAxjKQBA7eCYj7QhDRQAak+5wad+7n6Ru29R0Ovpy5JGSTosspIB6DTGUgCA2sExH2mUSwNtbpYOOCD4PWcOQwMAQFaVlXanoMeTzGykpOXu/rfw8dqoCgag8xhLAQCypaUl6ME0f35wjG9o+HSsJo75SKtcGuhHH5EKCtSy5cuX67777tMll1yiHj16dOm1Nm+WNm2SNmyQevSQunWTdt65QgVFl5Tb8+m/zex2SXdIuleSzGywyg9eAYgRU2oDQHYsWiSNHCkNGyZNmBD8PuaYT1PtOOYDAKplxowZGj58uMxMl112WcHn/OUvf5GZadCgQfrxj3/cat3GjRv1jW98QyNGjGg38PS73/1OgwYNUmNjY9GybNggzZsnvfGGdOKJjerVq4fuu69JGzd2atdaOffcc/WZz3xGU6dO7fC2TU1N6t+/vxobG9XY2Kj6+nrV19e3evz22293vZBFvPzyyxo7dqx+/vOf69VXX9U999wT6fsVUm7w6VuSNkj6vaR7zKxe0kRJ/xJVwQB0HmMpAEA2lBpMfOVKjvkA0q+lJUi9nDYt+N3SUu0SoVynn3667r//fu266666++67tWbNmjbPue2222RmmjRpkq655ppW61555RXddNNNGjVqVLvvMX78eE2aNKloOTZvDtLMc4GmKVOa1Lt3vTZvDnoNb97c8X3L99vf/laf//znO739eeedp6am9q9tTAAAIABJREFUJjU1Nemkk07SSSed1Opx1P7zP/9Tv/rVr7RmzRpdfPHFOuGEEyJ/z+2V1XPJ3d+VdGXeohZJE8xsSCSlAtBltTildrG0FABIo3IGE6+ra33MX7o0uHjL+jEfQDbkgun5x7pc8JwxwLomzrbxaaedpqamJt1+++364Q9/uG35Cy+8oIaGBu2wQ+F+L1/84hcr8v6bNqndHk4bNwbrq5V+d8QRR2jfffdtd/1ll12muojvFF199dX68MMPdf311+v666+P9L3aU27PJ5lZLzM7ysyOzv1ImhJh2QB0UW467fHjg99ZvggplZYCAGnUkcHEc8f8Xr2yf8wHkA3l9O5MmlwvrbVrk91LK+62cY8ePXTJJZfo5z//uT766KNty2+++WZNnDixzfM3bdqkH/zgBzr66KM1atQonXXWWVqxYsW29fPmzdOxxx6rYcOGady4ca3S0h588MFWaXhvvfWWRo8erqFDrd3ybdggNTc367jjjtPo0aM1YsQI/fa3vy26T1OmTNHhhx+uMWPG6Oqrr26z/qqrrlJjY6OOP/54felLX9KLL75Y8HV69+6tg4sM0Dh48GDtsssu2rBhgy6//HINHz5co0eP1rnnnqv3339fknTjjTdq//3314QJE3TRRRfp2GOP1ZFHHqlXXnll2+s8/PDDGj58uI477jiNGjVKt95667Z1V1xxhU4++WSdcMIJOvHEE/Xyyy+3KsOvf/1rjRgxQqNGjdJxxx2n559/vuhn0xllBZ/MbKKkFZL+S0HqXe7ncxUvEQB0UBobLgBQDgYTzw7SioC2yundmST5AZ233kruzc5qtY2/+93vavPmzbr77rslSQsXLlS3bt3Uv3//Ns+dNGmSXnzxRT3xxBN64oknNGjQIJ1++unaunWrtmzZotNOO00nnXSSnn32WU2bNk0zZ87ctu0ZZ5zRKg3vgAMO0G9/e3/Rsr333nKdcMIJuv766/X444/rwQcf1MSJE/WnP/2p4PMff/xxXXrppXrooYc0e/ZsnX766XrmmWdaPadv376aPXu2Zs2apSlTpuirX/1quR9VQRMnTtRLL72kJ598Uo8//rj22msvXXDBBZKCz2vChAl69NFHde211+rJJ5/UmWee2aoX09e//nXdfvvteuyxx/SnP/1JDzzwQKuyPvzww/rLX/6i22+/XWefffa2dX/84x91zTXXaMaMGXriiSc0adIkHX/88Wqp8Imq3J5P50sa5O593b1f7kfSzFIbAkDU0tZwQfu4OANaYzDxbKB3LlBYR3p3VluabnZWq23cs2dPfec739Ett9yizZs3a/LkyQV7Pbm7pkyZom9961vaaadgJKDvfve7ev755/Xcc8/pmWee0cKFC3X++edLknbZZReNGzeu6HsXS6nr3l36wx/u07777qvRo0dLkurr63XGGWfojjvuKLjNfffdp8bGRg0IT8LDhw/XQQcd1Oo5/fr129bL6Jvf/KYWLVqk1atXFy1nez755BPdc889uvDCC7VzuDNf//rX9e///u/bej9J0siRI1Ufdm0eMmSIFuR9Sfbaay9NnTpVy5YtU8+ePfXII49sWzdw4ECdddZZOv3003XVVVdp/vz5eu+99yRJv/zlL3XmmWeqb9++kqQTTzxRffr00fTp0zu1L+0pN/i0yN3fKrD87ytZGADojDQ1XNA+Ls6AthhMPP3SdMEKxC1NvTvTdLOzmm3jyy67TKtXr9bNN9+stWvX6vDDD2/znNWrV2v9+vXae++9ty3L/b1kyRK98847krQtGCJJffr0Kfq+ueBT9+5tlx98sLRs2eJW7ydJdXV1WtLOP+6dd95p9f7bl2Hu3Lk655xzdNNNN+mJJ55QU1OTJLVKOeyIlStXauPGjbrpppu2zYL3/e9/Xw0NDa3SEffaa69tf/fo0UMb8wa6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\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_vbus(sep118,relatorio=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.4 Função Para Coletar Tensões e Potências Das Barras de Geração/Controle de Reativo e Seus Respectivos Limites Inferiores e Superiores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "def coleta_dados_gen(sep,relatorio=True):\n",
    "       \n",
    "    '''\n",
    "    \n",
    "    Coleta os Dados de Tensões, Potências Ativa e Reativa e Seus Respectivos Limites Superiores e Inferiores de geração.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------\n",
    "    sep : sistema elétrico de potência carregado pelo pandapower.\n",
    "    relatorio : caso relatorio = True, retorna relatório informando, limites, potências e gráficos.\n",
    "                caso relatorio = False, retorna apenas as tensões, ângulos, potências e limites.\n",
    "    \n",
    "    Retorno\n",
    "    ----------\n",
    "    vgen : vetor de tensões [pu] das barras de geração\n",
    "    theta : vetor de ângulo de tensões [°] das barras de geração\n",
    "    p_lim_superior : Limite Superior de Potência Ativa (pu)\n",
    "    p_lim_inferior : Limite Inferior de Potência Ativa (pu)\n",
    "    q_lim_superior : Limite Superior de Potência Reativa (pu)\n",
    "    q_lim_inferior : Limite Inferior de Potência Ativa (pu)\n",
    "    \n",
    "    Observações:\n",
    "    - - - - - - -\n",
    "    \n",
    "    Potência Aparente de Base : 100 MVA\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "        \n",
    "    '''\n",
    "    \n",
    "    sep.res_gen=sep.res_gen.sort_index()\n",
    "    \n",
    "    sep.gen=sep.gen.sort_index()\n",
    "      \n",
    "    vgen = sep.res_gen['vm_pu'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    barra = sep.gen['bus'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    thetagen = sep.res_gen['va_degree'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    pgen = sep.res_gen['p_mw'].to_numpy(dtype=np.float64)/100\n",
    "    \n",
    "    qgen = sep.res_gen['q_mvar'].to_numpy(dtype=np.float64)/100\n",
    "    \n",
    "    p_lim_superior = sep.gen[\"max_p_mw\"].to_numpy(dtype=np.float32)/100\n",
    "    \n",
    "    p_lim_inferior = sep.gen[\"min_p_mw\"].to_numpy(dtype=np.float32)/100\n",
    "    \n",
    "    q_lim_superior = sep.gen[\"max_q_mvar\"].to_numpy(dtype=np.float32)/100\n",
    "    \n",
    "    q_lim_inferior = sep.gen[\"min_q_mvar\"].to_numpy(dtype=np.float32)/100\n",
    "\n",
    "    \n",
    "    if relatorio==True:\n",
    "        \n",
    "        tabela = np.zeros((len(vgen),6))\n",
    "        tabela[:,0] = pgen\n",
    "        tabela[:,1] = p_lim_superior\n",
    "        tabela[:,2] = p_lim_inferior\n",
    "        tabela[:,3] = qgen\n",
    "        tabela[:,4] = q_lim_superior\n",
    "        tabela[:,5] = q_lim_inferior\n",
    "\n",
    "\n",
    "        table = tabulate.tabulate(tabela, headers = ['P (pu)','P Lim. Sup. (pu)','P Lim. Inf. (pu)','Q (pu)','Q Lim. Sup. (pu)','Q Lim. Inf. (pu)'], tablefmt=\"psql\")\n",
    "        print(table)\n",
    "    \n",
    "\n",
    "        sns.scatterplot(x=barra,y=qgen,color='blue',label='Potência Gerada',s=75)\n",
    "        sns.lineplot(x=barra,y=q_lim_superior,color='red',label='Limite Superior',alpha=0.5)\n",
    "        sns.lineplot(x=barra,y=q_lim_inferior,color='orange',label='Limite Inferior',alpha=0.5)\n",
    "        plt.grid()\n",
    "        plt.title('Potência Reativa Gerada')\n",
    "        plt.xlabel('Barra do Sistema')\n",
    "        plt.ylabel('Potência Reativa (pu)')\n",
    "        plt.legend(loc='best')\n",
    "        \n",
    "    \n",
    "    if relatorio==False:\n",
    "        \n",
    "        return vgen, thetagen, pgen, qgen, p_lim_superior, p_lim_inferior, q_lim_superior, q_lim_inferior,barra\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----------+--------------------+--------------------+-------------+--------------------+--------------------+\n",
      "|   P (pu) |   P Lim. Sup. (pu) |   P Lim. Inf. (pu) |      Q (pu) |   Q Lim. Sup. (pu) |   Q Lim. Inf. (pu) |\n",
      "|----------+--------------------+--------------------+-------------+--------------------+--------------------|\n",
      "|     0    |               1    |                  0 |   2.06156   |               0.15 |              -0.05 |\n",
      "|     0    |               1    |                  0 |   6.31842   |               3    |              -3    |\n",
      "|     0    |               1    |                  0 |   3.41023   |               0.5  |              -0.13 |\n",
      "|     0    |               1    |                  0 |  -4.29533   |               3    |              -3    |\n",
      "|     4.5  |               5.5  |                  0 |  -0.706845  |               2    |              -1.47 |\n",
      "|     0.85 |               1.85 |                  0 |  -4.38329   |               1.2  |              -0.35 |\n",
      "|     0    |               1    |                  0 |  -2.64639   |               0.3  |              -0.1  |\n",
      "|     0    |               1    |                  0 |  -1.99932   |               0.5  |              -0.16 |\n",
      "|     0    |               1    |                  0 |   6.77186   |               0.24 |              -0.08 |\n",
      "|     0    |               1    |                  0 |   1.46525   |               3    |              -3    |\n",
      "|     2.2  |               3.2  |                  0 |  -2.70534   |               1.4  |              -0.47 |\n",
      "|     3.14 |               4.14 |                  0 |   1.16567   |              10    |             -10    |\n",
      "|     0    |               1    |                  0 |  -0.643456  |               3    |              -3    |\n",
      "|     0.07 |               1.07 |                  0 |   1.46152   |               3    |              -3    |\n",
      "|     0    |               1    |                  0 |   2.46595   |               0.42 |              -0.14 |\n",
      "|     0    |               1    |                  0 |  -0.227106  |               0.24 |              -0.08 |\n",
      "|     0    |               1    |                  0 |  -0.710122  |               0.24 |              -0.08 |\n",
      "|     0    |               1    |                  0 |  -0.854983  |               3    |              -3    |\n",
      "|     0    |               1    |                  0 |   1.8811    |               3    |              -3    |\n",
      "|     0.19 |               1.19 |                  0 |   0.312412  |               1    |              -1    |\n",
      "|     2.04 |               3.04 |                  0 |   4.24403   |               2.1  |              -0.85 |\n",
      "|     0.48 |               1.48 |                  0 |  14.0899    |               3    |              -3    |\n",
      "|     0    |               1    |                  0 |   8.823     |               0.23 |              -0.08 |\n",
      "|     0    |               1    |                  0 | -20.2894    |               0.15 |              -0.08 |\n",
      "|     1.55 |               2.55 |                  0 |   3.55043   |               1.8  |              -0.6  |\n",
      "|     1.6  |               2.6  |                  0 |  -0.702265  |               3    |              -1    |\n",
      "|     0    |               1    |                  0 |   0.237083  |               0.2  |              -0.2  |\n",
      "|     3.91 |               4.91 |                  0 |  -1.82509   |               2    |              -0.67 |\n",
      "|     3.92 |               4.92 |                  0 |  -5.37324   |               2    |              -0.67 |\n",
      "|     0    |               1    |                  0 |  -3.32069   |               0.32 |              -0.1  |\n",
      "|     0    |               1    |                  0 |  -0.827819  |               1    |              -1    |\n",
      "|     0    |               1    |                  0 |   1.69733   |               1    |              -1    |\n",
      "|     0    |               1    |                  0 |   1.92712   |               0.09 |              -0.06 |\n",
      "|     0    |               1    |                  0 |   0.964269  |               0.23 |              -0.08 |\n",
      "|     0    |               1    |                  0 |   2.22278   |               0.7  |              -0.2  |\n",
      "|     4.77 |               5.77 |                  0 |   3.4432    |               2.8  |              -1.65 |\n",
      "|     0    |               1    |                  0 |   0.760159  |               0.23 |              -0.08 |\n",
      "|     0.04 |               1.04 |                  0 |  -0.0933981 |              10    |              -1    |\n",
      "|     6.07 |               7.07 |                  0 |  -4.04801   |               3    |              -2.1  |\n",
      "|     0    |               1    |                  0 |   2.80951   |               3    |              -3    |\n",
      "|     0    |               1    |                  0 |   0.613081  |               1    |              -1    |\n",
      "|     0    |               1    |                  0 |   1.59804   |               0.09 |              -0.03 |\n",
      "|     0    |               1    |                  0 |  -0.48511   |               1    |              -1    |\n",
      "|     2.52 |               3.52 |                  0 |  -1.33999   |               1.55 |              -0.5  |\n",
      "|     0.4  |               1.4  |                  0 |  -0.570224  |               0.4  |              -0.15 |\n",
      "|     0    |               1    |                  0 |  -0.478686  |               0.23 |              -0.08 |\n",
      "|     0    |               1    |                  0 |   1.44741   |               0.23 |              -0.08 |\n",
      "|     0    |               1    |                  0 |  -0.0386224 |               2    |              -2    |\n",
      "|     0    |               1    |                  0 |   3.46159   |               0.23 |              -0.08 |\n",
      "|     0.36 |               1.36 |                  0 |  -0.11105   |              10    |              -1    |\n",
      "|     0    |               1    |                  0 |  -1.39713   |              10    |              -1    |\n",
      "|     0    |               1    |                  0 |  -0.943522  |               2    |              -1    |\n",
      "|     0    |               1    |                  0 |   3.16135   |              10    |             -10    |\n",
      "+----------+--------------------+--------------------+-------------+--------------------+--------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_gen(sep118,relatorio=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.5 Função Objetivo Para Calcular as Perdas de Potência Ativa nas Linhas de Transmissão"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "metadata": {},
   "outputs": [],
   "source": [
    "def func_objetivo(vbarra,theta,condutancias,relatorio=True):\n",
    "    \n",
    "       \n",
    "    '''\n",
    "    \n",
    "    Calcula as perdas nas linhas de transmissão de acordo com as tensões, ângulos das barras e condutâncias de linha.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------\n",
    "    vbarra : tensão da barra.\n",
    "    theta : ângulo da barra.\n",
    "    condutancias : matriz de condutâncias de linha (triângulo superior)\n",
    "    \n",
    "    caso relatorio = True, retorna relatório informando a matriz de perdas de linha e as perdas totais.\n",
    "                caso relatorio = False, retorna apenas as perda em pu.\n",
    "    \n",
    "    Retorno\n",
    "    ----------\n",
    "    \n",
    "    perdas : perdas de potência ativa em pu.\n",
    "    \n",
    "    \n",
    "    Observações:\n",
    "    - - - - - - -\n",
    "    \n",
    "    Potência Aparente de Base : 100 MVA\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "        \n",
    "    '''\n",
    "    \n",
    "    \n",
    "    matriz_v = np.zeros((len(vbarra),len(vbarra)), dtype=np.float64)\n",
    "    \n",
    "    matriz_theta = np.zeros((len(theta),len(theta)), dtype=np.float64)\n",
    "    \n",
    "    for barra in range(len(vbarra)):\n",
    "        \n",
    "        matriz_v[:,barra]=vbarra\n",
    "        matriz_theta[:,barra]=theta\n",
    "        \n",
    "    \n",
    "    soma_v = np.power(matriz_v,2) + np.power(matriz_v.T,2)\n",
    "    \n",
    "    subtrai_theta = matriz_theta - matriz_theta.T\n",
    "    \n",
    "    cosenotheta=np.cos(np.radians(subtrai_theta))\n",
    "    \n",
    "    produto = 2 * np.multiply(np.multiply(matriz_v, matriz_v.T),cosenotheta)\n",
    "    \n",
    "    matriz_perdas = np.multiply(condutancias,soma_v-produto) \n",
    "    \n",
    "    perdas = np.sum(matriz_perdas,dtype=np.float64)\n",
    "    \n",
    "    if relatorio == True:\n",
    "        \n",
    "        tabela = np.zeros((1,2))\n",
    "        tabela[:,0] = perdas\n",
    "        tabela[:,1] = perdas*100\n",
    "        table = tabulate.tabulate(tabela, headers = ['Perdas Totais Nas Linhas (pu)','Perdas Totais Nas Linhas (MW)'], tablefmt=\"psql\")\n",
    "        print(table)\n",
    "        \n",
    "        if len(vbarra) ==14:\n",
    "            plt.figure(figsize=(18,10))\n",
    "            sns.heatmap(100*(matriz_perdas+matriz_perdas.T),annot=True,cmap=\"jet\")\n",
    "            plt.xlabel('Barra Origem')\n",
    "            plt.ylabel('Barra Destino')\n",
    "            plt.title('Matriz de Perdas de Linha Completa [MW]')\n",
    "\n",
    "     \n",
    "    else:\n",
    "    \n",
    "        return perdas\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------------------------------+---------------------------------+\n",
      "|   Perdas Totais Nas Linhas (pu) |   Perdas Totais Nas Linhas (MW) |\n",
      "|---------------------------------+---------------------------------|\n",
      "|                        0.146496 |                         14.6496 |\n",
      "+---------------------------------+---------------------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tensao,angulo, vlims ,vlimi = coleta_dados_vbus(sep14,relatorio=False)\n",
    "matrizg = matriz_condutancia(sep14,relatorio=False)\n",
    "\n",
    "func_objetivo(tensao,angulo,matrizg,relatorio=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.6 Função Para Calcular a Penalização por Ultrapassagem de Tensão"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pen_tensao(vbus, limite_sup, limite_inf,relatorio=True):\n",
    "    \n",
    "    \"\"\"    \n",
    "    Calcula a parcela de penalização pura (sem constante de multiplicação) referente a violação dos limites de tensão.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------   \n",
    "    vbus : tensões das barras do sistema elétrico.\n",
    "    limite_sup : limite superior das tensões das barras do sistema elétrico.\n",
    "    limite_inf : limite inferior das tensões das barras do sistema elétrico.\n",
    "    \n",
    "    limite_sup : tensões\n",
    "    relatorio : caso relatorio = True, retorna penalização e nº de violações \n",
    "                caso relatorio = False, retorna apenas o valor de penalização.\n",
    "    Retorno\n",
    "    -------    \n",
    "    penalização: somatório da diferença ao quadradado das tensões que ultrapassaram os limites inferiores ou superiores.\n",
    "    \n",
    "    Observações:\n",
    "    ------------\n",
    "    \n",
    "    ...\n",
    "    \n",
    "    \"\"\"\n",
    "    \n",
    "    \n",
    "    inferior = vbus - limite_inf\n",
    "    superior = limite_sup - vbus\n",
    "    penalizacao = np.sum(np.power(superior[superior<0],2))+np.sum(np.power(inferior[inferior<0],2))\n",
    "    \n",
    "    if relatorio == True:\n",
    "        \n",
    "        print('Penalização de Tensão:\\n')\n",
    "        print(penalizacao,'\\n')\n",
    "        print('Número de Violações:\\n')\n",
    "        print(len(inferior[inferior<0])+len(superior[superior<0]))\n",
    "     \n",
    "    else:\n",
    "    \n",
    "        return penalizacao\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Penalização de Tensão:\n",
      "\n",
      "0.0023502551211096096 \n",
      "\n",
      "Número de Violações:\n",
      "\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "pen_tensao(tensao,vlims,vlimi,relatorio=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.7 Função Para Calcular a Penalização por Ultrapassagem de Geração de Reativo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pen_ger_reativo(q, limite_sup, limite_inf,relatorio=True):\n",
    "    \n",
    "    \"\"\"    \n",
    "    Calcula a parcela de penalização pura (sem constante de multiplicação) referente a violação dos limites de geração de reativos.\n",
    "    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n",
    "    \n",
    "    Parâmetros\n",
    "    ----------   \n",
    "    q : potências reativas das barras de controle de reativo do sistema elétrico.\n",
    "    limite_sup : limite superior das potências reativas das barras de controle de reativo do sistema elétrico.\n",
    "    limite_inf : limite superior das potências reativas das barras de controle de reativo do sistema elétrico.\n",
    "    \n",
    "    limite_sup : tensões\n",
    "    relatorio : caso relatorio = True, retorna penalização e nº de violações \n",
    "                caso relatorio = False, retorna apenas o valor de penalização.\n",
    "    Retorno\n",
    "    -------    \n",
    "    penalização: somatório da diferença ao quadradado das potências reativas que ultrapassaram os limites inferiores ou superiores.\n",
    "    \n",
    "    Observações:\n",
    "    ------------\n",
    "    \n",
    "    ...\n",
    "    \n",
    "    \"\"\"\n",
    "    inferior = q - limite_inf\n",
    "    superior = limite_sup - q\n",
    "    penalizacao = np.sum(np.power(superior[superior<0],2))+np.sum(np.power(inferior[inferior<0],2))\n",
    "    \n",
    "    if relatorio == True:\n",
    "        \n",
    "        print('Penalização de Geração de Reativos:\\n')\n",
    "        print(penalizacao,'\\n')\n",
    "        print('Número de Violações:\\n')\n",
    "        print(len(inferior[inferior<0])+len(superior[superior<0]))\n",
    "        \n",
    "    else:\n",
    "    \n",
    "        return penalizacao\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "vgen, thetagen, pgen, qgen, p_lim_superior, p_lim_inferior, q_lim_superior, q_lim_inferior,barra = coleta_dados_gen(sep14,relatorio=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Penalização de Geração de Reativos:\n",
      "\n",
      "0.0 \n",
      "\n",
      "Número de Violações:\n",
      "\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "pen_ger_reativo(qgen, q_lim_superior, q_lim_inferior,relatorio=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resultado Esperado:\n",
      "\n",
      "0.0\n"
     ]
    }
   ],
   "source": [
    "print('Resultado Esperado:\\n')\n",
    "print(0.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.8 Função Para Coletar Dados de Carregamento e TAP dos Trafos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "metadata": {},
   "outputs": [],
   "source": [
    "def coleta_dados_trafo(sep, relatorio=True):\n",
    "    \n",
    "    '''    \n",
    "    \n",
    "    \n",
    "    Valores dos TAPs Retirados de:\n",
    "    \n",
    "    - REFORMULAÇÃO DAS RESTRIÇÕESDE COMPLEMENTARIDADE EM PROBLEMAS DE FLUXO DE POTÊNCIA ÓTIMO\n",
    "      Marina Valença Alencar - Dissertação de Mestrado\n",
    "\n",
    "    - FUNÇÕES PENALIDADE PARA O TRATAMENTO DAS VARIÁVEIS DISCRETAS DO PROBLEMA DE FLUXO DE POTÊNCIA ÓTIMO REATIVO\n",
    "      Daisy Paes Silva - Dissertação de Mestrado\n",
    "    \n",
    "\n",
    "    ''' \n",
    "    \n",
    "    sep.trafo.sort_index()\n",
    "   \n",
    "    sep.res_trafo.sort_index()\n",
    "    \n",
    "    sep.trafo['tap_pos']=np.abs(sep.trafo['tap_pos'])\n",
    "    \n",
    "    n_trafos_controlados = sep.trafo['tap_pos'].count()\n",
    "    \n",
    "    carregamento = sep.res_trafo['loading_percent'].to_numpy()\n",
    "    \n",
    "    tap_pos = sep.trafo[~pd.isnull(sep.trafo['tap_pos'])]['tap_pos'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    tap_neutral = sep.trafo[~pd.isnull(sep.trafo['tap_neutral'])]['tap_neutral'].to_numpy(dtype=np.float64)\n",
    "    \n",
    "    tap_step_percent = sep.trafo[~pd.isnull(sep.trafo['tap_step_percent'])]['tap_step_percent'].to_numpy(dtype=np.float64)\n",
    "        \n",
    "    \n",
    "    if len(sep.bus)==14:\n",
    "        \n",
    "        step = 0.01\n",
    "        valores_taps = np.arange(start = 0.95, stop = 1.1, step = step)\n",
    "        \n",
    "        \n",
    "    if len(sep.bus)==30:\n",
    "        \n",
    "        step = 0.01\n",
    "        valores_taps = np.arange(start = 0.95, stop = 1.05, step = step)\n",
    "        \n",
    "                \n",
    "    if len(sep.bus)==118:\n",
    "        \n",
    "        step = 0.01\n",
    "        valores_taps = np.arange(start = 0.9, stop = 1.05, step = step)\n",
    "\n",
    "                    \n",
    "    if len(sep.bus)==300:\n",
    "        \n",
    "        step = 0.01\n",
    "        valores_taps = np.arange(start = 0.9, stop = 1.05, step = step)\n",
    "        \n",
    "        \n",
    "    if relatorio == True:\n",
    "        \n",
    "    \n",
    "        tap_pos = sep.trafo[~pd.isnull(sep.trafo['tap_pos'])]['tap_pos'].to_numpy(dtype=np.float64)\n",
    "\n",
    "        tap_neutral = sep.trafo[~pd.isnull(sep.trafo['tap_neutral'])]['tap_neutral'].to_numpy(dtype=np.float64)\n",
    "\n",
    "        tap_step_percent = sep.trafo[~pd.isnull(sep.trafo['tap_step_percent'])]['tap_step_percent'].to_numpy(dtype=np.float64)\n",
    "        \n",
    "        valor_percentual= (tap_pos-tap_neutral)*(tap_step_percent/100) + 1\n",
    "        \n",
    "        plt.figure(figsize=(20,10))\n",
    "        sns.scatterplot(x=np.arange(0,len(sep.trafo),1),y=carregamento,label='Carregamento',color='b',s=75)\n",
    "        sns.lineplot(x=np.arange(0,len(sep.trafo),1),y=np.ones((len(sep.trafo))),label='Limite Máximo de Carregamento',color='r')\n",
    "        plt.grid()\n",
    "        \n",
    "        plt.xlabel('Nº do Trafo')\n",
    "        plt.ylabel('Carregamento %')\n",
    "        plt.title('Carregamento dos Transformadores')\n",
    "        \n",
    "        plt.figure(figsize=(20,10))\n",
    "        sns.scatterplot(x=np.arange(0,len(tap_pos)),y=valor_percentual,label='Valor do TAP',color='b',s=75)\n",
    "        sns.lineplot(x=np.arange(0,len(tap_pos)),y=np.tile([1.5], (len(tap_pos))),label='Limite Máximo do TAP',color='r')\n",
    "        sns.lineplot(x=np.arange(0,len(tap_pos)),y=np.tile([0.95], (len(tap_pos))),label='Limite Mínimo do TAP',color='orange')\n",
    "        plt.grid()\n",
    "\n",
    "\n",
    "\n",
    "        \n",
    "        \n",
    "        print('Carregamento do Trafo (pu):\\n')\n",
    "        print(carregamento,'\\n')\n",
    "        print('Número de Trafos com TAP Controlado:\\n')\n",
    "        print(n_trafos_controlados,'\\n')\n",
    "        print('Valores dos TAPs:\\n')\n",
    "        print(valor_percentual,'\\n')\n",
    "        \n",
    "        \n",
    "    else:\n",
    "        \n",
    "        return tap_pos, tap_neutral, tap_step_percent,valores_taps\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Carregamento do Trafo (pu):\n",
      "\n",
      "[0.32896729 0.16454675 0.44374128 0.07400966 0.29592504] \n",
      "\n",
      "Número de Trafos com TAP Controlado:\n",
      "\n",
      "3 \n",
      "\n",
      "Valores dos TAPs:\n",
      "\n",
      "[1.05 1.   1.03] \n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_trafo(sep14,relatorio=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pen_trafo(linha,n_tap,n_vgen):\n",
    "    \n",
    "    step = 0.01\n",
    "\n",
    "    linha[-3] = np.sum(np.square(np.sin((linha[n_vgen:n_vgen+n_tap]*np.pi/step))))\n",
    "    \n",
    "    return linha"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.       , 0.       , 0.       , 0.       , 0.95     , 0.97     ,\n",
       "       1.003    , 0.       , 0.       , 0.       , 0.       , 0.6545085,\n",
       "       0.       , 0.       ])"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pen_trafo(np.array([0,0,0,0,0.95,0.97,1.003,0,0,0,0,0,0,0]), n_tap=3, n_vgen=4)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.9 Função Para Coletar Dados dos Reativos Shunt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "def coleta_dados_bshunt(sep):\n",
    "    \n",
    "    '''    \n",
    "    \n",
    "    \n",
    "    Valores dos Shunt Retirados de:\n",
    "    \n",
    "    - REFORMULAÇÃO DAS RESTRIÇÕESDE COMPLEMENTARIDADE EM PROBLEMAS DE FLUXO DE POTÊNCIA ÓTIMO\n",
    "      Marina Valença Alencar - Dissertação de Mestrado\n",
    "\n",
    "    - FUNÇÕES PENALIDADE PARA O TRATAMENTO DAS VARIÁVEIS DISCRETAS DO PROBLEMA DE FLUXO DE POTÊNCIA ÓTIMO REATIVO\n",
    "      Daisy Paes Silva - Dissertação de Mestrado\n",
    "    \n",
    "\n",
    "    ''' \n",
    "    \n",
    "    \n",
    "    bus = sep.shunt['bus'].sort_values().to_numpy()\n",
    "  \n",
    "    \n",
    "    if len(sep.bus)==14:\n",
    "        \n",
    "        bsh = np.array([[0,0.05,0.15,0.19,0.20,0.24,0.34,0.39]])\n",
    "        \n",
    "        \n",
    "    if len(sep.bus)==30:\n",
    "        \n",
    "        bsh = np.array([[0,0.05,0.15,0.19,0.20,0.24,0.34,0.39],[0, 0.04, 0.05, 0.09]])\n",
    "        \n",
    "                \n",
    "    if len(sep.bus)==118:\n",
    "        \n",
    "        bsh = np.array([[-0.40, -0.20, 0],[0, 0.06, 0.07, 0.13, 0.14, 0.20],[-0.25, -0.20, 0],[0, 0.10],[0, 0.10],[0, 0.10],[0, 0.15],[0.08, 0.12, 0.20],[0.10, 0.20],[0.10, 0.20],[0.10, 0.20],[0.10, 0.20],[0, 0.06, 0.07, 0.13, 0.14, 0.20],[0, 0.06, 0.07, 0.13, 0.14, 0.20]])\n",
    "                            \n",
    "    if len(sep.bus)==300:\n",
    "        \n",
    "    # PRECISA ENCONTRAR OS DADOS\n",
    "        return 0\n",
    "    \n",
    "    return bsh, bus\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "bsh,bus=coleta_dados_bshunt(sep14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.  , 0.05, 0.15, 0.19, 0.2 , 0.24, 0.34, 0.39]])"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bsh"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.10 Função Para Converter TAPS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "metadata": {},
   "outputs": [],
   "source": [
    "def converte_trafo(tap_pos, tap_neutral, tap_step_percent,valores_taps):\n",
    "    \n",
    "    '''\n",
    "    Converte TAPS conforme equação disponibilizada pelo pandapower.\n",
    "    \n",
    "    https://pandapower.readthedocs.io/en/v2.1.0/elements/trafo.html\n",
    "    \n",
    "    '''\n",
    "    \n",
    "    taps_convertido = tap_neutral + ((valores_taps - 1.0)*(100/tap_step_percent))\n",
    "    \n",
    "    \n",
    "    return taps_convertido"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-2.27272727, -1.61290323, -0.73529412])"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tap_pos, tap_neutral, tap_step_percent,valores_taps = coleta_dados_trafo(sep14,relatorio=False)\n",
    "\n",
    "converte_trafo(np.array([0.98,0.95,1.1]), tap_neutral, tap_step_percent,valores_taps[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.11 Função Para Criar Alcateia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "metadata": {},
   "outputs": [],
   "source": [
    "def cria_alcateia(sep,n_lobos):\n",
    "    \n",
    "    \"\"\"\"\n",
    "    \n",
    "    Cria a alcatéia de lobos cinzentos.\n",
    "    \n",
    "    linhas = partículas\n",
    "    \n",
    "    colunas = tensões geradores, tap transformadores, susceptâncias shunt, perdas, penalização de tensão, penalização de reativo, penalização de trafo, penalização shunt, fitness\n",
    "   \n",
    "    \n",
    "    \"\"\"\n",
    "    \n",
    "    \n",
    "    vgen, thetagen, pgen, qgen, p_lim_superior, p_lim_inferior, q_lim_superior, q_lim_inferior,barra = coleta_dados_gen(sep,relatorio=False)\n",
    "    \n",
    "    n_vgen=len(vgen)\n",
    "    \n",
    "    vbus, theta, v_lim_superior, v_lim_inferior = coleta_dados_vbus(sep,relatorio=False)\n",
    "    \n",
    "    tap_pos, tap_neutral, tap_step_percent,valores_taps=coleta_dados_trafo(sep,relatorio=False)\n",
    "    \n",
    "    n_taps = len(tap_pos)\n",
    "    \n",
    "    bshunt , bus = coleta_dados_bshunt(sep)\n",
    "    \n",
    "    n_bshunt = len(bus)\n",
    "    \n",
    "    dimensao = n_taps + n_vgen + n_bshunt + 6\n",
    "    \n",
    "    alcateia=np.zeros((n_lobos,dimensao),dtype=np.float64)\n",
    "    \n",
    "    alcateia[:,0:n_vgen] = np.random.uniform(np.max(v_lim_inferior), np.max(v_lim_superior), size=(n_lobos,n_vgen))\n",
    "    \n",
    "    alcateia[:,n_vgen:n_vgen+n_taps]=np.random.choice(valores_taps, size =(n_lobos, n_taps))\n",
    "    \n",
    "    i=1\n",
    "    \n",
    "    i=1\n",
    "    \n",
    "    for bsh in bshunt:\n",
    "        \n",
    "        alcateia[:,n_vgen+n_taps+i-1:n_vgen+n_taps+i] = np.random.choice(bsh, size =(n_lobos, 1))\n",
    "        i=i+1\n",
    "\n",
    "    return alcateia\n",
    "    \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.01838667, 0.98945567, 1.03936038, 0.96728009, 1.05      ,\n",
       "        1.09      , 1.02      , 0.05      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.04344652, 1.0207621 , 1.03605105, 1.01805706, 0.95      ,\n",
       "        1.03      , 1.02      , 0.24      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.02612667, 0.96572018, 0.96922709, 0.9862234 , 1.03      ,\n",
       "        1.07      , 1.04      , 0.2       , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.00171274, 1.00604346, 0.99227526, 0.98750729, 1.        ,\n",
       "        0.98      , 0.97      , 0.24      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.95201051, 0.98557371, 0.96558106, 1.02154382, 0.95      ,\n",
       "        1.1       , 1.        , 0.2       , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.98453414, 0.96361238, 1.03770039, 0.99598836, 0.97      ,\n",
       "        1.01      , 0.96      , 0.24      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.98421036, 1.04378511, 0.95014363, 1.01450653, 1.        ,\n",
       "        0.96      , 1.04      , 0.19      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.96598402, 1.01359534, 0.9721794 , 0.96289065, 1.04      ,\n",
       "        1.05      , 1.09      , 0.05      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.00640765, 1.03780021, 1.01153724, 0.95086649, 1.06      ,\n",
       "        1.03      , 1.1       , 0.2       , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.95818444, 1.04421885, 1.00879665, 0.99032755, 1.06      ,\n",
       "        0.98      , 0.95      , 0.15      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ]])"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cria_alcateia(sep14,10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.12 Função Para Criar o Enxame de Partículas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "def cria_enxame(sep,n_particulas):\n",
    "    \n",
    "    \"\"\"\"\n",
    "    \n",
    "    Cria o enxame de partículas.\n",
    "    \n",
    "    \n",
    "    linhas = partículas\n",
    "    \n",
    "    colunas = tensões geradores, tap transformadores, susceptâncias shunt, perdas, penalização de tensão, penalização de reativo, penalização de trafo, penalização shunt, fitness\n",
    "    \n",
    "    \"\"\"\n",
    "    \n",
    "    \n",
    "    vgen, thetagen, pgen, qgen, p_lim_superior, p_lim_inferior, q_lim_superior, q_lim_inferior,barra = coleta_dados_gen(sep,relatorio=False)\n",
    "    \n",
    "    n_vgen=len(vgen)\n",
    "    \n",
    "    vbus, theta, v_lim_superior, v_lim_inferior = coleta_dados_vbus(sep,relatorio=False)\n",
    "    \n",
    "    tap_pos, tap_neutral, tap_step_percent,valores_taps=coleta_dados_trafo(sep,relatorio=False)\n",
    "    \n",
    "    n_taps = len(tap_pos)\n",
    "    \n",
    "    bshunt , bus = coleta_dados_bshunt(sep)\n",
    "    \n",
    "    bshunt = np.array(bshunt)\n",
    "    \n",
    "    n_bshunt = len(bus)\n",
    "    \n",
    "    dimensao = n_taps + n_vgen + n_bshunt + 6\n",
    "    \n",
    "    enxame=np.zeros((n_particulas,dimensao),dtype=np.float64)\n",
    "    \n",
    "    enxame[:,0:n_vgen] = np.random.uniform(np.max(v_lim_inferior), np.max(v_lim_superior), size=(n_particulas,n_vgen))\n",
    "    \n",
    "    enxame[:,n_vgen:n_vgen+n_taps]=np.random.choice(valores_taps, size =(n_particulas, n_taps))\n",
    "    \n",
    "    i=1\n",
    "    \n",
    "    for bsh in bshunt:\n",
    "        \n",
    "        enxame[:,n_vgen+n_taps+i-1:n_vgen+n_taps+i] = np.random.choice(bsh, size =(n_particulas, 1))\n",
    "        i=i+1\n",
    "        \n",
    "    return enxame"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.01509302, 1.04946126, 1.00040631, 0.98955512, 1.05      ,\n",
       "        1.09      , 1.        , 0.24      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.00454028, 0.96907743, 1.04987618, 0.99152399, 1.07      ,\n",
       "        0.97      , 1.        , 0.05      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.98886107, 0.98648852, 1.00996554, 1.0428411 , 1.02      ,\n",
       "        0.98      , 0.96      , 0.05      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.98842677, 1.0376951 , 1.01260933, 1.03352099, 1.01      ,\n",
       "        0.99      , 1.08      , 0.15      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ],\n",
       "       [1.04969543, 1.01782364, 1.01835412, 0.97074359, 1.02      ,\n",
       "        1.07      , 1.01      , 0.34      , 0.        , 0.        ,\n",
       "        0.        , 0.        , 0.        , 0.        ]])"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cria_enxame(sep14,5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.13 Função para Calcular o Fluxo de Potência"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fluxo_de_pot(grupo, sep):\n",
    "    \n",
    "    n_bshunt = len(sep.shunt)\n",
    "    n_vgen = len(sep.gen)\n",
    "    n_tap = np.abs(sep.trafo['tap_pos']).count()\n",
    "    \n",
    "    matrizg = matriz_condutancia(sep,relatorio=False)\n",
    "    \n",
    "    for linha in range(grupo.shape[0]):\n",
    "        \n",
    "        sep.gen['vm_pu']=grupo[linha,0:n_vgen]\n",
    "        \n",
    "        tap_pos, tap_neutral, tap_step_percent,valores_taps=coleta_dados_trafo(sep,relatorio=False)\n",
    "        \n",
    "        sep.trafo['tap_pos'][~pd.isnull(sep.trafo['tap_pos'])]=converte_trafo(tap_pos, tap_neutral, tap_step_percent,grupo[linha,n_vgen:n_vgen+n_tap])\n",
    "        \n",
    "        sep.shunt['q_mvar']=grupo[linha,n_vgen+n_tap:n_vgen+n_tap+n_bshunt]*-100\n",
    "        \n",
    "        pp.runpp(sep,algorithm='nr',numba=True, init = 'results', tolerance_mva = 1e-5)\n",
    "        \n",
    "        vbus, theta, v_lim_superior, v_lim_inferior=coleta_dados_vbus(sep,relatorio=False)\n",
    "        \n",
    "        grupo[linha,-6] = sep.res_line['pl_mw'].sum()/100 #func_objetivo(vbus,theta,matrizg,relatorio=False)\n",
    "\n",
    "        grupo[linha,-5] = pen_tensao(vbus, v_lim_superior, v_lim_inferior,relatorio=False)\n",
    "        \n",
    "        vgen, thetagen, pgen, qgen, p_lim_superior, p_lim_inferior, q_lim_superior, q_lim_inferior,barra = coleta_dados_gen(sep,relatorio=False)\n",
    "        \n",
    "        grupo[linha,-4] = pen_ger_reativo(qgen, q_lim_superior, q_lim_inferior,relatorio=False)\n",
    "        \n",
    "        grupo[linha,:] = pen_trafo(grupo[linha,:],n_tap,n_vgen)\n",
    "        \n",
    "        \n",
    "    \n",
    "    return grupo\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.02443313, 1.04594235, 0.9514816 , 0.96896463, 1.01721513,\n",
       "        0.97      , 0.98      , 1.        , 1.        , 0.2       ,\n",
       "        0.09      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [1.04855448, 0.94928543, 1.01351564, 1.00693995, 0.97075648,\n",
       "        1.02      , 1.01      , 1.03      , 0.97      , 0.05      ,\n",
       "        0.09      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [0.99522276, 0.96813292, 0.9743552 , 1.0232232 , 1.02179913,\n",
       "        1.        , 0.95      , 1.04      , 0.97      , 0.        ,\n",
       "        0.05      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [0.97709231, 0.97889918, 0.96669056, 0.9572085 , 0.9721055 ,\n",
       "        0.95      , 1.02      , 1.05      , 1.05      , 0.24      ,\n",
       "        0.04      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [1.05940635, 1.0546103 , 1.02055982, 1.01675699, 1.01575868,\n",
       "        1.04      , 1.05      , 0.98      , 1.05      , 0.2       ,\n",
       "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [0.98276468, 0.96437684, 1.03533053, 1.02653658, 0.95538161,\n",
       "        0.96      , 1.        , 0.95      , 0.96      , 0.2       ,\n",
       "        0.04      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [1.03637169, 0.9642714 , 0.9590057 , 1.01160415, 1.04089049,\n",
       "        0.95      , 0.97      , 1.03      , 1.03      , 0.24      ,\n",
       "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [0.95578198, 1.04406802, 0.98527172, 0.99665183, 0.96643361,\n",
       "        1.04      , 1.05      , 1.        , 0.96      , 0.19      ,\n",
       "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [1.02019154, 1.00243982, 0.95328708, 1.02456516, 0.95875414,\n",
       "        0.97      , 1.02      , 1.01      , 1.05      , 0.2       ,\n",
       "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ],\n",
       "       [1.04044014, 0.98781382, 1.05825537, 0.9889452 , 0.97230385,\n",
       "        0.99      , 0.97      , 0.99      , 1.05      , 0.15      ,\n",
       "        0.04      , 0.        , 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.        ]])"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "enxame=cria_enxame(sep30,10)\n",
    "enxame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00195280e+00, 9.69612264e-01, 9.82760368e-01, 1.03869785e+00,\n",
       "        9.55118887e-01, 1.03000000e+00, 9.80000000e-01, 9.90000000e-01,\n",
       "        1.02000000e+00, 5.00000000e-02, 4.00000000e-02, 1.92556061e-01,\n",
       "        6.07822981e-03, 2.59764648e-01, 2.57933583e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [9.66860713e-01, 1.02756181e+00, 9.60476755e-01, 9.70206503e-01,\n",
       "        1.03240967e+00, 1.01000000e+00, 9.90000000e-01, 9.60000000e-01,\n",
       "        1.03000000e+00, 2.00000000e-01, 9.00000000e-02, 2.44215376e-01,\n",
       "        4.93460880e-03, 1.89846326e+00, 1.30116669e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [9.71465517e-01, 9.74702563e-01, 9.69246568e-01, 9.93630343e-01,\n",
       "        1.01395006e+00, 1.01000000e+00, 1.00000000e+00, 1.01000000e+00,\n",
       "        1.01000000e+00, 2.40000000e-01, 9.00000000e-02, 2.17420934e-01,\n",
       "        2.09756943e-03, 7.51242930e-01, 2.37035967e-28, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [1.05831979e+00, 1.05041795e+00, 9.61220444e-01, 1.05833241e+00,\n",
       "        1.05282252e+00, 1.01000000e+00, 9.90000000e-01, 1.05000000e+00,\n",
       "        1.04000000e+00, 1.50000000e-01, 5.00000000e-02, 2.02366926e-01,\n",
       "        1.97564272e-03, 6.37883867e-01, 5.10248618e-28, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [9.62688279e-01, 9.64549804e-01, 9.75870663e-01, 1.01206440e+00,\n",
       "        9.95692895e-01, 9.70000000e-01, 9.70000000e-01, 1.05000000e+00,\n",
       "        9.70000000e-01, 3.90000000e-01, 9.00000000e-02, 2.29551133e-01,\n",
       "        3.27418093e-15, 1.23964938e+00, 1.54783502e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [1.04583250e+00, 1.05961163e+00, 1.00246454e+00, 1.00888873e+00,\n",
       "        9.70012132e-01, 1.03000000e+00, 9.60000000e-01, 1.03000000e+00,\n",
       "        9.60000000e-01, 1.90000000e-01, 0.00000000e+00, 1.89873239e-01,\n",
       "        3.27418093e-15, 2.83119392e-01, 2.12201228e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [1.00986037e+00, 1.03986745e+00, 9.72591450e-01, 9.61476316e-01,\n",
       "        1.03384380e+00, 1.04000000e+00, 9.80000000e-01, 1.02000000e+00,\n",
       "        9.50000000e-01, 1.50000000e-01, 0.00000000e+00, 2.02086634e-01,\n",
       "        3.27418093e-15, 4.74980439e-01, 1.74109653e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [1.01710169e+00, 9.48985902e-01, 1.03613647e+00, 9.80645794e-01,\n",
       "        1.02933737e+00, 1.02000000e+00, 1.05000000e+00, 1.00000000e+00,\n",
       "        1.00000000e+00, 1.90000000e-01, 5.00000000e-02, 1.96867688e-01,\n",
       "        3.27418093e-15, 1.02727046e+00, 4.15810007e-28, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [9.84671091e-01, 1.03211425e+00, 1.04544191e+00, 1.04791645e+00,\n",
       "        9.77622744e-01, 1.00000000e+00, 1.05000000e+00, 9.70000000e-01,\n",
       "        9.80000000e-01, 0.00000000e+00, 9.00000000e-02, 2.29794357e-01,\n",
       "        3.27418093e-15, 2.63677899e+00, 1.64591889e-27, 0.00000000e+00,\n",
       "        0.00000000e+00],\n",
       "       [9.90838199e-01, 1.04492290e+00, 1.03918697e+00, 9.45193662e-01,\n",
       "        1.02956546e+00, 1.00000000e+00, 1.05000000e+00, 1.04000000e+00,\n",
       "        9.70000000e-01, 3.40000000e-01, 9.00000000e-02, 2.20544604e-01,\n",
       "        3.27418093e-15, 2.13617062e+00, 7.81872943e-28, 0.00000000e+00,\n",
       "        0.00000000e+00]])"
      ]
     },
     "execution_count": 284,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fluxo_de_pot(enxame,sep30)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.14 Função para Calcular o Fitness (J)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fitness (grupo,zeta,psi,sigma,omega):\n",
    "    \n",
    "# fitness J       perdas         pen tensão         pen q mvar          pen trafo           pen bshunt       \n",
    "    grupo[:,-1]=(grupo[:,-6])+(zeta*grupo[:,-5])+(psi*grupo[:,-4])+(sigma*grupo[:,-3])+(omega*grupo[:,-2])\n",
    "\n",
    "    return grupo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "metadata": {},
   "outputs": [],
   "source": [
    "grupofit=fitness(grupo,100,100,0,0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00093963e+00, 9.65466622e-01, 9.52140013e-01, 9.62405772e-01,\n",
       "        1.04457965e+00, 9.50000000e-01, 9.80000000e-01, 9.50000000e-01,\n",
       "        1.05000000e+00, 3.90000000e-01, 9.00000000e-02, 1.95358851e-01,\n",
       "        8.89732424e-03, 3.26842063e-02, 1.13603918e-27, 0.00000000e+00,\n",
       "        4.35351190e+00],\n",
       "       [1.04335044e+00, 9.98760451e-01, 9.67173254e-01, 9.80524495e-01,\n",
       "        9.87867196e-01, 9.60000000e-01, 9.70000000e-01, 1.02000000e+00,\n",
       "        9.60000000e-01, 1.50000000e-01, 4.00000000e-02, 1.90850052e-01,\n",
       "        1.65755767e-04, 4.79014627e-01, 1.16839732e-27, 0.00000000e+00,\n",
       "        4.81088883e+01]])"
      ]
     },
     "execution_count": 287,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grupofit = grupofit[np.argsort(grupofit[:, -1])]\n",
    "\n",
    "\n",
    "grupofit[0:2,:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.15 Função para Validação"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [],
   "source": [
    "def validacao (sep, best_solution):\n",
    "    \n",
    "    n_bshunt = len(sep.shunt)\n",
    "    \n",
    "    n_vgen = len(sep.gen)\n",
    "    \n",
    "    n_tap = np.abs(sep.trafo['tap_pos']).count()\n",
    "    \n",
    "    sep.gen['vm_pu']=best_solution[0:n_vgen]\n",
    "        \n",
    "    tap_pos, tap_neutral, tap_step_percent,valores_taps=coleta_dados_trafo(sep,relatorio=False)\n",
    "        \n",
    "    sep.trafo['tap_pos'][~pd.isnull(sep.trafo['tap_pos'])]=converte_trafo(tap_pos, tap_neutral, tap_step_percent,best_solution[n_vgen:n_vgen+n_tap])\n",
    "        \n",
    "    sep.shunt['q_mvar']=best_solution[n_vgen+n_tap:n_vgen+n_tap+n_bshunt]*-100\n",
    "        \n",
    "    pp.runpp(sep,algorithm='nr')\n",
    "           \n",
    "    print('Sistema Simulado Para a Solução:\\n')\n",
    "    print(best_solution)\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Implementação de Métodos de Otimização Meta-Heurísticos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 Método Alcateia de Lobos Cinzentos "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "metadata": {},
   "outputs": [],
   "source": [
    "def otimizacao_alcateia_de_lobos_cinzentos(sep, zeta, psi, sigma, omega, max_iter, n_lobos,relatorio=True):\n",
    "        \n",
    "    alcateia_fit = cria_alcateia(sep,n_lobos)\n",
    "\n",
    "    j = []\n",
    "    \n",
    "    perdas = []\n",
    "    \n",
    "    pen_v = []\n",
    "    \n",
    "    pen_gq = []\n",
    "    \n",
    "    pen_tap = []\n",
    "    \n",
    "    pen_bsh = []\n",
    "\n",
    "    \n",
    "    v_lim_superior = np.repeat(sep.bus['max_vm_pu'][0], len(sep.gen))\n",
    "    v_lim_inferior = np.repeat(sep.bus['min_vm_pu'][0], len(sep.gen))\n",
    "    \n",
    "    tap_pos, tap_neutral, tap_step_percent,valores_taps = coleta_dados_trafo(sep,relatorio=False)\n",
    "    \n",
    "    tap_max = np.repeat(valores_taps[-1], len(tap_pos))\n",
    "    \n",
    "    tap_min = np.repeat(valores_taps[0], len(tap_pos))\n",
    "    \n",
    "    bsh,b=coleta_dados_bshunt(sep)\n",
    "\n",
    "    bsh_max=[]\n",
    "    \n",
    "    bsh_min=[]\n",
    "    \n",
    "    alcateias = []\n",
    "    \n",
    "    for bs in bsh:\n",
    "        bsh_max.append([np.max(bs)])\n",
    "        bsh_min.append([np.min(bs)])\n",
    "\n",
    "\n",
    "    maximo = np.expand_dims(np.concatenate((v_lim_superior, tap_max, bsh_max), axis = None), 0)\n",
    "    minimo = np.expand_dims(np.concatenate((v_lim_inferior, tap_min, bsh_min), axis = None), 0)\n",
    "     \n",
    "    \n",
    "    lim_sup = np.tile(maximo, (n_lobos,1))\n",
    "    lim_inf = np.tile(minimo, (n_lobos,1))\n",
    "    \n",
    "    \n",
    "    for i in range(0,max_iter):\n",
    "\n",
    "        start = time.time()\n",
    "       \n",
    "        alcateia_fit = fluxo_de_pot(alcateia_fit,sep)\n",
    "        \n",
    "        alcateia_fit = fitness(alcateia_fit,zeta,psi,sigma,omega)\n",
    "\n",
    "        alcateia_fit = alcateia_fit[np.argsort(alcateia_fit[:, -1])]\n",
    "        \n",
    "        a = 2 - (i*(2/max_iter))\n",
    "        \n",
    "        r1 = np.random.random_sample(size = (n_lobos,alcateia_fit[:,0:-6].shape[1]))\n",
    "        \n",
    "        r2 = np.random.random_sample(size = (n_lobos,alcateia_fit[:,0:-6].shape[1]))\n",
    "\n",
    "        A = (2*a*r1) - a\n",
    "        \n",
    "        C = 2*r2\n",
    "        \n",
    "        if (i == 0):\n",
    "        \n",
    "            lobo_alfa = alcateia_fit[0, :].copy()\n",
    "            lobo_beta = alcateia_fit[1, :].copy()\n",
    "            lobo_delta = alcateia_fit[2, :].copy()\n",
    "            \n",
    "            alfa = np.expand_dims(alcateia_fit[0,0:-6].copy(), 1)\n",
    "            beta = np.expand_dims(alcateia_fit[1,0:-6].copy(), 1)\n",
    "            delta = np.expand_dims(alcateia_fit[2,0:-6].copy(), 1)\n",
    "            \n",
    "        \n",
    "        for t in range(3):\n",
    "\n",
    "            if (alcateia_fit[t, -1] < lobo_alfa[-1]):\n",
    "\n",
    "                lobo_alfa = alcateia_fit[0,:].copy()\n",
    "                    \n",
    "                alcateias.append(alcateia_fit)\n",
    "\n",
    "                alfa = np.expand_dims(alcateia_fit[1,0:-6].copy(), 1)\n",
    "\n",
    "            if (alcateia_fit[t,-1] > lobo_alfa[-1] and alcateia_fit[t,-1] < lobo_beta[-1]):\n",
    "\n",
    "                lobo_beta = alcateia_fit[1,:].copy()\n",
    "\n",
    "                beta = np.expand_dims(alcateia_fit[1,0:-6].copy(), 1)\n",
    "\n",
    "            if (alcateia_fit[t,-1] > lobo_alfa[-1] and alcateia_fit[t,-1] > lobo_beta[-1] and alcateia_fit[t,-1] < lobo_delta[-1]):\n",
    "\n",
    "                lobo_delta = alcateia_fit[2, :].copy()\n",
    "\n",
    "                delta = np.expand_dims(alcateia_fit[2,0:-6].copy(), 1)         \n",
    "        \n",
    "\n",
    "        d_alfa = np.abs(np.multiply(C, alfa.T) - alcateia_fit[:, 0:-6])\n",
    "\n",
    "        d_beta = np.abs(np.multiply(C, beta.T) - alcateia_fit[:, 0:-6])\n",
    "\n",
    "        d_delta = np.abs(np.multiply(C, delta.T) - alcateia_fit[:, 0:-6])\n",
    "\n",
    "        x_alfa = alfa.T - np.multiply(A, d_alfa)\n",
    "\n",
    "        x_beta = beta.T - np.multiply(A, d_beta)\n",
    "\n",
    "        x_delta = delta.T - np.multiply(A, d_delta)\n",
    "\n",
    "        alcateia_fit[:,0:-6] = (x_alfa + x_beta + x_delta)/3\n",
    "\n",
    "        alca_estat = alcateia_fit[:,-6:]\n",
    "\n",
    "        alcateia_fit = np.concatenate(( np.clip(alcateia_fit[:,0:-6], a_min = lim_inf, a_max = lim_sup, out = alcateia_fit[:,0:-6]),alca_estat),axis=1)\n",
    "        \n",
    "    \n",
    "        end = time.time()\n",
    "\n",
    "        elapsed = end - start\n",
    "        \n",
    "        j.append(lobo_alfa[-1])\n",
    "\n",
    "        perdas.append(lobo_alfa[-6])\n",
    "\n",
    "        pen_v.append(lobo_alfa[-5])\n",
    "\n",
    "        pen_gq.append(lobo_alfa[-4])\n",
    "\n",
    "        pen_tap.append(lobo_alfa[-3])\n",
    "\n",
    "        pen_bsh.append(lobo_alfa[-2])       \n",
    "        \n",
    "        tempo = []\n",
    "        \n",
    "        tempo.append(elapsed)\n",
    "        \n",
    "        if relatorio == True:\n",
    "            \n",
    "            print(' ')\n",
    "\n",
    "            print('Lobo Alfa da Iteração:',i)\n",
    "\n",
    "            print('Perdas (pu):',lobo_alfa[-6])\n",
    "\n",
    "            print('Penalização de Tensão:',lobo_alfa[-5])\n",
    "\n",
    "            print('Penalização de Geração de Reativo:',lobo_alfa[-4])\n",
    "\n",
    "            print('Penalização do Tap:',lobo_alfa[-3])\n",
    "\n",
    "            print('Penalização do Bshunt:',lobo_alfa[-3])\n",
    "\n",
    "            print('Fitness:',lobo_alfa[-1])\n",
    "            \n",
    "            print('Tempo: ',elapsed)\n",
    "\n",
    "            print(' ')\n",
    "\n",
    "            print('_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ')\n",
    "            \n",
    "    if relatorio == True:\n",
    "        \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(perdas)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Perdas de Potência Ativa (pu)')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(j)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Fitness (J)')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_v)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Penalização de Tensão')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_gq)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Penalização de Geração de Reativo')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_tap)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Penalização do TAP')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_bsh)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Alcateia de Lobos Cinzentos')\n",
    "            plt.ylabel('Penalização do BShunt')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "\n",
    "    return j,perdas,pen_v,pen_gq,pen_tap,pen_bsh,alcateias,lobo_alfa, lobo_beta, lobo_delta, tempo\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 Método Enxame de Partículas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [],
   "source": [
    "def otimizacao_enxame_de_particulas(sep, zeta, psi, sigma, omega, max_iter, n_particles,c1,c2,w,valor_inicial,relatorio=True,inicial=True):\n",
    "        \n",
    "    enxame_fit = cria_enxame(sep,n_particles)\n",
    "    \n",
    "    if inicial == True:\n",
    "        \n",
    "        enxame_fit[0,:]=valor_inicial\n",
    "        \n",
    "    \n",
    "    v_anterior = cria_enxame(sep,n_particles)\n",
    "    \n",
    "    w_anterior = w\n",
    "    \n",
    "    j = []\n",
    "    \n",
    "    perdas = []\n",
    "    \n",
    "    pen_v = []\n",
    "    \n",
    "    pen_gq = []\n",
    "    \n",
    "    pen_tap = []\n",
    "    \n",
    "    pen_bsh = []\n",
    "\n",
    "    \n",
    "    v_lim_superior = np.repeat(sep.bus['max_vm_pu'][0], len(sep.gen))\n",
    "    \n",
    "    v_lim_inferior = np.repeat(sep.bus['min_vm_pu'][0], len(sep.gen))\n",
    "    \n",
    "    tap_pos, tap_neutral, tap_step_percent,valores_taps = coleta_dados_trafo(sep,relatorio=False)\n",
    "    \n",
    "    tap_max = np.repeat(valores_taps[-1], len(tap_pos))\n",
    "    \n",
    "    tap_min = np.repeat(valores_taps[0], len(tap_pos))\n",
    "    \n",
    "    bsh,b=coleta_dados_bshunt(sep)\n",
    "\n",
    "    bsh_max=[]\n",
    "    \n",
    "    bsh_min=[]\n",
    "    \n",
    "\n",
    "    for bs in bsh:\n",
    "        bsh_max.append([np.max(bs)])\n",
    "        bsh_min.append([np.min(bs)])\n",
    "\n",
    "\n",
    "    maximo = np.expand_dims(np.concatenate((v_lim_superior, tap_max, bsh_max), axis = None), 0)\n",
    "    minimo = np.expand_dims(np.concatenate((v_lim_inferior, tap_min, bsh_min), axis = None), 0)\n",
    "     \n",
    "    \n",
    "    lim_sup = np.tile(maximo, (n_particles,1))\n",
    "    lim_inf = np.tile(minimo, (n_particles,1))\n",
    "\n",
    "    \n",
    "    for i in range(0,max_iter):\n",
    " \n",
    "        r1 = np.random.random_sample(size = (n_particles,enxame_fit.shape[1]))\n",
    "        \n",
    "        r2 = np.random.random_sample(size = (n_particles,enxame_fit.shape[1]))\n",
    "        \n",
    "        start = time.time()\n",
    "       \n",
    "        enxame_fit = fluxo_de_pot(enxame_fit,sep)\n",
    "        \n",
    "        enxame_fit = fitness(enxame_fit,zeta,psi,sigma,omega)\n",
    "\n",
    "        if i==0:\n",
    "            \n",
    "            best_particles = enxame_fit.copy()\n",
    "\n",
    "            global_best = best_particles[np.argsort(best_particles[:, -1])][0,:].copy()\n",
    "            \n",
    "            global_matriz = np.tile(global_best, (n_particles,1))\n",
    "            \n",
    "           \n",
    "        for t in range(0,n_particles):\n",
    "                \n",
    "            if enxame_fit[t,-1] < best_particles[t,-1]:\n",
    "                    \n",
    "                best_particles[t,:] = enxame_fit[t,:].copy()\n",
    "                    \n",
    "\n",
    "        global_best = best_particles[np.argsort(best_particles[:, -1])][0,:].copy()\n",
    "            \n",
    "        global_matriz = np.tile(global_best, (n_particles,1))   \n",
    "            \n",
    "            \n",
    "        enxame_fit_anterior = enxame_fit.copy()\n",
    "        \n",
    "        w_novo = w_anterior*4*(1-w_anterior)\n",
    "        \n",
    "        v_novo = np.multiply(w_novo,v_anterior.copy()) + c1*np.multiply(r1,(best_particles.copy()-enxame_fit.copy())) + c2*np.multiply(r2,(global_matriz.copy()-enxame_fit.copy()))\n",
    "        \n",
    "        enxame_fit_novo = enxame_fit_anterior  + v_novo\n",
    "        \n",
    "        v_anterior = v_novo.copy()\n",
    "        \n",
    "        w_anterior = w_novo\n",
    "        \n",
    "        enxame_estat = enxame_fit_novo[:,-6:]\n",
    "\n",
    "        enxame_fit = np.concatenate(( np.clip(enxame_fit_novo[:,0:-6], a_min = lim_inf, a_max = lim_sup, out = enxame_fit_novo[:,0:-6]),enxame_estat),axis=1)   \n",
    "    \n",
    "        end = time.time()\n",
    "\n",
    "        elapsed = end - start\n",
    "\n",
    "        j.append(global_best[-1])\n",
    "\n",
    "        perdas.append(global_best[-6])\n",
    "\n",
    "        pen_v.append(global_best[-5])\n",
    "\n",
    "        pen_gq.append(global_best[-4])\n",
    "\n",
    "        pen_tap.append(global_best[-3])\n",
    "\n",
    "        pen_bsh.append(global_best[-2])\n",
    "        \n",
    "        tempo = []\n",
    "        \n",
    "        tempo.append(elapsed)\n",
    "      \n",
    "    \n",
    "        \n",
    "        if relatorio == True:\n",
    "            \n",
    "            print(' ')\n",
    "\n",
    "            print('Melhor Global da Iteração:',i)\n",
    "\n",
    "            print('Perdas (pu):', global_best[-6])\n",
    "\n",
    "            print('Penalização de Tensão:', global_best[-5])\n",
    "\n",
    "            print('Penalização de Geração de Reativo:', global_best[-4])\n",
    "\n",
    "            print('Penalização do Tap:', global_best[-3])\n",
    "\n",
    "            print('Penalização do Bshunt:', global_best[-3])\n",
    "\n",
    "            print('Fitness:', global_best[-1])\n",
    "            \n",
    "            print('Tempo: ', elapsed)\n",
    "\n",
    "            print(' ')\n",
    "\n",
    "            print('_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ')\n",
    "            \n",
    "    \n",
    "    if relatorio == True:\n",
    "        \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(perdas)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Perdas de Potência Ativa (pu)')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(j)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Fitness (J)')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_v)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Penalização de Tensão')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_gq)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Penalização de Geração de Reativo')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_tap)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Penalização do TAP')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "            plt.figure(figsize=(18,10))\n",
    "            plt.plot(pen_bsh)\n",
    "            plt.grid()\n",
    "            plt.title('Otimização Por Enxame de Partículas')\n",
    "            plt.ylabel('Penalização do BShunt')\n",
    "            plt.xlabel('Número da Iteração')\n",
    "            \n",
    "    return j,perdas,pen_v,pen_gq,pen_tap,pen_bsh,global_best, tempo\n",
    "\n",
    "      "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " \n",
      "Lobo Alfa da Iteração: 0\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.22807884216308594\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 1\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19867777824401855\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 2\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.22029662132263184\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 3\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18337321281433105\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 4\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20246171951293945\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 5\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20253419876098633\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 6\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.21188116073608398\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 7\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20818638801574707\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 8\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20818018913269043\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 9\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.21590662002563477\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 10\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19188523292541504\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 11\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18944692611694336\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 12\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1705305576324463\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 13\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18474769592285156\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 14\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17260527610778809\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 15\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2055814266204834\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 16\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2869584560394287\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 17\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2097773551940918\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 18\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.21285438537597656\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 19\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1912093162536621\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 20\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20462679862976074\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 21\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.28569984436035156\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 22\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.21425437927246094\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 23\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2776608467102051\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 24\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18996810913085938\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 25\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20482563972473145\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 26\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19028377532958984\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 27\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.202284574508667\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 28\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.25933074951171875\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 29\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.23606491088867188\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 30\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19917082786560059\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 31\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19881463050842285\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 32\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2663547992706299\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 33\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.30620765686035156\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 34\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1864466667175293\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 35\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1989288330078125\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 36\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18707871437072754\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 37\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20262813568115234\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 38\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.346923828125\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 39\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2092142105102539\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 40\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2094132900238037\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 41\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20391106605529785\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 42\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20197772979736328\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 43\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19904232025146484\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 44\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19949984550476074\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 45\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18891477584838867\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 46\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.3437771797180176\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 47\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19104933738708496\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 48\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1999220848083496\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 49\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1884152889251709\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 50\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20035958290100098\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 51\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.19269251823425293\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 52\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20460247993469238\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 53\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18066668510437012\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 54\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20209670066833496\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 55\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2894563674926758\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 56\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1734144687652588\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 57\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18346714973449707\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 58\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18188786506652832\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 59\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1925973892211914\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 60\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17116284370422363\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 61\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18220782279968262\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 62\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1723473072052002\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 63\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18406295776367188\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 64\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17022156715393066\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 65\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18260431289672852\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 66\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17175006866455078\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 67\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1820070743560791\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 68\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17211103439331055\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 69\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18145227432250977\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 70\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.170243501663208\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 71\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18097233772277832\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 72\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1723494529724121\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 73\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.2448279857635498\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 74\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18209576606750488\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 75\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.20573925971984863\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 76\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18935227394104004\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 77\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18536901473999023\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 78\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1697533130645752\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 79\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18278741836547852\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 80\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17238211631774902\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 81\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17969202995300293\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 82\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.16942620277404785\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 83\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1802051067352295\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 84\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17063403129577637\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 85\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1813359260559082\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 86\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.16974639892578125\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 87\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17925453186035156\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 88\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17043709754943848\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 89\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18026375770568848\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 90\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17185592651367188\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 91\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17952346801757812\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 92\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1689927577972412\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 93\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18425440788269043\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 94\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1720726490020752\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 95\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.1943953037261963\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 96\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.16977453231811523\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 97\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18076515197753906\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 98\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.17073464393615723\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Lobo Alfa da Iteração: 99\n",
      "Perdas (pu): 0.13589928511880933\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.041052390465845814\n",
      "Penalização do Tap: 3.6304029504427534e-28\n",
      "Penalização do Bshunt: 3.6304029504427534e-28\n",
      "Fitness: 0.13589928511913674\n",
      "Tempo:  0.18042922019958496\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "j,perdas,pen_v,pen_gq,pen_tap,pen_bsh,alcateias,lobo_alfa, lobo_beta, lobo_delta, elapsed = otimizacao_alcateia_de_lobos_cinzentos(sep14, 100, 0, 100, 0, 100, 12,relatorio=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " \n",
      "Melhor Global da Iteração: 0\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7293221950531006\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 1\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.724191427230835\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 2\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7565388679504395\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 3\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.752112627029419\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 4\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7237362861633301\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 5\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7554416656494141\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 6\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7327167987823486\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 7\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7209322452545166\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 8\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7332990169525146\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 9\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7279536724090576\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 10\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.70556640625\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 11\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7314894199371338\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 12\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.838007926940918\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 13\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7278122901916504\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 14\n",
      "Perdas (pu): 0.13531362621258666\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0080579129363638\n",
      "Penalização do Tap: 9.582662252481989e-28\n",
      "Penalização do Bshunt: 9.582662252481989e-28\n",
      "Fitness: 0.1353136262130778\n",
      "Tempo:  0.7668623924255371\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 15\n",
      "Perdas (pu): 0.13472199091997894\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06520737480229868\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13472199092047007\n",
      "Tempo:  0.7798042297363281\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 16\n",
      "Perdas (pu): 0.13472199091997894\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06520737480229868\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13472199092047007\n",
      "Tempo:  0.7261903285980225\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 17\n",
      "Perdas (pu): 0.13472199091997894\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06520737480229868\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13472199092047007\n",
      "Tempo:  0.7923667430877686\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 18\n",
      "Perdas (pu): 0.13472199091997894\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06520737480229868\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13472199092047007\n",
      "Tempo:  0.7915952205657959\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 19\n",
      "Perdas (pu): 0.1343683581658528\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.0583555287099863\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13436835816683504\n",
      "Tempo:  0.8009462356567383\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 20\n",
      "Perdas (pu): 0.1343683581658528\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.0583555287099863\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13436835816683504\n",
      "Tempo:  0.8445394039154053\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 21\n",
      "Perdas (pu): 0.1342799501911052\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.07487817717270255\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13427995019208744\n",
      "Tempo:  0.7535481452941895\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 22\n",
      "Perdas (pu): 0.13426300667329483\n",
      "Penalização de Tensão: 6.548361915784335e-15\n",
      "Penalização de Geração de Reativo: 0.08891130465562515\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13426300667427707\n",
      "Tempo:  0.7155852317810059\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 23\n",
      "Perdas (pu): 0.13426300667329483\n",
      "Penalização de Tensão: 6.548361915784335e-15\n",
      "Penalização de Geração de Reativo: 0.08891130465562515\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13426300667427707\n",
      "Tempo:  0.7437648773193359\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 24\n",
      "Perdas (pu): 0.13422144000654077\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06815850278291108\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.134221440007523\n",
      "Tempo:  0.7409517765045166\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 25\n",
      "Perdas (pu): 0.13422144000654077\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06815850278291108\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.134221440007523\n",
      "Tempo:  0.734612226486206\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 26\n",
      "Perdas (pu): 0.13422144000654077\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06815850278291108\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.134221440007523\n",
      "Tempo:  0.7490739822387695\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 27\n",
      "Perdas (pu): 0.13421701513925327\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06887806775944437\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342170151402355\n",
      "Tempo:  0.7805066108703613\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 28\n",
      "Perdas (pu): 0.13421701513925327\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06887806775944437\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342170151402355\n",
      "Tempo:  0.8457546234130859\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 29\n",
      "Perdas (pu): 0.13421701513925327\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06887806775944437\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342170151402355\n",
      "Tempo:  0.7805740833282471\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 30\n",
      "Perdas (pu): 0.1342148918061008\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.07358058598872659\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421489180708304\n",
      "Tempo:  0.7759058475494385\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 31\n",
      "Perdas (pu): 0.1342148918061008\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.07358058598872659\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421489180708304\n",
      "Tempo:  0.7328293323516846\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 32\n",
      "Perdas (pu): 0.13421365208642191\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.072675210269268\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421365208740416\n",
      "Tempo:  0.9070472717285156\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 33\n",
      "Perdas (pu): 0.13421365208642191\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.072675210269268\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421365208740416\n",
      "Tempo:  0.7223966121673584\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 34\n",
      "Perdas (pu): 0.13421365208642191\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.072675210269268\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421365208740416\n",
      "Tempo:  0.7194337844848633\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 35\n",
      "Perdas (pu): 0.13421360319420356\n",
      "Penalização de Tensão: 6.548361915784335e-15\n",
      "Penalização de Geração de Reativo: 0.0656790995304458\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342136031951858\n",
      "Tempo:  0.8452322483062744\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 36\n",
      "Perdas (pu): 0.13421360319420356\n",
      "Penalização de Tensão: 6.548361915784335e-15\n",
      "Penalização de Geração de Reativo: 0.0656790995304458\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342136031951858\n",
      "Tempo:  0.8236873149871826\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 37\n",
      "Perdas (pu): 0.13421345711221186\n",
      "Penalização de Tensão: 6.5483618395513695e-15\n",
      "Penalização de Geração de Reativo: 0.0688741046074171\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342134571131941\n",
      "Tempo:  0.7207050323486328\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 38\n",
      "Perdas (pu): 0.13421345711221186\n",
      "Penalização de Tensão: 6.5483618395513695e-15\n",
      "Penalização de Geração de Reativo: 0.0688741046074171\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342134571131941\n",
      "Tempo:  0.8308322429656982\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 39\n",
      "Perdas (pu): 0.1342118846429538\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06847179148920281\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421188464393605\n",
      "Tempo:  0.7294347286224365\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 40\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7078430652618408\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 41\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7033321857452393\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 42\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7286722660064697\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 43\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7012262344360352\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 44\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7057962417602539\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 45\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7004029750823975\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 46\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.6998369693756104\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 47\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7020046710968018\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 48\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7081503868103027\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 49\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.6999404430389404\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 50\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7010014057159424\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 51\n",
      "Perdas (pu): 0.13421184338254727\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.0698837641400908\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118433835295\n",
      "Tempo:  0.7296085357666016\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 52\n",
      "Perdas (pu): 0.13421180444328157\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06913729801307503\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118044442638\n",
      "Tempo:  0.7447795867919922\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 53\n",
      "Perdas (pu): 0.13421180444328157\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06913729801307503\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118044442638\n",
      "Tempo:  0.7333877086639404\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 54\n",
      "Perdas (pu): 0.13421180444328157\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06913729801307503\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118044442638\n",
      "Tempo:  0.7362751960754395\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 55\n",
      "Perdas (pu): 0.13421180444328157\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06913729801307503\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1342118044442638\n",
      "Tempo:  0.7081818580627441\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 56\n",
      "Perdas (pu): 0.13421179384105003\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06909080859601807\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421179384203227\n",
      "Tempo:  0.7106170654296875\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 57\n",
      "Perdas (pu): 0.13421174518042814\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06986877288664702\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421174518141038\n",
      "Tempo:  0.7153379917144775\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 58\n",
      "Perdas (pu): 0.1342117333885207\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.07004350477330464\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421173338950293\n",
      "Tempo:  0.714012622833252\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 59\n",
      "Perdas (pu): 0.1342117333885207\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.07004350477330464\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421173338950293\n",
      "Tempo:  0.6972916126251221\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 60\n",
      "Perdas (pu): 0.13421171602524418\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06976124258978167\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421171602622642\n",
      "Tempo:  0.7042551040649414\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 61\n",
      "Perdas (pu): 0.13421170067182323\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06962153487475166\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421170067280547\n",
      "Tempo:  0.7038259506225586\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 62\n",
      "Perdas (pu): 0.1342116999698041\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06958966996506692\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169997078633\n",
      "Tempo:  0.7356343269348145\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 63\n",
      "Perdas (pu): 0.1342116999698041\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06958966996506692\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169997078633\n",
      "Tempo:  0.7845659255981445\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 64\n",
      "Perdas (pu): 0.1342116999698041\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06958966996506692\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169997078633\n",
      "Tempo:  0.7178034782409668\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 65\n",
      "Perdas (pu): 0.1342116999698041\n",
      "Penalização de Tensão: 6.548361864962357e-15\n",
      "Penalização de Geração de Reativo: 0.06958966996506692\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169997078633\n",
      "Tempo:  0.7177834510803223\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 66\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.8151757717132568\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 67\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.8488914966583252\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 68\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.8371133804321289\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 69\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.7967262268066406\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 70\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.782254695892334\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 71\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.7701263427734375\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 72\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.7707939147949219\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 73\n",
      "Perdas (pu): 0.13421169986701764\n",
      "Penalização de Tensão: 6.548361890373346e-15\n",
      "Penalização de Geração de Reativo: 0.06954999009491379\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13421169986799988\n",
      "Tempo:  0.8096580505371094\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 74\n",
      "Perdas (pu): 0.13397697492859892\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06666312144741393\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13397697492909005\n",
      "Tempo:  0.7932496070861816\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 75\n",
      "Perdas (pu): 0.13388271003935467\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06169523598687086\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1338827100398458\n",
      "Tempo:  0.7845268249511719\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 76\n",
      "Perdas (pu): 0.133833989083118\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06827613991936289\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13383398908360913\n",
      "Tempo:  0.9255528450012207\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 77\n",
      "Perdas (pu): 0.13380255369108968\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.06745916815011885\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1338025536915808\n",
      "Tempo:  0.8024952411651611\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 78\n",
      "Perdas (pu): 0.13375823802376632\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08431937715705164\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13375823802425746\n",
      "Tempo:  1.0201210975646973\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 79\n",
      "Perdas (pu): 0.13375322599235795\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0822387024677305\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13375322599284908\n",
      "Tempo:  0.8217599391937256\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 80\n",
      "Perdas (pu): 0.13375321959600867\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08098230553727166\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1337532195964998\n",
      "Tempo:  0.8801538944244385\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 81\n",
      "Perdas (pu): 0.13375321959600867\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08098230553727166\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1337532195964998\n",
      "Tempo:  0.8212788105010986\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 82\n",
      "Perdas (pu): 0.13374714653490996\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08969210565277778\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.1337471465354011\n",
      "Tempo:  0.8066983222961426\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 83\n",
      "Perdas (pu): 0.13374548915092063\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08791277997469667\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374548915141177\n",
      "Tempo:  0.7669210433959961\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 84\n",
      "Perdas (pu): 0.13374548915092063\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08791277997469667\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374548915141177\n",
      "Tempo:  0.774632453918457\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 85\n",
      "Perdas (pu): 0.13374530646114952\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08849955052363562\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374530646164065\n",
      "Tempo:  0.7063338756561279\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 86\n",
      "Perdas (pu): 0.13374530646114952\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08849955052363562\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374530646164065\n",
      "Tempo:  0.7014601230621338\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 87\n",
      "Perdas (pu): 0.13374526221637661\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08845834223092501\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374526221686775\n",
      "Tempo:  0.7055590152740479\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 88\n",
      "Perdas (pu): 0.13374456027675513\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0883172661228282\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374456027724627\n",
      "Tempo:  0.725365161895752\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 89\n",
      "Perdas (pu): 0.13374448779794723\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08885041204401756\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374448779843837\n",
      "Tempo:  0.7762517929077148\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 90\n",
      "Perdas (pu): 0.13374448779794723\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08885041204401756\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374448779843837\n",
      "Tempo:  0.851081132888794\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 91\n",
      "Perdas (pu): 0.133744480535821\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08864377394376707\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374448053631213\n",
      "Tempo:  0.764772891998291\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 92\n",
      "Perdas (pu): 0.133744480535821\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08864377394376707\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374448053631213\n",
      "Tempo:  0.7615649700164795\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 93\n",
      "Perdas (pu): 0.1337443593195252\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0890584935445145\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374435932001633\n",
      "Tempo:  0.7461612224578857\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 94\n",
      "Perdas (pu): 0.1337443593195252\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0890584935445145\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374435932001633\n",
      "Tempo:  0.7555081844329834\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 95\n",
      "Perdas (pu): 0.13374431365366152\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.08879894026491138\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374431365415265\n",
      "Tempo:  0.802109956741333\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 96\n",
      "Perdas (pu): 0.13374428477279213\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0889313233832841\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374428477328326\n",
      "Tempo:  0.8412168025970459\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 97\n",
      "Perdas (pu): 0.13374428477279213\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0889313233832841\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374428477328326\n",
      "Tempo:  0.7771670818328857\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 98\n",
      "Perdas (pu): 0.13374428477279213\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0889313233832841\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374428477328326\n",
      "Tempo:  0.789926290512085\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      " \n",
      "Melhor Global da Iteração: 99\n",
      "Perdas (pu): 0.13374400598177083\n",
      "Penalização de Tensão: 3.2741809324811787e-15\n",
      "Penalização de Geração de Reativo: 0.0912418121357854\n",
      "Penalização do Tap: 1.2404588231118701e-28\n",
      "Penalização do Bshunt: 1.2404588231118701e-28\n",
      "Fitness: 0.13374400598226197\n",
      "Tempo:  0.764387845993042\n",
      " \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "j,perdas,pen_v,pen_gq,pen_tap,pen_bsh,global_best, tempo = otimizacao_enxame_de_particulas(sep14, 150, 0, 100, 0, 100, 50, 2, 2, 0.7,lobo_alfa,relatorio=True,inicial=False)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sistema Simulado Para a Solução:\n",
      "\n",
      "[1.04738723e+00 1.01843380e+00 1.02680138e+00 1.05982791e+00\n",
      " 9.50000000e-01 1.10000000e+00 1.10000000e+00 1.95178514e-01\n",
      " 1.33744006e-01 3.27418093e-15 9.12418121e-02 1.24045882e-28\n",
      " 0.00000000e+00 1.33744006e-01]\n"
     ]
    }
   ],
   "source": [
    "validacao(sep14,global_best)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------------------------+--------------------------+----------------------+----------------------+\n",
      "|   Tensões nas Barras (pu) |   Ângulos das Barras (°) |   Limites Inferiores |   Limites Superiores |\n",
      "|---------------------------+--------------------------+----------------------+----------------------|\n",
      "|                  1.06     |                  0       |                 0.94 |                 1.06 |\n",
      "|                  1.04739  |                 -4.98598 |                 0.94 |                 1.06 |\n",
      "|                  1.01843  |                -12.7068  |                 0.94 |                 1.06 |\n",
      "|                  1.02837  |                -10.3764  |                 0.94 |                 1.06 |\n",
      "|                  1.03937  |                 -8.96277 |                 0.94 |                 1.06 |\n",
      "|                  1.0268   |                -15.099   |                 0.94 |                 1.06 |\n",
      "|                  1.04699  |                -13.7125  |                 0.94 |                 1.06 |\n",
      "|                  1.05983  |                -13.7125  |                 0.94 |                 1.06 |\n",
      "|                  1.0218   |                -15.5709  |                 0.94 |                 1.06 |\n",
      "|                  1.01507  |                -15.7988  |                 0.94 |                 1.06 |\n",
      "|                  1.01738  |                -15.5944  |                 0.94 |                 1.06 |\n",
      "|                  1.012    |                -15.9993  |                 0.94 |                 1.06 |\n",
      "|                  1.00781  |                -16.0735  |                 0.94 |                 1.06 |\n",
      "|                  0.997032 |                -16.8678  |                 0.94 |                 1.06 |\n",
      "+---------------------------+--------------------------+----------------------+----------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "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jl/96lf87ne/Y6+99qKurq5LPkdJkiRJkjYF7R2D6XvAGGC7lFI/YDvgKuDm7ipMbevTpw91dXVUVVU1t02ZMoUDDzyQxx57jB/96Ec8/fTTvPjii4waNYqJEycyZ84cevfuzW233QbAxRdfzJgxY5rXv/DCCxk9ejQnnHACdXV1TJkyBYDvfve73H777cyYMYO6ujqOO+64Nm91u/LKKxk4cCCHHnooBx10EGPHjmXhwoXN/RdffHFzuANw+OGHc8MNNzTPNwVeAH/4wx+YPn06Tz/9NG+88QaXXXYZAP/3f//Hsccey5gxY5g5cyb33HMPF1xwAc888wy77rpr8/ovvPACDzzwAL/97W8ZPHgwP//5zznwwAOb9/Xaa69x7LHHcvXVVzNz5kzuu+8+Lr/8cn7xi18A8Oijj1JVVcXjjz/Oz372M+bNm7fW+pIkSZIkqf1jMK1OKf2waSaltBr4QUSc3z1llVAXXVHUk5x88sn07p19tAcccAC77LJL861wBx98MPPnz+/Q9m655RbOPfdc+vbtC8C5557LJZdcwtNPP81BBx20zvK77bYbjz32GL/5zW/4yU9+wg9/+EO+8Y1vMHHiRL7whS90aN/nn5+dYltssQXnn38+o0ePZtKkSdx1113svvvunHjiiQD069ePo48+mttvv52JEyc2rz9yZDYO/cCBA/nqV7+6zvbvuusu9thjD4466iggC7dOP/10brrpJk455ZTm5UaMGEGvXr3YZptt1grDJEmSJElS+wOm/4uIvimlvzQ1RMQOwKKC+UtTSv7m3QPsuOOOzT/37t17rfktt9yS9957r0Pba2ho4O677+bhhx9ubhs4cCCvv/56m+sNHTqUoUOHcv3113PVVVdx+eWX88///M9svfXW7d534XhJu+22G++99x5vvvkmDQ0NvPnmm9TW1jb3v/XWW+uMr/SBD3ygze2/8sor7Lbbbmu1VVZWMmvWrA5tR5IkSZKkzVl7A6Y3gKcj4n7gLWBn4GTgwYhouizkAsCAqQRmzZpFdXU11dXVJdlfdXU1F198MZdccklz27Jly9hmm21aXf6KK67g3HPPZb/99gOyQb7POeccvvWtb/Huu++y9dZbs9VWW7Fy5crmdZYuXdrqtt566y0GDhwIwJIlS9h6663ZZZddqK6uZs8991xrLKT33ntvrW229709+uija7UtWbKkZMdWkiRJkqRNQXvHYDoD+F9gN2Df/HUOsGs+vy/QetqgLvfII4+sNaZRV+rbty/Lly8H4Oyzz2bx4sVcdNFF3H333axYkT00cMmSJQwdOpR33nmn1W0sWbKEG2+8kdWrVwOQUuJHP/oRQ4YMab6aatCgQcydO5e//e1vpJT42c9+1uq27rzzTgD+9re/cdttt/HpT3+aXr16MWrUKOrr65k9e3bzPj73uc9x7733duj9jho1itdee605ZGpsbOS+++7joosu6tB2JEmSJGlT1tgIc+bA0qXZa6melaWNR3uvYPpJSumSthaIiO92QT3KzZ49m2uuuQaAcePGMWnSpOa+F154gaFDh1JbW0tjYyOXXnopEyZM4N5772Xu3LmMHz+eHXbYgblz5zJt2jQqKiqorKwEaH5K3FVXXUW/fv2YOHEijY2NjBw5kilTpnDGGWdwxx13MGzYMKqrq+nfvz+XXHIJq1at4phjjqFPnz4ATJo0aa1b7wqdd9553HTTTXz0ox+lT58+vPvuu3zoQx/ipz/9afMyp512Gvfccw8HHXQQH/rQh6itreXee+/lmGOOWeuKov32248TTzyRxYsXs//++/Od73wHyMZcmj59Ol/5yldYs2YNq1ev5rjjjuP8889vfsIeZGMnXXTRRc2Din/iE59oPkZbbLEFo0aN4uGHH2bMmDF8/etfZ9WqVYwfP55PfOITzcs3HeMRI0asNSi6JEmSJG0O6uth+HBYuBCuvx7OPBNqamDGDNhrr3JXp54iUkrlrqFbHHLIIenJJ59cp/3FF19k3333LUNFnbd8+XK23377cpdRchHByy+/3HyL3Kaup5ybdXV1a41tJXUnzzeVkuebSsnzTaXk+abu1NgIRxyRhUsA119fx+WX1wJZyPT445Bfz6DNREQ8lVI6pGX7em+Ri4jJHdh4u5eVJEmSJEkbh4aG98Ollurrs34J2h6DaVBE7B4Re2xoAvYsVcHa9DU2Njb/BWbEiBE899xz5S1IkiRJkjZT8+e33b9gQWnqUM/X1hhMhwOL27GNABZ1STUSUFVVtdbT4SRJkiRJ5TF4cNv9gwaVpg71fG0FTB05Tf5abCGSJEmSJKlnqa7Oxlqqr1+3r6Ym65egjYAppdTK6SNJkiRJkjYXVVUwfTocf/zaIVPTU+Qc4FtN2rqCSZIkSZIkbeZqamDWLHj11WyaMwcGDMjCJ6mJAZMkSZIkSWpTVVU2rVgBQ4aUuxr1RG09RU6SJEmSJEnaIAOmHmrmzJkcdthhRATDhg3jvvvuW2eZV155hf79+7Nq1apO7+dzn/sc3/72t4spdS0vvfQStbW1RAT77rsvEydObPe6CxYs4Mgjj2TYsGHsv//+vPDCC52q4fHHH+fggw/u1LqSJEmSJKnj2h0wRcRnI+KZiPhT/npRdxa2uTvqqKOYOnUqABMmTOD0009fZ5kPfvCDPPvss2y11Vad3s91113HF77wheb5sWPHMnr06E5vb++996aurg6AK6+8ki996UvtXnfcuHEcd9xxzJo1iwkTJtCrV+fyz49+9KM8+uijnVpXkiRJkiR1XLvGYIqIy4ALgSnAEqAK+FJE9Ekp/Wc31qcN2GmnnYpaf7vttuuiSorX0NDA0UcfDcAJJ5zQ6e1EBB/4wAe6qixJkiRJkrQB7b1E5JPAoSmlcSmlW1NK3wCGAv/YfaWpLe+++y61tbVUVFQ0XzE0cuRIdtxxR77+9a9z1llnccABB/CpT32K119/nQsuuIBDDz2U4447jmXLlgFw8803s88++1BbWwvApEmTmDx5MtOmTaO2tpaRI0cCsGbNGsaPH89hhx1GbW0tp556KosXL253rc8991zz7X4//vGP+fjHP87gwYMZP3588zIjR47k6aefZvz48dTW1jJnzhwAbr/9doYOHUptbS3HHnsszz//PAAPP/wwBx54IAMHDuTGG29k+PDhVFRU8MMf/rD5Fr1FixY1b//OO+/k8MMP56ijjuLoo49u3n5hbVOnTuWkk06ib9++jB07tjMfiyRJkiRJm6X2PkXuryml5YUNKaW/RETnB//pKV6bBisbS7OviirYo/NX5hTq06cPdXV1DBw4sLltypQp1NbW8thjjzFt2jQigoMOOohRo0bx05/+lO22244TTzyR2267jX/913/l4osvpk+fPkyePBmACy+8kNdee41FixY1twF897vf5fbbb+fJJ5+kb9++3HjjjZx22mk8+eST7ap1//33Z+rUqey5556sWLGCX/7yl7zyyisMGjSI8847j8rKyubaR48e3XyL3v3338/ll1/O73//e/bYYw9+8YtfcPzxx/OHP/yB4447jhtuuIHjjz+efv36MWPGDO67777mwC0imvf/wAMP8OUvf5lnnnmGyspKHn30UY499ljmzZu3Vm1vvvkmDz74ILNnz+70+E+SJEmSJG2O2nsF0zsRMaKwISI+Dazs+pJUrJNPPpnevXuzxRZbcMABB7Dvvvs23wp38MEHM3/+/A5t75ZbbuHcc8+lb9++AJx77rk89dRTPP300x2u7cwzzwSy8aN22mknFi5c2OZ+zzzzTPbYYw8ATjnlFN555x0eeuih5mUqKio444wzADj99NM58cQT19nOzTffzGmnnUZlZSUAxxxzDLvvvjt33XXXWss1XbF12GGHcf7553f4vUmSJEmStLlq7xVM/wI8HBG3AG8CuwBvA8d2V2El00VXFPUkO+64Y/PPvXv3Xmt+yy235L333uvQ9hoaGrj77rt5+OGHm9sGDhzI66+/3uHaCsdGqqioaLOWhoaG5qfSNdl5551ZunRpq9tbn1deeYUhQ4as1VZZWUlDQ8N6a5MkSZIkSe3XroAppTQvIvYBTgOqgQbg5ymlt7uzOLVu1qxZVFdXU11dXZL9VVdXc/HFF3PJJZc0ty1btoxtttmm2/e733778Z3vfKe5bfny5fTu3d5c9P3tLFmyZK22JUuWcNJJJ3VJnZIkSZIkbe7a/Rz4lNKKlNKUlNJ/5K9vR8Q/dWdxat0jjzzS5q1lxejbty/Ll2fDbZ199tksXryYiy66iLvvvpsVK1YAWTgzdOhQ3nnnnW6poclFF13ET3/6U958800A3n77bT72sY+tc+VRe7Zz33330diYjbX16KOP8tprr/HpT3+6y2uWJEmSJGlz1O5LQSJiKHAYsG1B8wXAD7q6KMHs2bO55pprABg3bhyTJk1q7nvhhRean6zW2NjIpZdeyoQJE7j33nuZO3cu48ePZ4cddmDu3LlMmzaNioqK5vGHJk+ezMqVK7nqqqvo168fEydOpLGxkZEjRzJlyhTOOOMM7rjjDoYNG0Z1dTX9+/fnkksuYdWqVRxzzDH06dMHyJ44V3jrXZOXXnqJz372swB885vf5K233uLUU0/l7LPPBqC2tpaHHnqIkSNHNtd+8803873vfa+59gcffJB77rmH0047jWXLlnHyySdTUVHBmjVruOqqq9h777154oknuPTSS2lsbKS2tpYbbriBAw88kJdffpnzzjsPgBEjRnDrrbdy2mmnsXTpUk477TS22morevXqxcMPP0y/fv14+eWX16ptzJgxnHDCpnfbpCRJkiRJ3SlSSq13REwEnkkp3R4RXwQ+BQwA/gfYChgGvJRS+odSFdsRhxxySGrtKWcvvvgi++67bxkq6rzly5ez/fbbl7sMdbOecm7W1dWtNe6V1J0831RKnm8qJc83lZLnm0rJ800R8VRK6ZCW7W3dIncVMDr/+ZPAkcDvUkqjUkqfAv4OeLWrC5UkSZIkSdLGpa2A6Rbg8vznlSm71GnLps6U0p+Agd1XmiRJkiRJkjYGbY3B1ItszKU5wBYRMQB4IyK+BUwDaoHdur1CSZIkSZIk9WhtBUznAB/Kf/4OcARwDVm4NAb4EzCiW6uTJEmSJElSj7fegCm/JW5B/vMvC7r2johK4I2U0ppurk+SJEmSJEk9XFtjMDWLiF0j4qOR2RI4D/hKRPTp3vIkSZIkSZLU07V1i1yh64G3ycZjugoYBfwfMBg4t3tKkyRJkiRJ0sagvQHTgJTSPwBExHnAccB84LfdVZgkSZIkSZI2Du26RQ7YAiAijgBeSym9lI/RtLTbKlPRXnvtNa699lpWrlxZ7lIkSZIkSdImrL0B07KIuBG4CbgNICL+nvZfAUVEVEXEDyKi1aueIqJXRIyPiKsi4taIOKyg79iIuCkixkbE1e3d58bsgQce4LDDDiMiGDNmTKvLPPLII0QE++yzD9/85jfX6nvvvfc477zzOPzww6moqGh1/R/96Efss88+1NbWtruu2tpaKioqqKura/c6bfnMZz7DjjvuyOTJkzu8bl1dHQMHDqS2tpba2lqqqqqoqqpaa37RokVdUuf6zJ07lyOPPJLvfe97PPvss/zgBz/o1v1JkiRJktQTtTdgugBYCfw38IOIqAIuByZ0YF/DgJ8DsZ7+s4C+KaVxwBXAnRGxRURsA9wCXJZSGgscEBHHdGC/G6VTTz2VqVOnss0223DHHXfw1ltvrbPMd7/73eYA6sorr1yr75lnnuHaa6/lYx/72Hr3cc4556w3vFqfuro6qqqqOrROW+68804OPPDATq8/evRo6urqqKur44QTTuCEE05Ya767/fKXv+THP/4xb731Fl/84hc59thju32fkiRJkiT1NO0KmFJKb6aU/i2l9K2UaUwpjQLeaO+OUkr3AsvbWOQk4Il82aVkgdaHgcOBV1JK7+XLPZ4vWxaNjTBnDtx9d/ba2Ni9+zvllFPYdtttufHGG9dqf+qpp6iurqZXr9Y/wkMPPbSo4GZjsP/++3POOeest/+yyy6jsrKyW2v46le/Sv/+/bn66quZOXMmAwcO7Nb9SZIkSZLUE3XkFredgD2BrQuabwQ+0kW17MbaAdRf8rZd19PeWo0XAhcCVFZWtnob1w477MDy5W3lXK3r1asXf/xjH44/vhcLF77fXlMD06atYffd32XNmjUd3m5b3n77bbbYYgs++9nPcuONN3LRRRex7bbbAjB+/HiuvvpqbrnlFlauXNn8nlatWsW4ceP43//9X3r37s1uu+3Gdddd13zV0fz58/niF7/IqlWr6NevH/vttx+rV69m+fLl/OIXv2Ds2LFUVlbyy1/+kkWLFnH++efz5JNP8pe//KW5rpQS77zzTvM+n3zyScaOHcvq1atZtWoVF1xwQZvBz+23385//dd/scsuu3DooYeyevXqtd7D/2/vzsP1rMt70X9vZlHgiEAAJaAY1K1grUER1AQErENRcTh4thQcD9Rhg/NWaovVigo47BYVB/CIFQ9Fj3i8LCAlVhS14LQ3iCgqyDwqk5AE7v3HehMXIQkpT9a7ksXnc13rynp+z3S/77qBlS/P7/f+zd/8Tc4///ysu+66WWeddXLkkUcuNyzbYIMNss022yw9b9GiRUmydPtRj3pUFi9enOuuuy5HHnlkfvCDH2TDDTfMdtttlw9/+MPZbLPNcuyxx+azn/1sdt9992yyySa54IILcvPNN+f444/PzjvvnCT513/913zoQx/KxhtvnMWLF+f5z39+3vCGNySZCJh+8pOfZL311ktV5e///u+zyy67LK3xpJNOygknnJD1118/6623Xt773vfmz//8z5f7vtxxxx2rberhELfeeusaUQcPDPqNcdJvjJN+Y5z0G+Ok31ih7r7Pr0xMh7szE08s/W7S1x9X5fxJ15mf5LwV7PtCkgMnbf8syS5JnpXkrEnjb05y7H3d68lPfnIvz4UXXrjc8fty1VXdj3pUd3Lvrx137L766vt12ZX6zW9+0wcddFD/7ne/60033bQ/8pGPdHf3L3/5yz7ooIO6u3vdddftE044Yek5hx9+eO+99969aNGi7u4+4ogjeu7cuX3XXXf1okWL+tGPfnS/733v6+7u22+/vXfbbbeeN2/e0vNPOOGEe2z/5je/6Yk2+ZPtt9++zz777O7uvuKKK3qTTTbpBQsWdHf3VVdd1VtuuWWfdtppy31NCxYs6I022qh/9atfdXf3ueee2xtuuOE9XsOHPvShvvvuu7u7+5JLLukdd9xxld6vgw46aOn7MtnrX//6nj9/fi9cuLC7u9/0pjf1y172sqX73/3ud/esWbP6qquu6u7uv/3bv+0XvOAFS/c/7GEP6x/+8Ifd3f373/++99hjj6X7PvCBDyyt9aKLLuqddtpp6b5TTz21t9lmm7722mu7u/v000/vTTfddOl9lnV/e3N1W/KzhXHQb4yTfmOc9BvjpN8YJ/3GinKdVV2D6TVJHtvdW3b3dku+kpw+JNyqqgdX1ZajzW9kYjrckqelNkpyQSamzW1fVUuenNpjdOxYXXZZ7vHk0mSXXDKxf6psttlmOfTQQ3Psscdm0aJFOfroo/PWt771Xsd1dz71qU/l1a9+ddZbb+LhtL/+67/Oeeedl//4j//I97///fzqV7/Ka17zmiTJgx70oLz4xS8eVNsXvvCFbLvttpk3b16SZOutt86LXvSiHHfccSs8fv78+dlxxx2TJLvttlse/ehH3+OY7bbbLnvttVee+cxn5lWvelUuueSSXHfdKs/GvIe77rorn/nMZ3LIIYdk/fXXT5IcdNBBOeWUU/KHP/xh6XF77LHH0qe85s6dm1/+8pdL9z30oQ/NiSeemMsvvzybbbZZzjjjjKX75syZk+c///nZb7/98va3vz0XX3xxbrrppiTJJz7xiey///7ZcsuJFt93332zxRZb5Itf/OL9ei0AAACwplrVKXKXdPdvljP+klW9UVXNS3Jgkm2q6ogkxyQ5OMnOSQ5J8v8medLoU+JmJ/mr7r4rye1VdWiSj1fVdUl+1t1nrep9V5eLL175/l/+Mtl116m7/+GHH56PfexjOeaYY3LjjTfmCU94wr2Oue6663L77bdnq63+NINwyfeXXXbZ0il8SwKPJNliiy0G1XXppZfe437JxPTEc845Z7nHX3HFFfe4/7I1fPe7380rXvGKfO9738tTnvKUJElV5bbbbrvXeavimmuuyZ133pkPfvCD+cQnPpEkWbx4cWbPnp2rrroqm222WZKJEGmJjTbaKHfeeefS7bPPPjvHHHNMnvrUp2aHHXbIu9/97jz3uc/NOeeck5e//OU5//zzs/POO2fx4sVZf/31c9ttt+WhD31oLr300jzjGc+413tz2VSmkQAAADANVjVg+ueqOijJv3T3bZPGz0iy16pcoLu/neTbywz/06T9d2fi0+OWd+6ZSc5cxVqnxE47rXz/nDlTe/9Zs2bl4IMPzrve9a4VhjdbbrllNt5441xzzTVLx6699tokyezZs5euUXTttdcufVrn+uuvv8c1Nthgg9xxxx1Lt2+88caV1jV79uycddY9875rrrkms2fPXu7xD3/4w3P55ZffY2xyDd/73vcya9aspeHSkprvr1mzZmXDDTfM+973vjz3uc9dOn7DDTfcI1RamfXWWy8f+chHcvTRR+dzn/tc9ttvv/z617/OOeeck2233XbpWk0LFy68x3mzZ8++x88iWfl7AwAAAGurVZ0id2KSzyW5uaoWjr4WJZk3ZZWtYWbPnljQe3l23HFi/1R717velY9/HOkmvgAAHFpJREFU/OPZfffdl7u/qvLa1742n/nMZ5YGM8cdd1ye/OQnZ9ddd106He3Tn/50kuSPf/xjTj755HtcY86cObnoooty6623JklOPfXUldZ04IEH5sorr1waMl199dX56le/mkMOOWSFxy9YsGDpFLTvf//7+fnPf750/2Mf+9hcc801+cUvfpEkOe2001Z6//uy7rrr5jWveU0++9nPZvHixUmSCy+8MM985jNX6fwli3rfddddWXfddTNv3rzcfffd6e7stNNOufLKK5e+lq9//ev3OPeQQw7JV77ylaUh3+mnn57rrrtupQugAwAAwNpoVZ9gOj/Jf11mrJKctHrLWXNtvXVy+unJs589sebSEjvumJxxRjJr1uq937e//e284x3vyG9/+9sceuihOemkk7Lddtst/fSyJWsp3XXXXTnqqKNy44035s1vfnM++MEP5ogjjsgznvGMrL/++pk1a1ZOO+20rLPOOllnnXVy2mmn5bWvfW2+/vWvZ8stt8xee+2V448/PgcccEBOPvnk7LrrrjnwwAOz6667Zs6cOdlvv/2SJPPnz88pp5ySl770pbn66qtz2GGH5cMf/nD22WefnHnmmXnnO9+ZI488MgsXLsxRRx2VF7zgBct9XfPmzcvHPvaxvPCFL8wWW2yRnXfeObvvvnuOOuqoJMnBBx+cww47LPvuu2922WWXPOlJT0qSHHDAAfnSl76URz7ykcu97gEHHLD0kwxe+cpX5oQTTli67+ijj84RRxyRpz/96dl4442zwQYb5JRTTsk666yTf/zHf8wXvvCFLFy4MO9973uzzz775C1veUuuuOKK7L///jn11FOz5557Zt68eVl//fVz00035dOf/nS23377zJ49O69//euz9957Z5dddln6SXcvfelL8+UvfzkveclL8vvf/z777bdfNthgg6y77rr51re+lW222WZ4gwAAAMAapCYWAL+Pg6qe2N0/Xc74jt19yfLOmW5z587t8847717jP//5z/O4xz3ufl/36quT3/1uYs2lOXOS7babCJ+m0i233JJNNtlkam/CtBvam6vLggULMn/+/OkugwcI/cY46TfGSb8xTvqNcdJv/zlXXz3xoWAXXzyx9M7s2VOfIUy1qjq/u+cuO75KTzB190+r6mFJDkiyWZKPJNm1u/999Za55tt664mvqVzQGwAAAFi7XXJJsu++9/xE+iWzoB71qOmra6qs0hpMVfW0JJckeV2SV4yG31NVr56qwgAAAADWRldffe9wKflT6LTM50HNCKu6yPc/JNmru5+Y5Jru/mOS5yQ5aMoqAwAAAFgLXXbZvcOlJS65ZGL/TLOqAVN1949G33eSdPeiJIunpCoAAACAtdTFF698/+jDyGeUVQ2YNqiqx04eqKrtk2yw+kuaenffffd0lwD3sCqL7QMAALB22Gmnle+fM2c8dYzTqgZMRyX5UVV9I8lOVXVykh8l+cCUVTZFHvzgB+eKK67IwoUL/aWeNUJ354YbbshGG2003aUAAACwGsyePbGg9/LsuOPE/plmVT9F7rSqmp/ktaNzbkny7O4+bwprmxKPeMQjcv311+fSSy/N4sVrxwy/O+64Q/gww2200UZ5xCMeMd1lAAAAsBpsvXVy+unJs589sebSEks+RW7WrOmrbaqsMGCqqveMvv3n7v5Vd/8wyQ/HU9bUWWeddbLVVltlq622mu5SVtmCBQvypCc9abrLAAAAAFbRjjsm55yT/O53E2suzZmTbLfdRPg0E63sCaYXJflvSW4cUy0AAAAAM8bWW0987brrdFcy9Va2BtPvu/vfu3uFAVNVzcBlqQAAAAD4z1hZwLQqK2B/anUVAgAAAMDaaWVT5OZX1V1jqwQAAACAtdLKAqafJjlsJfsryUdWbzkAAAAArG1WFjDd1N3fXtnJVfXR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\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_vbus(sep14,relatorio=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----------+--------------------+--------------------+-----------+--------------------+--------------------+\n",
      "|   P (pu) |   P Lim. Sup. (pu) |   P Lim. Inf. (pu) |    Q (pu) |   Q Lim. Sup. (pu) |   Q Lim. Inf. (pu) |\n",
      "|----------+--------------------+--------------------+-----------+--------------------+--------------------|\n",
      "|      0.4 |                1.4 |                  0 | 0.294321  |               0.5  |              -0.4  |\n",
      "|      0   |                1   |                  0 | 0.266216  |               0.4  |               0    |\n",
      "|      0   |                1   |                  0 | 0.542063  |               0.24 |              -0.06 |\n",
      "|      0   |                1   |                  0 | 0.0772316 |               0.24 |              -0.06 |\n",
      "+----------+--------------------+--------------------+-----------+--------------------+--------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_gen(sep14,relatorio=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------------------------------+---------------------------------+\n",
      "|   Perdas Totais Nas Linhas (pu) |   Perdas Totais Nas Linhas (MW) |\n",
      "|---------------------------------+---------------------------------|\n",
      "|                        0.133744 |                         13.3744 |\n",
      "+---------------------------------+---------------------------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tensao,angulo, vlims ,vlimi = coleta_dados_vbus(sep14,relatorio=False)\n",
    "matrizg = matriz_condutancia(sep14,relatorio=False)\n",
    "\n",
    "func_objetivo(tensao,angulo,matrizg,relatorio=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Carregamento do Trafo (pu):\n",
      "\n",
      "[0.36316005 0.22538769 0.5351628  0.07360791 0.38520836] \n",
      "\n",
      "Número de Trafos com TAP Controlado:\n",
      "\n",
      "3 \n",
      "\n",
      "Valores dos TAPs:\n",
      "\n",
      "[1.05 1.1  1.1 ] \n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "coleta_dados_trafo(sep14,relatorio=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
